/* Generated by Cython 0.16 on Fri Jun  8 14:39:53 2012 */

#define PY_SSIZE_T_CLEAN
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02040000
    #error Cython requires Python 2.4+.
#else
#include <stddef.h> /* For offsetof */
#ifndef offsetof
#define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif

#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif

#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif

#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif

#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif

#ifdef PYPY_VERSION
#define CYTHON_COMPILING_IN_PYPY 1
#define CYTHON_COMPILING_IN_CPYTHON 0
#else
#define CYTHON_COMPILING_IN_PYPY 0
#define CYTHON_COMPILING_IN_CPYTHON 1
#endif

#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyCFunction_Call PyObject_Call
#else
  #define __Pyx_PyCFunction_Call PyCFunction_Call
#endif

#if PY_VERSION_HEX < 0x02050000
  typedef int Py_ssize_t;
  #define PY_SSIZE_T_MAX INT_MAX
  #define PY_SSIZE_T_MIN INT_MIN
  #define PY_FORMAT_SIZE_T ""
  #define PyInt_FromSsize_t(z) PyInt_FromLong(z)
  #define PyInt_AsSsize_t(o)   __Pyx_PyInt_AsInt(o)
  #define PyNumber_Index(o)    PyNumber_Int(o)
  #define PyIndex_Check(o)     PyNumber_Check(o)
  #define PyErr_WarnEx(category, message, stacklevel) PyErr_Warn(category, message)
  #define __PYX_BUILD_PY_SSIZE_T "i"
#else
  #define __PYX_BUILD_PY_SSIZE_T "n"
#endif

#if PY_VERSION_HEX < 0x02060000
  #define Py_REFCNT(ob) (((PyObject*)(ob))->ob_refcnt)
  #define Py_TYPE(ob)   (((PyObject*)(ob))->ob_type)
  #define Py_SIZE(ob)   (((PyVarObject*)(ob))->ob_size)
  #define PyVarObject_HEAD_INIT(type, size) \
          PyObject_HEAD_INIT(type) size,
  #define PyType_Modified(t)

  typedef struct {
     void *buf;
     PyObject *obj;
     Py_ssize_t len;
     Py_ssize_t itemsize;
     int readonly;
     int ndim;
     char *format;
     Py_ssize_t *shape;
     Py_ssize_t *strides;
     Py_ssize_t *suboffsets;
     void *internal;
  } Py_buffer;

  #define PyBUF_SIMPLE 0
  #define PyBUF_WRITABLE 0x0001
  #define PyBUF_FORMAT 0x0004
  #define PyBUF_ND 0x0008
  #define PyBUF_STRIDES (0x0010 | PyBUF_ND)
  #define PyBUF_C_CONTIGUOUS (0x0020 | PyBUF_STRIDES)
  #define PyBUF_F_CONTIGUOUS (0x0040 | PyBUF_STRIDES)
  #define PyBUF_ANY_CONTIGUOUS (0x0080 | PyBUF_STRIDES)
  #define PyBUF_INDIRECT (0x0100 | PyBUF_STRIDES)
  #define PyBUF_RECORDS (PyBUF_STRIDES | PyBUF_FORMAT | PyBUF_WRITABLE)
  #define PyBUF_FULL (PyBUF_INDIRECT | PyBUF_FORMAT | PyBUF_WRITABLE)

  typedef int (*getbufferproc)(PyObject *, Py_buffer *, int);
  typedef void (*releasebufferproc)(PyObject *, Py_buffer *);
#endif

#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos) \
          PyCode_New(a, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos) \
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#endif

#if PY_MAJOR_VERSION < 3 && PY_MINOR_VERSION < 6
  #define PyUnicode_FromString(s) PyUnicode_Decode(s, strlen(s), "UTF-8", "strict")
#endif

#if PY_MAJOR_VERSION >= 3
  #define Py_TPFLAGS_CHECKTYPES 0
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif

#if (PY_VERSION_HEX < 0x02060000) || (PY_MAJOR_VERSION >= 3)
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif


#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_GET_LENGTH)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_GET_LENGTH(u) PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
#else
  #define CYTHON_PEP393_ENABLED 0
  #define __Pyx_PyUnicode_GET_LENGTH(u) PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
#endif

#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#endif

#if PY_VERSION_HEX < 0x02060000
  #define PyBytesObject                PyStringObject
  #define PyBytes_Type                 PyString_Type
  #define PyBytes_Check                PyString_Check
  #define PyBytes_CheckExact           PyString_CheckExact
  #define PyBytes_FromString           PyString_FromString
  #define PyBytes_FromStringAndSize    PyString_FromStringAndSize
  #define PyBytes_FromFormat           PyString_FromFormat
  #define PyBytes_DecodeEscape         PyString_DecodeEscape
  #define PyBytes_AsString             PyString_AsString
  #define PyBytes_AsStringAndSize      PyString_AsStringAndSize
  #define PyBytes_Size                 PyString_Size
  #define PyBytes_AS_STRING            PyString_AS_STRING
  #define PyBytes_GET_SIZE             PyString_GET_SIZE
  #define PyBytes_Repr                 PyString_Repr
  #define PyBytes_Concat               PyString_Concat
  #define PyBytes_ConcatAndDel         PyString_ConcatAndDel
#endif

#if PY_VERSION_HEX < 0x02060000
  #define PySet_Check(obj)             PyObject_TypeCheck(obj, &PySet_Type)
  #define PyFrozenSet_Check(obj)       PyObject_TypeCheck(obj, &PyFrozenSet_Type)
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif

#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)

#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
#endif

#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif

#if PY_VERSION_HEX < 0x03020000
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif

#if (PY_MAJOR_VERSION < 3) || (PY_VERSION_HEX >= 0x03010300)
  #define __Pyx_PySequence_GetSlice(obj, a, b) PySequence_GetSlice(obj, a, b)
  #define __Pyx_PySequence_SetSlice(obj, a, b, value) PySequence_SetSlice(obj, a, b, value)
  #define __Pyx_PySequence_DelSlice(obj, a, b) PySequence_DelSlice(obj, a, b)
#else
  #define __Pyx_PySequence_GetSlice(obj, a, b) (unlikely(!(obj)) ? \
        (PyErr_SetString(PyExc_SystemError, "null argument to internal routine"), (PyObject*)0) : \
        (likely((obj)->ob_type->tp_as_mapping) ? (PySequence_GetSlice(obj, a, b)) : \
            (PyErr_Format(PyExc_TypeError, "'%.200s' object is unsliceable", (obj)->ob_type->tp_name), (PyObject*)0)))
  #define __Pyx_PySequence_SetSlice(obj, a, b, value) (unlikely(!(obj)) ? \
        (PyErr_SetString(PyExc_SystemError, "null argument to internal routine"), -1) : \
        (likely((obj)->ob_type->tp_as_mapping) ? (PySequence_SetSlice(obj, a, b, value)) : \
            (PyErr_Format(PyExc_TypeError, "'%.200s' object doesn't support slice assignment", (obj)->ob_type->tp_name), -1)))
  #define __Pyx_PySequence_DelSlice(obj, a, b) (unlikely(!(obj)) ? \
        (PyErr_SetString(PyExc_SystemError, "null argument to internal routine"), -1) : \
        (likely((obj)->ob_type->tp_as_mapping) ? (PySequence_DelSlice(obj, a, b)) : \
            (PyErr_Format(PyExc_TypeError, "'%.200s' object doesn't support slice deletion", (obj)->ob_type->tp_name), -1)))
#endif

#if PY_MAJOR_VERSION >= 3
  #define PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : PyInstanceMethod_New(func))
#endif

#if PY_VERSION_HEX < 0x02050000
  #define __Pyx_GetAttrString(o,n)   PyObject_GetAttrString((o),((char *)(n)))
  #define __Pyx_SetAttrString(o,n,a) PyObject_SetAttrString((o),((char *)(n)),(a))
  #define __Pyx_DelAttrString(o,n)   PyObject_DelAttrString((o),((char *)(n)))
#else
  #define __Pyx_GetAttrString(o,n)   PyObject_GetAttrString((o),(n))
  #define __Pyx_SetAttrString(o,n,a) PyObject_SetAttrString((o),(n),(a))
  #define __Pyx_DelAttrString(o,n)   PyObject_DelAttrString((o),(n))
#endif

#if PY_VERSION_HEX < 0x02050000
  #define __Pyx_NAMESTR(n) ((char *)(n))
  #define __Pyx_DOCSTR(n)  ((char *)(n))
#else
  #define __Pyx_NAMESTR(n) (n)
  #define __Pyx_DOCSTR(n)  (n)
#endif

#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#if defined(WIN32) || defined(MS_WINDOWS)
#define _USE_MATH_DEFINES
#endif
#include <math.h>
#define __PYX_HAVE__casuarius
#define __PYX_HAVE_API__casuarius
#include "math.h"
#include <string>
#include <vector>
#include "cysw_support.h"
#include "cassowary/SymbolicWeight.h"
#include "cassowary/Strength.h"
#include "cassowary/Variable.h"
#include "cassowary/LinearExpression.h"
#include "cassowary/Constraint.h"
#include "ios"
#include "new"
#include "stdexcept"
#include "typeinfo"
#include "cassowary/LinearEquation.h"
#include "cassowary/LinearInequality.h"
#include "cassowary/SimplexSolver.h"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#ifdef PYREX_WITHOUT_ASSERTIONS
#define CYTHON_WITHOUT_ASSERTIONS
#endif


/* inline attribute */
#ifndef CYTHON_INLINE
  #if defined(__GNUC__)
    #define CYTHON_INLINE __inline__
  #elif defined(_MSC_VER)
    #define CYTHON_INLINE __inline
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_INLINE inline
  #else
    #define CYTHON_INLINE
  #endif
#endif

/* unused attribute */
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif

typedef struct {PyObject **p; char *s; const long n; const char* encoding; const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry; /*proto*/


/* Type Conversion Predeclarations */

#define __Pyx_PyBytes_FromUString(s) PyBytes_FromString((char*)s)
#define __Pyx_PyBytes_AsUString(s)   ((unsigned char*) PyBytes_AsString(s))

#define __Pyx_Owned_Py_None(b) (Py_INCREF(Py_None), Py_None)
#define __Pyx_PyBool_FromLong(b) ((b) ? (Py_INCREF(Py_True), Py_True) : (Py_INCREF(Py_False), Py_False))
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x);

static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
static CYTHON_INLINE size_t __Pyx_PyInt_AsSize_t(PyObject*);

#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))

#ifdef __GNUC__
  /* Test for GCC > 2.95 */
  #if __GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95))
    #define likely(x)   __builtin_expect(!!(x), 1)
    #define unlikely(x) __builtin_expect(!!(x), 0)
  #else /* __GNUC__ > 2 ... */
    #define likely(x)   (x)
    #define unlikely(x) (x)
  #endif /* __GNUC__ > 2 ... */
#else /* __GNUC__ */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */
    
static PyObject *__pyx_m;
static PyObject *__pyx_b;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;


static const char *__pyx_f[] = {
  "casuarius.pyx",
};

/*--- Type declarations ---*/
struct __pyx_obj_9casuarius_Solver;
struct __pyx_obj_9casuarius_SolverEditContext;
struct __pyx_obj_9casuarius_LinearConstraint;
struct __pyx_obj_9casuarius_EQConstraint;
struct __pyx_obj_9casuarius___pyx_scope_struct_1_genexpr;
struct __pyx_obj_9casuarius___pyx_scope_struct_5_genexpr;
struct __pyx_obj_9casuarius_LinearSymbolic;
struct __pyx_obj_9casuarius_LEConstraint;
struct __pyx_obj_9casuarius_SymbolicWeight;
struct __pyx_obj_9casuarius_LinearExpression;
struct __pyx_obj_9casuarius___pyx_scope_struct_2_reduce_terms;
struct __pyx_obj_9casuarius_ConstraintVariable;
struct __pyx_obj_9casuarius_Term;
struct __pyx_obj_9casuarius___pyx_scope_struct____mul__;
struct __pyx_obj_9casuarius_Strength;
struct __pyx_obj_9casuarius_GEConstraint;
struct __pyx_obj_9casuarius___pyx_scope_struct_3_genexpr;
struct __pyx_obj_9casuarius___pyx_scope_struct_4___repr__;
struct __pyx_opt_args_9casuarius_almost_equal;
struct __pyx_opt_args_9casuarius_6Solver__begin_edit_suggest_values;

/* "casuarius.pyx":238
 * 
 * 
 * cdef bint almost_equal(double a, double b, double eps=1e-8):             # <<<<<<<<<<<<<<
 *     return fabs(a - b) < eps
 * 
 */
struct __pyx_opt_args_9casuarius_almost_equal {
  int __pyx_n;
  double eps;
};

/* "casuarius.pyx":769
 *         return SolverEditContext(self, var_vals, default_strength, default_weight)
 * 
 *     cdef object _begin_edit_suggest_values(self, var_vals, Strength default_strength=strong, double default_weight=1.0):             # <<<<<<<<<<<<<<
 *         cdef ConstraintVariable variable
 *         cdef double value
 */
struct __pyx_opt_args_9casuarius_6Solver__begin_edit_suggest_values {
  int __pyx_n;
  struct __pyx_obj_9casuarius_Strength *default_strength;
  double default_weight;
};

/* "casuarius.pyx":728
 *             return abs(self.rhs.value - self.lhs.value)
 * 
 * cdef class Solver:             # <<<<<<<<<<<<<<
 *     cdef ClSimplexSolver *solver
 *     cdef bint _autosolve
 */
struct __pyx_obj_9casuarius_Solver {
  PyObject_HEAD
  struct __pyx_vtabstruct_9casuarius_Solver *__pyx_vtab;
  SimplexSolver *solver;
  int _autosolve;
  int _explaining;
};


/* "casuarius.pyx":804
 * 
 * 
 * cdef class SolverEditContext:             # <<<<<<<<<<<<<<
 *     """ Context manager for suggesting variables in a solver.
 *     """
 */
struct __pyx_obj_9casuarius_SolverEditContext {
  PyObject_HEAD
  struct __pyx_obj_9casuarius_Solver *solver;
  PyObject *suggest_var_vals;
  struct __pyx_obj_9casuarius_Strength *default_strength;
  double default_weight;
};


/* "casuarius.pyx":591
 * 
 * 
 * cdef class LinearConstraint:             # <<<<<<<<<<<<<<
 *     cdef readonly LinearExpression lhs
 *     cdef readonly LinearExpression rhs
 */
struct __pyx_obj_9casuarius_LinearConstraint {
  PyObject_HEAD
  struct __pyx_vtabstruct_9casuarius_LinearConstraint *__pyx_vtab;
  struct __pyx_obj_9casuarius_LinearExpression *lhs;
  struct __pyx_obj_9casuarius_LinearExpression *rhs;
  struct __pyx_obj_9casuarius_Strength *_strength;
  double _weight;
  PyObject *op;
  P_Constraint *cl_linear_constraint;
};


/* "casuarius.pyx":710
 *             return max(self.rhs.value - self.lhs.value, 0.0)
 * 
 * cdef class EQConstraint(LinearConstraint):             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, lhs, rhs, Strength strength=required, double weight=1.0):
 */
struct __pyx_obj_9casuarius_EQConstraint {
  struct __pyx_obj_9casuarius_LinearConstraint __pyx_base;
};


/* "casuarius.pyx":183
 * 
 *     def __mul__(self, double other):
 *         new_weights = tuple(x*other for x in self.weights)             # <<<<<<<<<<<<<<
 *         return SymbolicWeight(new_weights)
 * 
 */
struct __pyx_obj_9casuarius___pyx_scope_struct_1_genexpr {
  PyObject_HEAD
  struct __pyx_obj_9casuarius___pyx_scope_struct____mul__ *__pyx_outer_scope;
  PyObject *__pyx_v_x;
  PyObject *__pyx_t_0;
  Py_ssize_t __pyx_t_1;
  PyObject *(*__pyx_t_2)(PyObject *);
};


/* "casuarius.pyx":512
 *         if len(self.terms) > 0:
 *             s = sorted(self.terms, key=operator.attrgetter('var.name'))
 *             terms = ' + '.join(str(term) for term in s)             # <<<<<<<<<<<<<<
 *             if self.constant > 0.0:
 *                 terms += ' + %s' % self.constant
 */
struct __pyx_obj_9casuarius___pyx_scope_struct_5_genexpr {
  PyObject_HEAD
  struct __pyx_obj_9casuarius___pyx_scope_struct_4___repr__ *__pyx_outer_scope;
  PyObject *__pyx_v_term;
  PyObject *__pyx_t_0;
  Py_ssize_t __pyx_t_1;
  PyObject *(*__pyx_t_2)(PyObject *);
};


/* "casuarius.pyx":242
 * 
 * 
 * cdef class LinearSymbolic:             # <<<<<<<<<<<<<<
 * 
 *     def nonlinear(self, msg):
 */
struct __pyx_obj_9casuarius_LinearSymbolic {
  PyObject_HEAD
  struct __pyx_vtabstruct_9casuarius_LinearSymbolic *__pyx_vtab;
};


/* "casuarius.pyx":674
 *         return NULL
 * 
 * cdef class LEConstraint(LinearConstraint):             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, lhs, rhs, Strength strength=required, double weight=1.0):
 */
struct __pyx_obj_9casuarius_LEConstraint {
  struct __pyx_obj_9casuarius_LinearConstraint __pyx_base;
};


/* "casuarius.pyx":162
 *     void delete_P_Constraint(P_Constraint *pcn)
 * 
 * cdef class SymbolicWeight:             # <<<<<<<<<<<<<<
 *     cdef ClSymbolicWeight *symbolic_weight
 *     cdef readonly tuple weights
 */
struct __pyx_obj_9casuarius_SymbolicWeight {
  PyObject_HEAD
  SymbolicWeight *symbolic_weight;
  PyObject *weights;
};


/* "casuarius.pyx":486
 * 
 * 
 * cdef class LinearExpression(LinearSymbolic):             # <<<<<<<<<<<<<<
 *     cdef public tuple terms
 *     cdef public double constant
 */
struct __pyx_obj_9casuarius_LinearExpression {
  struct __pyx_obj_9casuarius_LinearSymbolic __pyx_base;
  PyObject *terms;
  double constant;
};


/* "casuarius.pyx":490
 *     cdef public double constant
 * 
 *     def reduce_terms(self, terms):             # <<<<<<<<<<<<<<
 *         mapping = defaultdict(float)
 *         for term in terms:
 */
struct __pyx_obj_9casuarius___pyx_scope_struct_2_reduce_terms {
  PyObject_HEAD
  PyObject *__pyx_v_mapping;
};


/* "casuarius.pyx":361
 * 
 * 
 * cdef class ConstraintVariable(LinearSymbolic):             # <<<<<<<<<<<<<<
 *     cdef ClVariable *variable
 *     cdef readonly bytes name
 */
struct __pyx_obj_9casuarius_ConstraintVariable {
  struct __pyx_obj_9casuarius_LinearSymbolic __pyx_base;
  Variable *variable;
  PyObject *name;
};


/* "casuarius.pyx":424
 * 
 * 
 * cdef class Term(LinearSymbolic):             # <<<<<<<<<<<<<<
 *     cdef public ConstraintVariable var
 *     cdef public double coeff
 */
struct __pyx_obj_9casuarius_Term {
  struct __pyx_obj_9casuarius_LinearSymbolic __pyx_base;
  struct __pyx_obj_9casuarius_ConstraintVariable *var;
  double coeff;
};


/* "casuarius.pyx":182
 *         return self.symbolic_weight.AsDouble()
 * 
 *     def __mul__(self, double other):             # <<<<<<<<<<<<<<
 *         new_weights = tuple(x*other for x in self.weights)
 *         return SymbolicWeight(new_weights)
 */
struct __pyx_obj_9casuarius___pyx_scope_struct____mul__ {
  PyObject_HEAD
  double __pyx_v_other;
  PyObject *__pyx_v_self;
};


/* "casuarius.pyx":196
 * 
 * 
 * cdef class Strength:             # <<<<<<<<<<<<<<
 *     cdef ClStrength *strength
 *     cdef readonly bytes name
 */
struct __pyx_obj_9casuarius_Strength {
  PyObject_HEAD
  Strength *strength;
  PyObject *name;
  struct __pyx_obj_9casuarius_SymbolicWeight *symbolic_weight;
  int is_required;
};


/* "casuarius.pyx":692
 *             return max(self.lhs.value - self.rhs.value, 0.0)
 * 
 * cdef class GEConstraint(LinearConstraint):             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, lhs, rhs, Strength strength=required, double weight=1.0):
 */
struct __pyx_obj_9casuarius_GEConstraint {
  struct __pyx_obj_9casuarius_LinearConstraint __pyx_base;
};


/* "casuarius.pyx":494
 *         for term in terms:
 *             mapping[term.var] += term.coeff
 *         terms = tuple(Term(var, coeff) for (var, coeff) in mapping.iteritems()             # <<<<<<<<<<<<<<
 *                       if not almost_equal(coeff, 0.0))
 *         return terms
 */
struct __pyx_obj_9casuarius___pyx_scope_struct_3_genexpr {
  PyObject_HEAD
  struct __pyx_obj_9casuarius___pyx_scope_struct_2_reduce_terms *__pyx_outer_scope;
  PyObject *__pyx_v_coeff;
  PyObject *__pyx_v_var;
  PyObject *__pyx_t_0;
  Py_ssize_t __pyx_t_1;
  PyObject *(*__pyx_t_2)(PyObject *);
};


/* "casuarius.pyx":509
 *             return value
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         if len(self.terms) > 0:
 *             s = sorted(self.terms, key=operator.attrgetter('var.name'))
 */
struct __pyx_obj_9casuarius___pyx_scope_struct_4___repr__ {
  PyObject_HEAD
  PyObject *__pyx_v_s;
};



/* "casuarius.pyx":591
 * 
 * 
 * cdef class LinearConstraint:             # <<<<<<<<<<<<<<
 *     cdef readonly LinearExpression lhs
 *     cdef readonly LinearExpression rhs
 */

struct __pyx_vtabstruct_9casuarius_LinearConstraint {
  int (*explains_exception)(struct __pyx_obj_9casuarius_LinearConstraint *, PyObject *, int __pyx_skip_dispatch);
  P_Constraint *(*as_cl_linear_constraint)(struct __pyx_obj_9casuarius_LinearConstraint *);
};
static struct __pyx_vtabstruct_9casuarius_LinearConstraint *__pyx_vtabptr_9casuarius_LinearConstraint;


/* "casuarius.pyx":692
 *             return max(self.lhs.value - self.rhs.value, 0.0)
 * 
 * cdef class GEConstraint(LinearConstraint):             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, lhs, rhs, Strength strength=required, double weight=1.0):
 */

struct __pyx_vtabstruct_9casuarius_GEConstraint {
  struct __pyx_vtabstruct_9casuarius_LinearConstraint __pyx_base;
};
static struct __pyx_vtabstruct_9casuarius_GEConstraint *__pyx_vtabptr_9casuarius_GEConstraint;


/* "casuarius.pyx":242
 * 
 * 
 * cdef class LinearSymbolic:             # <<<<<<<<<<<<<<
 * 
 *     def nonlinear(self, msg):
 */

struct __pyx_vtabstruct_9casuarius_LinearSymbolic {
  struct __pyx_obj_9casuarius_LinearConstraint *(*_richcmp_le)(struct __pyx_obj_9casuarius_LinearSymbolic *, PyObject *, int __pyx_skip_dispatch);
  struct __pyx_obj_9casuarius_LinearConstraint *(*_richcmp_ge)(struct __pyx_obj_9casuarius_LinearSymbolic *, PyObject *, int __pyx_skip_dispatch);
  struct __pyx_obj_9casuarius_LinearConstraint *(*_richcmp_eq)(struct __pyx_obj_9casuarius_LinearSymbolic *, PyObject *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_9casuarius_LinearSymbolic *__pyx_vtabptr_9casuarius_LinearSymbolic;


/* "casuarius.pyx":424
 * 
 * 
 * cdef class Term(LinearSymbolic):             # <<<<<<<<<<<<<<
 *     cdef public ConstraintVariable var
 *     cdef public double coeff
 */

struct __pyx_vtabstruct_9casuarius_Term {
  struct __pyx_vtabstruct_9casuarius_LinearSymbolic __pyx_base;
};
static struct __pyx_vtabstruct_9casuarius_Term *__pyx_vtabptr_9casuarius_Term;


/* "casuarius.pyx":486
 * 
 * 
 * cdef class LinearExpression(LinearSymbolic):             # <<<<<<<<<<<<<<
 *     cdef public tuple terms
 *     cdef public double constant
 */

struct __pyx_vtabstruct_9casuarius_LinearExpression {
  struct __pyx_vtabstruct_9casuarius_LinearSymbolic __pyx_base;
  P_LinearExpression (*as_cl_linear_expression)(struct __pyx_obj_9casuarius_LinearExpression *);
};
static struct __pyx_vtabstruct_9casuarius_LinearExpression *__pyx_vtabptr_9casuarius_LinearExpression;


/* "casuarius.pyx":710
 *             return max(self.rhs.value - self.lhs.value, 0.0)
 * 
 * cdef class EQConstraint(LinearConstraint):             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, lhs, rhs, Strength strength=required, double weight=1.0):
 */

struct __pyx_vtabstruct_9casuarius_EQConstraint {
  struct __pyx_vtabstruct_9casuarius_LinearConstraint __pyx_base;
};
static struct __pyx_vtabstruct_9casuarius_EQConstraint *__pyx_vtabptr_9casuarius_EQConstraint;


/* "casuarius.pyx":674
 *         return NULL
 * 
 * cdef class LEConstraint(LinearConstraint):             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, lhs, rhs, Strength strength=required, double weight=1.0):
 */

struct __pyx_vtabstruct_9casuarius_LEConstraint {
  struct __pyx_vtabstruct_9casuarius_LinearConstraint __pyx_base;
};
static struct __pyx_vtabstruct_9casuarius_LEConstraint *__pyx_vtabptr_9casuarius_LEConstraint;


/* "casuarius.pyx":728
 *             return abs(self.rhs.value - self.lhs.value)
 * 
 * cdef class Solver:             # <<<<<<<<<<<<<<
 *     cdef ClSimplexSolver *solver
 *     cdef bint _autosolve
 */

struct __pyx_vtabstruct_9casuarius_Solver {
  PyObject *(*_begin_edit_suggest_values)(struct __pyx_obj_9casuarius_Solver *, PyObject *, struct __pyx_opt_args_9casuarius_6Solver__begin_edit_suggest_values *__pyx_optional_args);
  PyObject *(*_end_edit)(struct __pyx_obj_9casuarius_Solver *);
};
static struct __pyx_vtabstruct_9casuarius_Solver *__pyx_vtabptr_9casuarius_Solver;


/* "casuarius.pyx":361
 * 
 * 
 * cdef class ConstraintVariable(LinearSymbolic):             # <<<<<<<<<<<<<<
 *     cdef ClVariable *variable
 *     cdef readonly bytes name
 */

struct __pyx_vtabstruct_9casuarius_ConstraintVariable {
  struct __pyx_vtabstruct_9casuarius_LinearSymbolic __pyx_base;
};
static struct __pyx_vtabstruct_9casuarius_ConstraintVariable *__pyx_vtabptr_9casuarius_ConstraintVariable;
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname); /*proto*/
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil) \
          if (acquire_gil) { \
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure(); \
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__); \
              PyGILState_Release(__pyx_gilstate_save); \
          } else { \
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__); \
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil) \
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext() \
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif /* CYTHON_REFNANNY */
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

static PyObject *__Pyx_GetName(PyObject *dict, PyObject *name); /*proto*/

static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found); /*proto*/

static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name); /*proto*/

static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[], \
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args, \
    const char* function_name); /*proto*/

static CYTHON_INLINE PyObject* __Pyx_PyObject_Append(PyObject* L, PyObject* x) {
    if (likely(PyList_CheckExact(L))) {
        if (PyList_Append(L, x) < 0) return NULL;
        Py_INCREF(Py_None);
        return Py_None; /* this is just to have an accurate signature */
    }
    else {
        PyObject *r, *m;
        m = __Pyx_GetAttrString(L, "append");
        if (!m) return NULL;
        r = PyObject_CallFunctionObjArgs(m, x, NULL);
        Py_DECREF(m);
        return r;
    }
}

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb); /*proto*/
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb); /*proto*/

static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause); /*proto*/

static int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact); /*proto*/

static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (!j) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
#define __Pyx_GetItemInt_List(o, i, size, to_py_func) (((size) <= sizeof(Py_ssize_t)) ? \
                                                    __Pyx_GetItemInt_List_Fast(o, i) : \
                                                    __Pyx_GetItemInt_Generic(o, to_py_func(i)))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i) {
    if (likely(o != Py_None)) {
        if (likely((0 <= i) & (i < PyList_GET_SIZE(o)))) {
            PyObject *r = PyList_GET_ITEM(o, i);
            Py_INCREF(r);
            return r;
        }
        else if ((-PyList_GET_SIZE(o) <= i) & (i < 0)) {
            PyObject *r = PyList_GET_ITEM(o, PyList_GET_SIZE(o) + i);
            Py_INCREF(r);
            return r;
        }
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}
#define __Pyx_GetItemInt_Tuple(o, i, size, to_py_func) (((size) <= sizeof(Py_ssize_t)) ? \
                                                    __Pyx_GetItemInt_Tuple_Fast(o, i) : \
                                                    __Pyx_GetItemInt_Generic(o, to_py_func(i)))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i) {
    if (likely(o != Py_None)) {
        if (likely((0 <= i) & (i < PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, i);
            Py_INCREF(r);
            return r;
        }
        else if ((-PyTuple_GET_SIZE(o) <= i) & (i < 0)) {
            PyObject *r = PyTuple_GET_ITEM(o, PyTuple_GET_SIZE(o) + i);
            Py_INCREF(r);
            return r;
        }
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}
#define __Pyx_GetItemInt(o, i, size, to_py_func) (((size) <= sizeof(Py_ssize_t)) ? \
                                                    __Pyx_GetItemInt_Fast(o, i) : \
                                                    __Pyx_GetItemInt_Generic(o, to_py_func(i)))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i) {
    if (PyList_CheckExact(o)) {
        Py_ssize_t n = (likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if (likely((n >= 0) & (n < PyList_GET_SIZE(o)))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = (likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if (likely((n >= 0) & (n < PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (likely(i >= 0)) {
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_item)) {
            return m->sq_item(o, i);
        }
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

static CYTHON_INLINE void __Pyx_RaiseClosureNameError(const char *varname);

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type); /*proto*/

static double __Pyx__PyObject_AsDouble(PyObject* obj); /* proto */
#define __Pyx_PyObject_AsDouble(obj) \
((likely(PyFloat_CheckExact(obj))) ? \
 PyFloat_AS_DOUBLE(obj) : __Pyx__PyObject_AsDouble(obj))

static CYTHON_INLINE void __Pyx_RaiseUnboundLocalError(const char *varname);

static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index);

static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected);

static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected); /*proto*/

static CYTHON_INLINE int __Pyx_NegateNonNeg(int b) {
    return unlikely(b < 0) ? b : !b;
}
static CYTHON_INLINE PyObject* __Pyx_PyBoolOrNull_FromLong(long b) {
    return unlikely(b < 0) ? NULL : __Pyx_PyBool_FromLong(b);
}

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, long level); /*proto*/

static CYTHON_INLINE void __Pyx_RaiseImportError(PyObject *name);

static PyObject *__Pyx_FindPy2Metaclass(PyObject *bases); /*proto*/

static PyObject *__Pyx_CreateClass(PyObject *bases, PyObject *dict, PyObject *name,
                                   PyObject *modname); /*proto*/

#define __Pyx_CyFunction_USED 1
#include <structmember.h>
#define __Pyx_CYFUNCTION_STATICMETHOD  0x01
#define __Pyx_CYFUNCTION_CLASSMETHOD   0x02
#define __Pyx_CYFUNCTION_CCLASS        0x04
#define __Pyx_CyFunction_GetClosure(f) \
    (((__pyx_CyFunctionObject *) (f))->func_closure)
#define __Pyx_CyFunction_GetClassObj(f) \
    (((__pyx_CyFunctionObject *) (f))->func_classobj)
#define __Pyx_CyFunction_Defaults(type, f) \
    ((type *)(((__pyx_CyFunctionObject *) (f))->defaults))
#define __Pyx_CyFunction_SetDefaultsGetter(f, g) \
    ((__pyx_CyFunctionObject *) (f))->defaults_getter = (g)
typedef struct {
    PyCFunctionObject func;
    int flags;
    PyObject *func_dict;
    PyObject *func_weakreflist;
    PyObject *func_name;
    PyObject *func_doc;
    PyObject *func_code;
    PyObject *func_closure;
    PyObject *func_classobj; /* No-args super() class cell */
    void *defaults;
    int defaults_pyobjects;
    PyObject *defaults_tuple; /* Const defaults tuple */
    PyObject *(*defaults_getter)(PyObject *);
} __pyx_CyFunctionObject;
static PyTypeObject *__pyx_CyFunctionType = 0;
#define __Pyx_CyFunction_NewEx(ml, flags, self, module, code) \
    __Pyx_CyFunction_New(__pyx_CyFunctionType, ml, flags, self, module, code)
static PyObject *__Pyx_CyFunction_New(PyTypeObject *,
                                      PyMethodDef *ml, int flags,
                                      PyObject *self, PyObject *module,
                                      PyObject* code);
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *m,
                                                         size_t size,
                                                         int pyobjects);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *m,
                                                            PyObject *tuple);
static int __Pyx_CyFunction_init(void);

static CYTHON_INLINE unsigned char __Pyx_PyInt_AsUnsignedChar(PyObject *);

static CYTHON_INLINE unsigned short __Pyx_PyInt_AsUnsignedShort(PyObject *);

static CYTHON_INLINE unsigned int __Pyx_PyInt_AsUnsignedInt(PyObject *);

static CYTHON_INLINE char __Pyx_PyInt_AsChar(PyObject *);

static CYTHON_INLINE short __Pyx_PyInt_AsShort(PyObject *);

static CYTHON_INLINE int __Pyx_PyInt_AsInt(PyObject *);

static CYTHON_INLINE signed char __Pyx_PyInt_AsSignedChar(PyObject *);

static CYTHON_INLINE signed short __Pyx_PyInt_AsSignedShort(PyObject *);

static CYTHON_INLINE signed int __Pyx_PyInt_AsSignedInt(PyObject *);

static CYTHON_INLINE int __Pyx_PyInt_AsLongDouble(PyObject *);

static CYTHON_INLINE unsigned long __Pyx_PyInt_AsUnsignedLong(PyObject *);

static CYTHON_INLINE unsigned PY_LONG_LONG __Pyx_PyInt_AsUnsignedLongLong(PyObject *);

static CYTHON_INLINE long __Pyx_PyInt_AsLong(PyObject *);

static CYTHON_INLINE PY_LONG_LONG __Pyx_PyInt_AsLongLong(PyObject *);

static CYTHON_INLINE signed long __Pyx_PyInt_AsSignedLong(PyObject *);

static CYTHON_INLINE signed PY_LONG_LONG __Pyx_PyInt_AsSignedLongLong(PyObject *);

static CYTHON_INLINE void __Pyx_ExceptionSwap(PyObject **type, PyObject **value, PyObject **tb); /*proto*/

#define __Pyx_Generator_USED
#include <structmember.h>
typedef PyObject *(*__pyx_generator_body_t)(PyObject *, PyObject *);
typedef struct {
    PyObject_HEAD
    __pyx_generator_body_t body;
    PyObject *closure;
    int is_running;
    int resume_label;
    PyObject *exc_type;
    PyObject *exc_value;
    PyObject *exc_traceback;
    PyObject *gi_weakreflist;
    PyObject *classobj;
} __pyx_GeneratorObject;
static __pyx_GeneratorObject *__Pyx_Generator_New(__pyx_generator_body_t body,
                                                  PyObject *closure);
static int __pyx_Generator_init(void);

static void __Pyx_WriteUnraisable(const char *name, int clineno,
                                  int lineno, const char *filename); /*proto*/

static int __Pyx_check_binary_version(void);

static int __Pyx_SetVtable(PyObject *dict, void *vtable); /*proto*/

typedef struct {
    int code_line;
    PyCodeObject* code_object;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename); /*proto*/

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t); /*proto*/


/* Module declarations from 'libc.math' */

/* Module declarations from 'libcpp.string' */

/* Module declarations from 'libcpp.vector' */

/* Module declarations from 'casuarius' */
static PyTypeObject *__pyx_ptype_9casuarius_SymbolicWeight = 0;
static PyTypeObject *__pyx_ptype_9casuarius_Strength = 0;
static PyTypeObject *__pyx_ptype_9casuarius_LinearSymbolic = 0;
static PyTypeObject *__pyx_ptype_9casuarius_ConstraintVariable = 0;
static PyTypeObject *__pyx_ptype_9casuarius_Term = 0;
static PyTypeObject *__pyx_ptype_9casuarius_LinearExpression = 0;
static PyTypeObject *__pyx_ptype_9casuarius_LinearConstraint = 0;
static PyTypeObject *__pyx_ptype_9casuarius_LEConstraint = 0;
static PyTypeObject *__pyx_ptype_9casuarius_GEConstraint = 0;
static PyTypeObject *__pyx_ptype_9casuarius_EQConstraint = 0;
static PyTypeObject *__pyx_ptype_9casuarius_Solver = 0;
static PyTypeObject *__pyx_ptype_9casuarius_SolverEditContext = 0;
static PyTypeObject *__pyx_ptype_9casuarius___pyx_scope_struct____mul__ = 0;
static PyTypeObject *__pyx_ptype_9casuarius___pyx_scope_struct_1_genexpr = 0;
static PyTypeObject *__pyx_ptype_9casuarius___pyx_scope_struct_2_reduce_terms = 0;
static PyTypeObject *__pyx_ptype_9casuarius___pyx_scope_struct_3_genexpr = 0;
static PyTypeObject *__pyx_ptype_9casuarius___pyx_scope_struct_4___repr__ = 0;
static PyTypeObject *__pyx_ptype_9casuarius___pyx_scope_struct_5_genexpr = 0;
static int __pyx_f_9casuarius_raise_cassowary_error(void); /*proto*/
static int __pyx_f_9casuarius_almost_equal(double, double, struct __pyx_opt_args_9casuarius_almost_equal *__pyx_optional_args); /*proto*/
static struct __pyx_obj_9casuarius_LinearExpression *__pyx_f_9casuarius_as_linear_expression(PyObject *); /*proto*/
#define __Pyx_MODULE_NAME "casuarius"
int __pyx_module_is_main_casuarius = 0;

/* Implementation of 'casuarius' */
static PyObject *__pyx_builtin_Exception;
static PyObject *__pyx_builtin_object;
static PyObject *__pyx_builtin_TypeError;
static PyObject *__pyx_builtin_NotImplementedError;
static PyObject *__pyx_builtin_ValueError;
static PyObject *__pyx_builtin_NotImplemented;
static PyObject *__pyx_builtin_sorted;
static PyObject *__pyx_builtin_basestring;
static PyObject *__pyx_pf_9casuarius_23ExplainedCassowaryError_explains(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_linear_constraints); /* proto */
static int __pyx_pf_9casuarius_14SymbolicWeight___cinit__(struct __pyx_obj_9casuarius_SymbolicWeight *__pyx_v_self, PyObject *__pyx_v_weights); /* proto */
static void __pyx_pf_9casuarius_14SymbolicWeight_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_9casuarius_SymbolicWeight *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9casuarius_14SymbolicWeight_4__float__(struct __pyx_obj_9casuarius_SymbolicWeight *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9casuarius_14SymbolicWeight_7__mul___genexpr(PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_9casuarius_14SymbolicWeight_6__mul__(PyObject *__pyx_v_self, double __pyx_v_other); /* proto */
static PyObject *__pyx_pf_9casuarius_14SymbolicWeight_8__rmul__(struct __pyx_obj_9casuarius_SymbolicWeight *__pyx_v_self, double __pyx_v_other); /* proto */
static PyObject *__pyx_pf_9casuarius_14SymbolicWeight_10__repr__(struct __pyx_obj_9casuarius_SymbolicWeight *__pyx_v_self); /* proto */
static Py_hash_t __pyx_pf_9casuarius_14SymbolicWeight_12__hash__(struct __pyx_obj_9casuarius_SymbolicWeight *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9casuarius_14SymbolicWeight_7weights___get__(struct __pyx_obj_9casuarius_SymbolicWeight *__pyx_v_self); /* proto */
static int __pyx_pf_9casuarius_8Strength___cinit__(struct __pyx_obj_9casuarius_Strength *__pyx_v_self, PyObject *__pyx_v_name, struct __pyx_obj_9casuarius_SymbolicWeight *__pyx_v_symbolic_weight, int __pyx_v_is_required); /* proto */
static void __pyx_pf_9casuarius_8Strength_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_9casuarius_Strength *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9casuarius_8Strength_4__repr__(struct __pyx_obj_9casuarius_Strength *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9casuarius_8Strength_6__str__(struct __pyx_obj_9casuarius_Strength *__pyx_v_self); /* proto */
static Py_hash_t __pyx_pf_9casuarius_8Strength_8__hash__(struct __pyx_obj_9casuarius_Strength *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9casuarius_8Strength_4name___get__(struct __pyx_obj_9casuarius_Strength *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9casuarius_8Strength_15symbolic_weight___get__(struct __pyx_obj_9casuarius_Strength *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9casuarius_8Strength_11is_required___get__(struct __pyx_obj_9casuarius_Strength *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_nonlinear(CYTHON_UNUSED struct __pyx_obj_9casuarius_LinearSymbolic *__pyx_v_self, PyObject *__pyx_v_msg); /* proto */
static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_2nonlinear_op(CYTHON_UNUSED struct __pyx_obj_9casuarius_LinearSymbolic *__pyx_v_self, PyObject *__pyx_v_op); /* proto */
static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_4convert_to_csw(CYTHON_UNUSED struct __pyx_obj_9casuarius_LinearSymbolic *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_6__repr__(CYTHON_UNUSED struct __pyx_obj_9casuarius_LinearSymbolic *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_8__add__(CYTHON_UNUSED PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_10__mul__(CYTHON_UNUSED PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_other); /* proto */
#if PY_MAJOR_VERSION < 3
static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_12__div__(CYTHON_UNUSED PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_other); /* proto */
#endif
static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_14__str__(struct __pyx_obj_9casuarius_LinearSymbolic *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_16__sub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_18__floordiv__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_20__mod__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_22__divmod__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_24__pow__(PyObject *__pyx_v_self, PyObject *__pyx_v_other, CYTHON_UNUSED PyObject *__pyx_v_mod); /* proto */
static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_26__lshift__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_28__rshift__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_30__and__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_32__or__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_34__xor__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_36__richcmp__(PyObject *__pyx_v_self, PyObject *__pyx_v_other, int __pyx_v_op); /* proto */
static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_38_richcmp_le(struct __pyx_obj_9casuarius_LinearSymbolic *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_40_richcmp_ge(struct __pyx_obj_9casuarius_LinearSymbolic *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_42_richcmp_eq(struct __pyx_obj_9casuarius_LinearSymbolic *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
static Py_hash_t __pyx_pf_9casuarius_14LinearSymbolic_44__hash__(struct __pyx_obj_9casuarius_LinearSymbolic *__pyx_v_self); /* proto */
static int __pyx_pf_9casuarius_18ConstraintVariable___cinit__(struct __pyx_obj_9casuarius_ConstraintVariable *__pyx_v_self, PyObject *__pyx_v_name, double __pyx_v_value); /* proto */
static PyObject *__pyx_pf_9casuarius_18ConstraintVariable_5value___get__(struct __pyx_obj_9casuarius_ConstraintVariable *__pyx_v_self); /* proto */
static void __pyx_pf_9casuarius_18ConstraintVariable_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_9casuarius_ConstraintVariable *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9casuarius_18ConstraintVariable_4__repr__(struct __pyx_obj_9casuarius_ConstraintVariable *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9casuarius_18ConstraintVariable_6__str__(struct __pyx_obj_9casuarius_ConstraintVariable *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9casuarius_18ConstraintVariable_8__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_9casuarius_18ConstraintVariable_10__mul__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
#if PY_MAJOR_VERSION < 3
static PyObject *__pyx_pf_9casuarius_18ConstraintVariable_12__div__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
#endif
static PyObject *__pyx_pf_9casuarius_18ConstraintVariable_4name___get__(struct __pyx_obj_9casuarius_ConstraintVariable *__pyx_v_self); /* proto */
static int __pyx_pf_9casuarius_4Term___cinit__(struct __pyx_obj_9casuarius_Term *__pyx_v_self, struct __pyx_obj_9casuarius_ConstraintVariable *__pyx_v_var, double __pyx_v_coeff); /* proto */
static PyObject *__pyx_pf_9casuarius_4Term_2__repr__(struct __pyx_obj_9casuarius_Term *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9casuarius_4Term_4__str__(struct __pyx_obj_9casuarius_Term *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9casuarius_4Term_6__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_9casuarius_4Term_8__mul__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
#if PY_MAJOR_VERSION < 3
static PyObject *__pyx_pf_9casuarius_4Term_10__div__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
#endif
static PyObject *__pyx_pf_9casuarius_4Term_3var___get__(struct __pyx_obj_9casuarius_Term *__pyx_v_self); /* proto */
static int __pyx_pf_9casuarius_4Term_3var_2__set__(struct __pyx_obj_9casuarius_Term *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9casuarius_4Term_3var_4__del__(struct __pyx_obj_9casuarius_Term *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9casuarius_4Term_5coeff___get__(struct __pyx_obj_9casuarius_Term *__pyx_v_self); /* proto */
static int __pyx_pf_9casuarius_4Term_5coeff_2__set__(struct __pyx_obj_9casuarius_Term *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9casuarius_16LinearExpression_12reduce_terms_genexpr(PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_9casuarius_16LinearExpression_reduce_terms(CYTHON_UNUSED struct __pyx_obj_9casuarius_LinearExpression *__pyx_v_self, PyObject *__pyx_v_terms); /* proto */
static int __pyx_pf_9casuarius_16LinearExpression_2__cinit__(struct __pyx_obj_9casuarius_LinearExpression *__pyx_v_self, PyObject *__pyx_v_terms, PyObject *__pyx_v_constant); /* proto */
static PyObject *__pyx_pf_9casuarius_16LinearExpression_5value___get__(struct __pyx_obj_9casuarius_LinearExpression *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9casuarius_16LinearExpression_8__repr___genexpr(PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_9casuarius_16LinearExpression_4__repr__(struct __pyx_obj_9casuarius_LinearExpression *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9casuarius_16LinearExpression_6__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_9casuarius_16LinearExpression_8__mul__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
#if PY_MAJOR_VERSION < 3
static PyObject *__pyx_pf_9casuarius_16LinearExpression_10__div__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
#endif
static PyObject *__pyx_pf_9casuarius_16LinearExpression_5terms___get__(struct __pyx_obj_9casuarius_LinearExpression *__pyx_v_self); /* proto */
static int __pyx_pf_9casuarius_16LinearExpression_5terms_2__set__(struct __pyx_obj_9casuarius_LinearExpression *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9casuarius_16LinearExpression_5terms_4__del__(struct __pyx_obj_9casuarius_LinearExpression *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9casuarius_16LinearExpression_8constant___get__(struct __pyx_obj_9casuarius_LinearExpression *__pyx_v_self); /* proto */
static int __pyx_pf_9casuarius_16LinearExpression_8constant_2__set__(struct __pyx_obj_9casuarius_LinearExpression *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9casuarius_16LinearConstraint___cinit__(struct __pyx_obj_9casuarius_LinearConstraint *__pyx_v_self, PyObject *__pyx_v_lhs, PyObject *__pyx_v_rhs, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwds); /* proto */
static int __pyx_pf_9casuarius_16LinearConstraint_2__init__(struct __pyx_obj_9casuarius_LinearConstraint *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_lhs, CYTHON_UNUSED PyObject *__pyx_v_rhs, struct __pyx_obj_9casuarius_Strength *__pyx_v_strength, double __pyx_v_weight); /* proto */
static void __pyx_pf_9casuarius_16LinearConstraint_4__dealloc__(struct __pyx_obj_9casuarius_LinearConstraint *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9casuarius_16LinearConstraint_6__repr__(struct __pyx_obj_9casuarius_LinearConstraint *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9casuarius_16LinearConstraint_8__str__(struct __pyx_obj_9casuarius_LinearConstraint *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9casuarius_16LinearConstraint_8strength___get__(struct __pyx_obj_9casuarius_LinearConstraint *__pyx_v_self); /* proto */
static int __pyx_pf_9casuarius_16LinearConstraint_8strength_2__set__(struct __pyx_obj_9casuarius_LinearConstraint *__pyx_v_self, struct __pyx_obj_9casuarius_Strength *__pyx_v_strength); /* proto */
static PyObject *__pyx_pf_9casuarius_16LinearConstraint_6weight___get__(struct __pyx_obj_9casuarius_LinearConstraint *__pyx_v_self); /* proto */
static int __pyx_pf_9casuarius_16LinearConstraint_6weight_2__set__(struct __pyx_obj_9casuarius_LinearConstraint *__pyx_v_self, double __pyx_v_weight); /* proto */
static PyObject *__pyx_pf_9casuarius_16LinearConstraint_10explains_exception(struct __pyx_obj_9casuarius_LinearConstraint *__pyx_v_self, PyObject *__pyx_v_e); /* proto */
static PyObject *__pyx_pf_9casuarius_16LinearConstraint_12__or__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_9casuarius_16LinearConstraint_14__ror__(struct __pyx_obj_9casuarius_LinearConstraint *__pyx_v_self, struct __pyx_obj_9casuarius_Strength *__pyx_v_other); /* proto */
static Py_hash_t __pyx_pf_9casuarius_16LinearConstraint_16__hash__(struct __pyx_obj_9casuarius_LinearConstraint *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9casuarius_16LinearConstraint_3lhs___get__(struct __pyx_obj_9casuarius_LinearConstraint *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9casuarius_16LinearConstraint_3rhs___get__(struct __pyx_obj_9casuarius_LinearConstraint *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9casuarius_16LinearConstraint_2op___get__(struct __pyx_obj_9casuarius_LinearConstraint *__pyx_v_self); /* proto */
static int __pyx_pf_9casuarius_12LEConstraint___init__(struct __pyx_obj_9casuarius_LEConstraint *__pyx_v_self, PyObject *__pyx_v_lhs, PyObject *__pyx_v_rhs, struct __pyx_obj_9casuarius_Strength *__pyx_v_strength, double __pyx_v_weight); /* proto */
static PyObject *__pyx_pf_9casuarius_12LEConstraint_5error___get__(struct __pyx_obj_9casuarius_LEConstraint *__pyx_v_self); /* proto */
static int __pyx_pf_9casuarius_12GEConstraint___init__(struct __pyx_obj_9casuarius_GEConstraint *__pyx_v_self, PyObject *__pyx_v_lhs, PyObject *__pyx_v_rhs, struct __pyx_obj_9casuarius_Strength *__pyx_v_strength, double __pyx_v_weight); /* proto */
static PyObject *__pyx_pf_9casuarius_12GEConstraint_5error___get__(struct __pyx_obj_9casuarius_GEConstraint *__pyx_v_self); /* proto */
static int __pyx_pf_9casuarius_12EQConstraint___init__(struct __pyx_obj_9casuarius_EQConstraint *__pyx_v_self, PyObject *__pyx_v_lhs, PyObject *__pyx_v_rhs, struct __pyx_obj_9casuarius_Strength *__pyx_v_strength, double __pyx_v_weight); /* proto */
static PyObject *__pyx_pf_9casuarius_12EQConstraint_5error___get__(struct __pyx_obj_9casuarius_EQConstraint *__pyx_v_self); /* proto */
static int __pyx_pf_9casuarius_6Solver___cinit__(struct __pyx_obj_9casuarius_Solver *__pyx_v_self, int __pyx_v_autosolve, int __pyx_v_explaining); /* proto */
static PyObject *__pyx_pf_9casuarius_6Solver_9autosolve___get__(struct __pyx_obj_9casuarius_Solver *__pyx_v_self); /* proto */
static int __pyx_pf_9casuarius_6Solver_9autosolve_2__set__(struct __pyx_obj_9casuarius_Solver *__pyx_v_self, int __pyx_v_autosolve); /* proto */
static PyObject *__pyx_pf_9casuarius_6Solver_10explaining___get__(struct __pyx_obj_9casuarius_Solver *__pyx_v_self); /* proto */
static int __pyx_pf_9casuarius_6Solver_10explaining_2__set__(struct __pyx_obj_9casuarius_Solver *__pyx_v_self, int __pyx_v_explaining); /* proto */
static void __pyx_pf_9casuarius_6Solver_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_9casuarius_Solver *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9casuarius_6Solver_4__str__(struct __pyx_obj_9casuarius_Solver *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9casuarius_6Solver_6add_constraint(struct __pyx_obj_9casuarius_Solver *__pyx_v_self, struct __pyx_obj_9casuarius_LinearConstraint *__pyx_v_constraint); /* proto */
static PyObject *__pyx_pf_9casuarius_6Solver_8remove_constraint(struct __pyx_obj_9casuarius_Solver *__pyx_v_self, struct __pyx_obj_9casuarius_LinearConstraint *__pyx_v_constraint); /* proto */
static PyObject *__pyx_pf_9casuarius_6Solver_10suggest_values(struct __pyx_obj_9casuarius_Solver *__pyx_v_self, PyObject *__pyx_v_var_vals, struct __pyx_obj_9casuarius_Strength *__pyx_v_default_strength, double __pyx_v_default_weight); /* proto */
static int __pyx_pf_9casuarius_17SolverEditContext___cinit__(struct __pyx_obj_9casuarius_SolverEditContext *__pyx_v_self, PyObject *__pyx_v_solver, PyObject *__pyx_v_suggest_var_vals, struct __pyx_obj_9casuarius_Strength *__pyx_v_default_strength, double __pyx_v_default_weight); /* proto */
static PyObject *__pyx_pf_9casuarius_17SolverEditContext_2__enter__(struct __pyx_obj_9casuarius_SolverEditContext *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9casuarius_17SolverEditContext_4__exit__(struct __pyx_obj_9casuarius_SolverEditContext *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_exc_type, CYTHON_UNUSED PyObject *__pyx_v_exc_val, CYTHON_UNUSED PyObject *__pyx_v_exc_tb); /* proto */
static PyObject *__pyx_pf_9casuarius_17SolverEditContext_6solver___get__(struct __pyx_obj_9casuarius_SolverEditContext *__pyx_v_self); /* proto */
static int __pyx_pf_9casuarius_17SolverEditContext_6solver_2__set__(struct __pyx_obj_9casuarius_SolverEditContext *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9casuarius_17SolverEditContext_6solver_4__del__(struct __pyx_obj_9casuarius_SolverEditContext *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9casuarius_17SolverEditContext_16suggest_var_vals___get__(struct __pyx_obj_9casuarius_SolverEditContext *__pyx_v_self); /* proto */
static int __pyx_pf_9casuarius_17SolverEditContext_16suggest_var_vals_2__set__(struct __pyx_obj_9casuarius_SolverEditContext *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9casuarius_17SolverEditContext_16suggest_var_vals_4__del__(struct __pyx_obj_9casuarius_SolverEditContext *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9casuarius_17SolverEditContext_16default_strength___get__(struct __pyx_obj_9casuarius_SolverEditContext *__pyx_v_self); /* proto */
static int __pyx_pf_9casuarius_17SolverEditContext_16default_strength_2__set__(struct __pyx_obj_9casuarius_SolverEditContext *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9casuarius_17SolverEditContext_16default_strength_4__del__(struct __pyx_obj_9casuarius_SolverEditContext *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9casuarius_17SolverEditContext_14default_weight___get__(struct __pyx_obj_9casuarius_SolverEditContext *__pyx_v_self); /* proto */
static int __pyx_pf_9casuarius_17SolverEditContext_14default_weight_2__set__(struct __pyx_obj_9casuarius_SolverEditContext *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static char __pyx_k_1[] = "ExplainedCassowaryError";
static char __pyx_k_2[] = "explanation_constraint_pointers";
static char __pyx_k_3[] = "SymbolicWeight({0!r})";
static char __pyx_k_4[] = "Strength({name!r}, {symbolic_weight!r}, is_required={is_required})";
static char __pyx_k_5[] = "Strength({name!r}, {symbolic_weight!r})";
static char __pyx_k_6[] = "Non-linear expression: %s";
static char __pyx_k_7[] = "Non-linear operator: `%s`";
static char __pyx_k_8[] = "//";
static char __pyx_k_10[] = "%";
static char __pyx_k_13[] = "**";
static char __pyx_k_15[] = "<<";
static char __pyx_k_17[] = ">>";
static char __pyx_k_19[] = "&";
static char __pyx_k_21[] = "|";
static char __pyx_k_23[] = "^";
static char __pyx_k_25[] = "Invalid constraint operation.";
static char __pyx_k_27[] = "Invalid type for constraint operation %s";
static char __pyx_k_28[] = "ConstraintVariable({0!r}, {1!r})";
static char __pyx_k_29[] = "{0}:{1}";
static char __pyx_k_30[] = "[ %s ] * [ %s ]";
static char __pyx_k_31[] = "[ %s ] / [ %s ]";
static char __pyx_k_32[] = "Term({0!r}, {1!r})";
static char __pyx_k_33[] = "{name}:{value}";
static char __pyx_k_34[] = "-{name}:{value}";
static char __pyx_k_35[] = "{coeff} * {name}:{value}";
static char __pyx_k_37[] = "var.name";
static char __pyx_k_39[] = " + ";
static char __pyx_k_40[] = " + %s";
static char __pyx_k_41[] = " - %s";
static char __pyx_k_42[] = "Cannot cast {0!r}, a {1!r}, to LinearExpression.";
static char __pyx_k_44[] = "<%s: (%s %s %s) | %s | %s>";
static char __pyx_k_45[] = "%s %s %s";
static char __pyx_k_46[] = "Expected a known strength string or a Strength. Got {!r} instead.";
static char __pyx_k_47[] = "Expected a known strength string, a Strength or a float weight. Got {!r} instead.";
static char __pyx_k_49[] = "<=";
static char __pyx_k_51[] = ">=";
static char __pyx_k_53[] = "==";
static char __pyx_k_57[] = " Cython wrapper for Cassowary.\n";
static char __pyx_k_58[] = " An error raised from Cassowary.\n    ";
static char __pyx_k_61[] = "/Users/rkern/git/et/casuarius/casuarius.pyx";
static char __pyx_k_62[] = " An error raised from Cassowary with a list of constraints that\n    are involved in the error.\n\n    Use the .explains() method with a list of LinearConstraints to get\n    a filtered list of LinearConstraints that explain this error.\n    ";
static char __pyx_k__cn[] = "cn";
static char __pyx_k__key[] = "key";
static char __pyx_k__lhs[] = "lhs";
static char __pyx_k__rhs[] = "rhs";
static char __pyx_k__var[] = "var";
static char __pyx_k__join[] = "join";
static char __pyx_k__name[] = "name";
static char __pyx_k__self[] = "self";
static char __pyx_k__weak[] = "weak";
static char __pyx_k__coeff[] = "coeff";
static char __pyx_k__terms[] = "terms";
static char __pyx_k__value[] = "value";
static char __pyx_k____or__[] = "__or__";
static char __pyx_k__divmod[] = "divmod";
static char __pyx_k__exc_tb[] = "exc_tb";
static char __pyx_k__format[] = "format";
static char __pyx_k__medium[] = "medium";
static char __pyx_k__object[] = "object";
static char __pyx_k__solver[] = "solver";
static char __pyx_k__sorted[] = "sorted";
static char __pyx_k__strong[] = "strong";
static char __pyx_k__weight[] = "weight";
static char __pyx_k____mul__[] = "__mul__";
static char __pyx_k__exc_val[] = "exc_val";
static char __pyx_k__weights[] = "weights";
static char __pyx_k____hash__[] = "__hash__";
static char __pyx_k____init__[] = "__init__";
static char __pyx_k____main__[] = "__main__";
static char __pyx_k____name__[] = "__name__";
static char __pyx_k____repr__[] = "__repr__";
static char __pyx_k____test__[] = "__test__";
static char __pyx_k__constant[] = "constant";
static char __pyx_k__exc_type[] = "exc_type";
static char __pyx_k__explains[] = "explains";
static char __pyx_k__filtered[] = "filtered";
static char __pyx_k__operator[] = "operator";
static char __pyx_k__required[] = "required";
static char __pyx_k__strength[] = "strength";
static char __pyx_k__var_vals[] = "var_vals";
static char __pyx_k__Exception[] = "Exception";
static char __pyx_k__TypeError[] = "TypeError";
static char __pyx_k__autosolve[] = "autosolve";
static char __pyx_k__casuarius[] = "casuarius";
static char __pyx_k__iteritems[] = "iteritems";
static char __pyx_k__nonlinear[] = "nonlinear";
static char __pyx_k__ValueError[] = "ValueError";
static char __pyx_k__attrgetter[] = "attrgetter";
static char __pyx_k__basestring[] = "basestring";
static char __pyx_k__explaining[] = "explaining";
static char __pyx_k___richcmp_eq[] = "_richcmp_eq";
static char __pyx_k___richcmp_ge[] = "_richcmp_ge";
static char __pyx_k___richcmp_le[] = "_richcmp_le";
static char __pyx_k__collections[] = "collections";
static char __pyx_k__defaultdict[] = "defaultdict";
static char __pyx_k__is_required[] = "is_required";
static char __pyx_k__STRENGTH_MAP[] = "STRENGTH_MAP";
static char __pyx_k__nonlinear_op[] = "nonlinear_op";
static char __pyx_k__reduce_terms[] = "reduce_terms";
static char __pyx_k__CassowaryError[] = "CassowaryError";
static char __pyx_k__NotImplemented[] = "NotImplemented";
static char __pyx_k__default_weight[] = "default_weight";
static char __pyx_k__symbolic_weight[] = "symbolic_weight";
static char __pyx_k__default_strength[] = "default_strength";
static char __pyx_k__suggest_var_vals[] = "suggest_var_vals";
static char __pyx_k__explains_exception[] = "explains_exception";
static char __pyx_k__linear_constraints[] = "linear_constraints";
static char __pyx_k__NotImplementedError[] = "NotImplementedError";
static PyObject *__pyx_n_s_1;
static PyObject *__pyx_kp_s_10;
static PyObject *__pyx_kp_s_13;
static PyObject *__pyx_kp_s_15;
static PyObject *__pyx_kp_s_17;
static PyObject *__pyx_kp_s_19;
static PyObject *__pyx_n_s_2;
static PyObject *__pyx_kp_s_21;
static PyObject *__pyx_kp_s_23;
static PyObject *__pyx_kp_s_25;
static PyObject *__pyx_kp_s_27;
static PyObject *__pyx_kp_s_28;
static PyObject *__pyx_kp_s_29;
static PyObject *__pyx_kp_s_3;
static PyObject *__pyx_kp_s_30;
static PyObject *__pyx_kp_s_31;
static PyObject *__pyx_kp_s_32;
static PyObject *__pyx_kp_s_33;
static PyObject *__pyx_kp_s_34;
static PyObject *__pyx_kp_s_35;
static PyObject *__pyx_kp_s_37;
static PyObject *__pyx_kp_s_39;
static PyObject *__pyx_kp_s_4;
static PyObject *__pyx_kp_s_40;
static PyObject *__pyx_kp_s_41;
static PyObject *__pyx_kp_s_42;
static PyObject *__pyx_kp_s_44;
static PyObject *__pyx_kp_s_45;
static PyObject *__pyx_kp_s_46;
static PyObject *__pyx_kp_s_47;
static PyObject *__pyx_kp_b_49;
static PyObject *__pyx_kp_s_5;
static PyObject *__pyx_kp_b_51;
static PyObject *__pyx_kp_b_53;
static PyObject *__pyx_kp_s_58;
static PyObject *__pyx_kp_s_6;
static PyObject *__pyx_kp_s_61;
static PyObject *__pyx_kp_s_62;
static PyObject *__pyx_kp_s_7;
static PyObject *__pyx_kp_s_8;
static PyObject *__pyx_n_s__CassowaryError;
static PyObject *__pyx_n_s__Exception;
static PyObject *__pyx_n_s__NotImplemented;
static PyObject *__pyx_n_s__NotImplementedError;
static PyObject *__pyx_n_s__STRENGTH_MAP;
static PyObject *__pyx_n_s__TypeError;
static PyObject *__pyx_n_s__ValueError;
static PyObject *__pyx_n_s____hash__;
static PyObject *__pyx_n_s____init__;
static PyObject *__pyx_n_s____main__;
static PyObject *__pyx_n_s____mul__;
static PyObject *__pyx_n_s____name__;
static PyObject *__pyx_n_s____or__;
static PyObject *__pyx_n_s____repr__;
static PyObject *__pyx_n_s____test__;
static PyObject *__pyx_n_s___richcmp_eq;
static PyObject *__pyx_n_s___richcmp_ge;
static PyObject *__pyx_n_s___richcmp_le;
static PyObject *__pyx_n_s__attrgetter;
static PyObject *__pyx_n_s__autosolve;
static PyObject *__pyx_n_s__basestring;
static PyObject *__pyx_n_s__casuarius;
static PyObject *__pyx_n_s__cn;
static PyObject *__pyx_n_s__coeff;
static PyObject *__pyx_n_s__collections;
static PyObject *__pyx_n_s__constant;
static PyObject *__pyx_n_s__default_strength;
static PyObject *__pyx_n_s__default_weight;
static PyObject *__pyx_n_s__defaultdict;
static PyObject *__pyx_n_s__divmod;
static PyObject *__pyx_n_s__exc_tb;
static PyObject *__pyx_n_s__exc_type;
static PyObject *__pyx_n_s__exc_val;
static PyObject *__pyx_n_s__explaining;
static PyObject *__pyx_n_s__explains;
static PyObject *__pyx_n_s__explains_exception;
static PyObject *__pyx_n_s__filtered;
static PyObject *__pyx_n_s__format;
static PyObject *__pyx_n_s__is_required;
static PyObject *__pyx_n_s__iteritems;
static PyObject *__pyx_n_s__join;
static PyObject *__pyx_n_s__key;
static PyObject *__pyx_n_s__lhs;
static PyObject *__pyx_n_s__linear_constraints;
static PyObject *__pyx_n_s__medium;
static PyObject *__pyx_n_s__name;
static PyObject *__pyx_n_s__nonlinear;
static PyObject *__pyx_n_s__nonlinear_op;
static PyObject *__pyx_n_s__object;
static PyObject *__pyx_n_s__operator;
static PyObject *__pyx_n_s__reduce_terms;
static PyObject *__pyx_n_s__required;
static PyObject *__pyx_n_s__rhs;
static PyObject *__pyx_n_s__self;
static PyObject *__pyx_n_s__solver;
static PyObject *__pyx_n_s__sorted;
static PyObject *__pyx_n_s__strength;
static PyObject *__pyx_n_s__strong;
static PyObject *__pyx_n_s__suggest_var_vals;
static PyObject *__pyx_n_s__symbolic_weight;
static PyObject *__pyx_n_s__terms;
static PyObject *__pyx_n_s__value;
static PyObject *__pyx_n_s__var;
static PyObject *__pyx_n_s__var_vals;
static PyObject *__pyx_n_s__weak;
static PyObject *__pyx_n_s__weight;
static PyObject *__pyx_n_s__weights;
static PyObject *__pyx_k_36;
static struct __pyx_obj_9casuarius_Strength *__pyx_k_43;
static struct __pyx_obj_9casuarius_Strength *__pyx_k_48;
static struct __pyx_obj_9casuarius_Strength *__pyx_k_50;
static struct __pyx_obj_9casuarius_Strength *__pyx_k_52;
static struct __pyx_obj_9casuarius_Strength *__pyx_k_54;
static struct __pyx_obj_9casuarius_Strength *__pyx_k_55;
static struct __pyx_obj_9casuarius_Strength *__pyx_k_56;
static PyObject *__pyx_k_tuple_9;
static PyObject *__pyx_k_tuple_11;
static PyObject *__pyx_k_tuple_12;
static PyObject *__pyx_k_tuple_14;
static PyObject *__pyx_k_tuple_16;
static PyObject *__pyx_k_tuple_18;
static PyObject *__pyx_k_tuple_20;
static PyObject *__pyx_k_tuple_22;
static PyObject *__pyx_k_tuple_24;
static PyObject *__pyx_k_tuple_26;
static PyObject *__pyx_k_tuple_38;
static PyObject *__pyx_k_tuple_59;
static PyObject *__pyx_k_codeobj_60;

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_23ExplainedCassowaryError_1explains(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_9casuarius_23ExplainedCassowaryError_explains[] = " Filter a list of LinearConstraints to return only those\n        LinearConstraints that caused the error.\n        ";
static PyMethodDef __pyx_mdef_9casuarius_23ExplainedCassowaryError_1explains = {__Pyx_NAMESTR("explains"), (PyCFunction)__pyx_pw_9casuarius_23ExplainedCassowaryError_1explains, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_9casuarius_23ExplainedCassowaryError_explains)};
static PyObject *__pyx_pw_9casuarius_23ExplainedCassowaryError_1explains(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_linear_constraints = 0;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__self,&__pyx_n_s__linear_constraints,0};
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("explains (wrapper)", 0);
  __pyx_self = __pyx_self;
  {
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__self);
        if (likely(values[0])) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__linear_constraints);
        if (likely(values[1])) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("explains", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 32; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "explains") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 32; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_linear_constraints = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("explains", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 32; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("casuarius.ExplainedCassowaryError.explains", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9casuarius_23ExplainedCassowaryError_explains(__pyx_self, __pyx_v_self, __pyx_v_linear_constraints);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":32
 *     # SORRY: Yes, it's an awkward API. Best I can do right now.
 * 
 *     def explains(self, linear_constraints):             # <<<<<<<<<<<<<<
 *         """ Filter a list of LinearConstraints to return only those
 *         LinearConstraints that caused the error.
 */

static PyObject *__pyx_pf_9casuarius_23ExplainedCassowaryError_explains(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_linear_constraints) {
  PyObject *__pyx_v_filtered = NULL;
  PyObject *__pyx_v_cn = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("explains", 0);

  /* "casuarius.pyx":36
 *         LinearConstraints that caused the error.
 *         """
 *         filtered = []             # <<<<<<<<<<<<<<
 *         for cn in linear_constraints:
 *             if cn.explains_exception(self):
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 36; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_filtered = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "casuarius.pyx":37
 *         """
 *         filtered = []
 *         for cn in linear_constraints:             # <<<<<<<<<<<<<<
 *             if cn.explains_exception(self):
 *                 filtered.append(cn)
 */
  if (PyList_CheckExact(__pyx_v_linear_constraints) || PyTuple_CheckExact(__pyx_v_linear_constraints)) {
    __pyx_t_1 = __pyx_v_linear_constraints; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_linear_constraints); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext;
  }
  for (;;) {
    if (!__pyx_t_3 && PyList_CheckExact(__pyx_t_1)) {
      if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
      __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++;
    } else if (!__pyx_t_3 && PyTuple_CheckExact(__pyx_t_1)) {
      if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
      __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++;
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF(__pyx_v_cn);
    __pyx_v_cn = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "casuarius.pyx":38
 *         filtered = []
 *         for cn in linear_constraints:
 *             if cn.explains_exception(self):             # <<<<<<<<<<<<<<
 *                 filtered.append(cn)
 *         return filtered
 */
    __pyx_t_4 = PyObject_GetAttr(__pyx_v_cn, __pyx_n_s__explains_exception); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(__pyx_v_self);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_self);
    __Pyx_GIVEREF(__pyx_v_self);
    __pyx_t_6 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_7 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (__pyx_t_7) {

      /* "casuarius.pyx":39
 *         for cn in linear_constraints:
 *             if cn.explains_exception(self):
 *                 filtered.append(cn)             # <<<<<<<<<<<<<<
 *         return filtered
 * 
 */
      __pyx_t_8 = PyList_Append(__pyx_v_filtered, __pyx_v_cn); if (unlikely(__pyx_t_8 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L5;
    }
    __pyx_L5:;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "casuarius.pyx":40
 *             if cn.explains_exception(self):
 *                 filtered.append(cn)
 *         return filtered             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_filtered));
  __pyx_r = ((PyObject *)__pyx_v_filtered);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("casuarius.ExplainedCassowaryError.explains", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_filtered);
  __Pyx_XDECREF(__pyx_v_cn);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":43
 * 
 * 
 * cdef int raise_cassowary_error() except *:             # <<<<<<<<<<<<<<
 *     cdef string message
 *     cdef vector[size_t] constraint_pointers
 */

static int __pyx_f_9casuarius_raise_cassowary_error(void) {
  std::string __pyx_v_message;
  std::vector<size_t> __pyx_v_constraint_pointers;
  PyObject *__pyx_v_e = NULL;
  std::vector<size_t>::iterator __pyx_v_it;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("raise_cassowary_error", 0);

  /* "casuarius.pyx":47
 *     cdef vector[size_t] constraint_pointers
 * 
 *     message = get_cpp_exception_message()             # <<<<<<<<<<<<<<
 *     constraint_pointers = get_cpp_exception_constraint_pointers()
 *     if constraint_pointers.size() > 0:
 */
  __pyx_v_message = get_cpp_exception_message();

  /* "casuarius.pyx":48
 * 
 *     message = get_cpp_exception_message()
 *     constraint_pointers = get_cpp_exception_constraint_pointers()             # <<<<<<<<<<<<<<
 *     if constraint_pointers.size() > 0:
 *         e = ExplainedCassowaryError(message.c_str())
 */
  __pyx_v_constraint_pointers = get_cpp_exception_constraint_pointers();

  /* "casuarius.pyx":49
 *     message = get_cpp_exception_message()
 *     constraint_pointers = get_cpp_exception_constraint_pointers()
 *     if constraint_pointers.size() > 0:             # <<<<<<<<<<<<<<
 *         e = ExplainedCassowaryError(message.c_str())
 *         e.explanation_constraint_pointers = []
 */
  __pyx_t_1 = (__pyx_v_constraint_pointers.size() > 0);
  if (__pyx_t_1) {

    /* "casuarius.pyx":50
 *     constraint_pointers = get_cpp_exception_constraint_pointers()
 *     if constraint_pointers.size() > 0:
 *         e = ExplainedCassowaryError(message.c_str())             # <<<<<<<<<<<<<<
 *         e.explanation_constraint_pointers = []
 *     else:
 */
    __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyBytes_FromString(__pyx_v_message.c_str()); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_3));
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_t_3));
    __Pyx_GIVEREF(((PyObject *)__pyx_t_3));
    __pyx_t_3 = 0;
    __pyx_t_3 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __pyx_v_e = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "casuarius.pyx":51
 *     if constraint_pointers.size() > 0:
 *         e = ExplainedCassowaryError(message.c_str())
 *         e.explanation_constraint_pointers = []             # <<<<<<<<<<<<<<
 *     else:
 *         e = CassowaryError(message.c_str())
 */
    __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    if (PyObject_SetAttr(__pyx_v_e, __pyx_n_s_2, ((PyObject *)__pyx_t_3)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "casuarius.pyx":53
 *         e.explanation_constraint_pointers = []
 *     else:
 *         e = CassowaryError(message.c_str())             # <<<<<<<<<<<<<<
 * 
 *     cdef vector[size_t].iterator it = constraint_pointers.begin()
 */
    __pyx_t_3 = __Pyx_GetName(__pyx_m, __pyx_n_s__CassowaryError); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 53; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PyBytes_FromString(__pyx_v_message.c_str()); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 53; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_4));
    __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 53; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_t_4));
    __Pyx_GIVEREF(((PyObject *)__pyx_t_4));
    __pyx_t_4 = 0;
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 53; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
    __pyx_v_e = __pyx_t_4;
    __pyx_t_4 = 0;
  }
  __pyx_L3:;

  /* "casuarius.pyx":55
 *         e = CassowaryError(message.c_str())
 * 
 *     cdef vector[size_t].iterator it = constraint_pointers.begin()             # <<<<<<<<<<<<<<
 *     while it != constraint_pointers.end():
 *         e.explanation_constraint_pointers.append(deref(it))
 */
  __pyx_v_it = __pyx_v_constraint_pointers.begin();

  /* "casuarius.pyx":56
 * 
 *     cdef vector[size_t].iterator it = constraint_pointers.begin()
 *     while it != constraint_pointers.end():             # <<<<<<<<<<<<<<
 *         e.explanation_constraint_pointers.append(deref(it))
 *         inc(it)
 */
  while (1) {
    __pyx_t_1 = (__pyx_v_it != __pyx_v_constraint_pointers.end());
    if (!__pyx_t_1) break;

    /* "casuarius.pyx":57
 *     cdef vector[size_t].iterator it = constraint_pointers.begin()
 *     while it != constraint_pointers.end():
 *         e.explanation_constraint_pointers.append(deref(it))             # <<<<<<<<<<<<<<
 *         inc(it)
 * 
 */
    __pyx_t_4 = PyObject_GetAttr(__pyx_v_e, __pyx_n_s_2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_2 = __Pyx_PyInt_FromSize_t((*__pyx_v_it)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_Append(__pyx_t_4, __pyx_t_2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "casuarius.pyx":58
 *     while it != constraint_pointers.end():
 *         e.explanation_constraint_pointers.append(deref(it))
 *         inc(it)             # <<<<<<<<<<<<<<
 * 
 *     raise e
 */
    (++__pyx_v_it);
  }

  /* "casuarius.pyx":60
 *         inc(it)
 * 
 *     raise e             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_Raise(__pyx_v_e, 0, 0, 0);
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 60; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("casuarius.raise_cassowary_error", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_e);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9casuarius_14SymbolicWeight_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9casuarius_14SymbolicWeight_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_weights = 0;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__weights,0};
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__weights);
        if (likely(values[0])) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_weights = ((PyObject*)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("casuarius.SymbolicWeight.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_weights), (&PyTuple_Type), 1, "weights", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_9casuarius_14SymbolicWeight___cinit__(((struct __pyx_obj_9casuarius_SymbolicWeight *)__pyx_v_self), __pyx_v_weights);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":166
 *     cdef readonly tuple weights
 * 
 *     def __cinit__(self, tuple weights):             # <<<<<<<<<<<<<<
 *         cdef vector[double] c_weights
 *         cdef double c_weight
 */

static int __pyx_pf_9casuarius_14SymbolicWeight___cinit__(struct __pyx_obj_9casuarius_SymbolicWeight *__pyx_v_self, PyObject *__pyx_v_weights) {
  std::vector<double> __pyx_v_c_weights;
  int __pyx_v_i;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  double __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "casuarius.pyx":171
 *         cdef int i
 * 
 *         for i from 0 <= i < len(weights):             # <<<<<<<<<<<<<<
 *             c_weights.push_back(<double>weights[i])
 *         self.symbolic_weight = new ClSymbolicWeight(c_weights)
 */
  if (unlikely(((PyObject *)__pyx_v_weights) == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1_error;} 
  }
  __pyx_t_1 = PyTuple_GET_SIZE(((PyObject *)__pyx_v_weights)); 
  for (__pyx_v_i = 0; __pyx_v_i < __pyx_t_1; __pyx_v_i++) {

    /* "casuarius.pyx":172
 * 
 *         for i from 0 <= i < len(weights):
 *             c_weights.push_back(<double>weights[i])             # <<<<<<<<<<<<<<
 *         self.symbolic_weight = new ClSymbolicWeight(c_weights)
 *         self.weights = weights
 */
    __pyx_t_2 = __Pyx_GetItemInt_Tuple(((PyObject *)__pyx_v_weights), __pyx_v_i, sizeof(int), PyInt_FromLong); if (!__pyx_t_2) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_c_weights.push_back(((double)__pyx_t_3));
  }

  /* "casuarius.pyx":173
 *         for i from 0 <= i < len(weights):
 *             c_weights.push_back(<double>weights[i])
 *         self.symbolic_weight = new ClSymbolicWeight(c_weights)             # <<<<<<<<<<<<<<
 *         self.weights = weights
 * 
 */
  __pyx_v_self->symbolic_weight = new SymbolicWeight(__pyx_v_c_weights);

  /* "casuarius.pyx":174
 *             c_weights.push_back(<double>weights[i])
 *         self.symbolic_weight = new ClSymbolicWeight(c_weights)
 *         self.weights = weights             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_weights));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_weights));
  __Pyx_GOTREF(__pyx_v_self->weights);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->weights));
  __pyx_v_self->weights = __pyx_v_weights;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("casuarius.SymbolicWeight.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_9casuarius_14SymbolicWeight_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_9casuarius_14SymbolicWeight_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_9casuarius_14SymbolicWeight_2__dealloc__(((struct __pyx_obj_9casuarius_SymbolicWeight *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "casuarius.pyx":176
 *         self.weights = weights
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.symbolic_weight
 * 
 */

static void __pyx_pf_9casuarius_14SymbolicWeight_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_9casuarius_SymbolicWeight *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "casuarius.pyx":177
 * 
 *     def __dealloc__(self):
 *         del self.symbolic_weight             # <<<<<<<<<<<<<<
 * 
 *     def __float__(self):
 */
  delete __pyx_v_self->symbolic_weight;

  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_14SymbolicWeight_5__float__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9casuarius_14SymbolicWeight_5__float__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__float__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_14SymbolicWeight_4__float__(((struct __pyx_obj_9casuarius_SymbolicWeight *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":179
 *         del self.symbolic_weight
 * 
 *     def __float__(self):             # <<<<<<<<<<<<<<
 *         return self.symbolic_weight.AsDouble()
 * 
 */

static PyObject *__pyx_pf_9casuarius_14SymbolicWeight_4__float__(struct __pyx_obj_9casuarius_SymbolicWeight *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__float__", 0);

  /* "casuarius.pyx":180
 * 
 *     def __float__(self):
 *         return self.symbolic_weight.AsDouble()             # <<<<<<<<<<<<<<
 * 
 *     def __mul__(self, double other):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->symbolic_weight->AsDouble()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 180; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("casuarius.SymbolicWeight.__float__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_14SymbolicWeight_7__mul__(PyObject *__pyx_v_self, PyObject *__pyx_arg_other); /*proto*/
static PyObject *__pyx_pw_9casuarius_14SymbolicWeight_7__mul__(PyObject *__pyx_v_self, PyObject *__pyx_arg_other) {
  double __pyx_v_other;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__mul__ (wrapper)", 0);
  assert(__pyx_arg_other); {
    __pyx_v_other = __pyx_PyFloat_AsDouble(__pyx_arg_other); if (unlikely((__pyx_v_other == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 182; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("casuarius.SymbolicWeight.__mul__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9casuarius_14SymbolicWeight_6__mul__(((PyObject *)__pyx_v_self), ((double)__pyx_v_other));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_9casuarius_14SymbolicWeight_7__mul___2generator(__pyx_GeneratorObject *__pyx_generator, PyObject *__pyx_sent_value); /* proto */

/* "casuarius.pyx":183
 * 
 *     def __mul__(self, double other):
 *         new_weights = tuple(x*other for x in self.weights)             # <<<<<<<<<<<<<<
 *         return SymbolicWeight(new_weights)
 * 
 */

static PyObject *__pyx_pf_9casuarius_14SymbolicWeight_7__mul___genexpr(PyObject *__pyx_self) {
  struct __pyx_obj_9casuarius___pyx_scope_struct_1_genexpr *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("genexpr", 0);
  __pyx_cur_scope = (struct __pyx_obj_9casuarius___pyx_scope_struct_1_genexpr *)__pyx_ptype_9casuarius___pyx_scope_struct_1_genexpr->tp_new(__pyx_ptype_9casuarius___pyx_scope_struct_1_genexpr, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_cur_scope);
  __pyx_cur_scope->__pyx_outer_scope = (struct __pyx_obj_9casuarius___pyx_scope_struct____mul__ *) __pyx_self;
  __Pyx_INCREF(((PyObject *)__pyx_cur_scope->__pyx_outer_scope));
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_outer_scope);
  {
    __pyx_GeneratorObject *gen = __Pyx_Generator_New((__pyx_generator_body_t) __pyx_gb_9casuarius_14SymbolicWeight_7__mul___2generator, (PyObject *) __pyx_cur_scope); if (unlikely(!gen)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("casuarius.SymbolicWeight.__mul__.genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_9casuarius_14SymbolicWeight_7__mul___2generator(__pyx_GeneratorObject *__pyx_generator, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_9casuarius___pyx_scope_struct_1_genexpr *__pyx_cur_scope = ((struct __pyx_obj_9casuarius___pyx_scope_struct_1_genexpr *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *(*__pyx_t_4)(PyObject *);
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("None", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L6_resume_from_yield;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__pyx_cur_scope->__pyx_outer_scope->__pyx_v_self)) { __Pyx_RaiseClosureNameError("self"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
  __pyx_t_1 = PyObject_GetAttr(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_self, __pyx_n_s__weights); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyList_CheckExact(__pyx_t_1) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_3 = 0;
    __pyx_t_4 = NULL;
  } else {
    __pyx_t_3 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = Py_TYPE(__pyx_t_2)->tp_iternext;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (!__pyx_t_4 && PyList_CheckExact(__pyx_t_2)) {
      if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_2)) break;
      __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++;
    } else if (!__pyx_t_4 && PyTuple_CheckExact(__pyx_t_2)) {
      if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
      __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++;
    } else {
      __pyx_t_1 = __pyx_t_4(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_x);
    __Pyx_XDECREF(__pyx_cur_scope->__pyx_v_x);
    __Pyx_GIVEREF(__pyx_t_1);
    __pyx_cur_scope->__pyx_v_x = __pyx_t_1;
    __pyx_t_1 = 0;
    __pyx_t_1 = PyFloat_FromDouble(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_other); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = PyNumber_Multiply(__pyx_cur_scope->__pyx_v_x, __pyx_t_1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_r = __pyx_t_5;
    __pyx_t_5 = 0;
    __Pyx_XGIVEREF(__pyx_t_2);
    __pyx_cur_scope->__pyx_t_0 = __pyx_t_2;
    __pyx_cur_scope->__pyx_t_1 = __pyx_t_3;
    __pyx_cur_scope->__pyx_t_2 = __pyx_t_4;
    __Pyx_XGIVEREF(__pyx_r);
    __Pyx_RefNannyFinishContext();
    /* return from generator, yielding value */
    __pyx_generator->resume_label = 1;
    return __pyx_r;
    __pyx_L6_resume_from_yield:;
    __pyx_t_2 = __pyx_cur_scope->__pyx_t_0;
    __pyx_cur_scope->__pyx_t_0 = 0;
    __Pyx_XGOTREF(__pyx_t_2);
    __pyx_t_3 = __pyx_cur_scope->__pyx_t_1;
    __pyx_t_4 = __pyx_cur_scope->__pyx_t_2;
    if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r);
  __pyx_generator->resume_label = -1;
  __Pyx_RefNannyFinishContext();
  return NULL;
}

/* "casuarius.pyx":182
 *         return self.symbolic_weight.AsDouble()
 * 
 *     def __mul__(self, double other):             # <<<<<<<<<<<<<<
 *         new_weights = tuple(x*other for x in self.weights)
 *         return SymbolicWeight(new_weights)
 */

static PyObject *__pyx_pf_9casuarius_14SymbolicWeight_6__mul__(PyObject *__pyx_v_self, double __pyx_v_other) {
  struct __pyx_obj_9casuarius___pyx_scope_struct____mul__ *__pyx_cur_scope;
  PyObject *__pyx_v_new_weights = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__mul__", 0);
  __pyx_cur_scope = (struct __pyx_obj_9casuarius___pyx_scope_struct____mul__ *)__pyx_ptype_9casuarius___pyx_scope_struct____mul__->tp_new(__pyx_ptype_9casuarius___pyx_scope_struct____mul__, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_cur_scope);
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_self);
  __pyx_cur_scope->__pyx_v_other = __pyx_v_other;

  /* "casuarius.pyx":183
 * 
 *     def __mul__(self, double other):
 *         new_weights = tuple(x*other for x in self.weights)             # <<<<<<<<<<<<<<
 *         return SymbolicWeight(new_weights)
 * 
 */
  __pyx_t_1 = __pyx_pf_9casuarius_14SymbolicWeight_7__mul___genexpr(((PyObject*)__pyx_cur_scope)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)(&PyTuple_Type))), ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_v_new_weights = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "casuarius.pyx":184
 *     def __mul__(self, double other):
 *         new_weights = tuple(x*other for x in self.weights)
 *         return SymbolicWeight(new_weights)             # <<<<<<<<<<<<<<
 * 
 *     def __rmul__(self, double other):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 184; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_new_weights));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_new_weights));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_new_weights));
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_SymbolicWeight)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 184; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("casuarius.SymbolicWeight.__mul__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_new_weights);
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_14SymbolicWeight_9__rmul__(PyObject *__pyx_v_self, PyObject *__pyx_arg_other); /*proto*/
static PyObject *__pyx_pw_9casuarius_14SymbolicWeight_9__rmul__(PyObject *__pyx_v_self, PyObject *__pyx_arg_other) {
  double __pyx_v_other;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__rmul__ (wrapper)", 0);
  assert(__pyx_arg_other); {
    __pyx_v_other = __pyx_PyFloat_AsDouble(__pyx_arg_other); if (unlikely((__pyx_v_other == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("casuarius.SymbolicWeight.__rmul__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9casuarius_14SymbolicWeight_8__rmul__(((struct __pyx_obj_9casuarius_SymbolicWeight *)__pyx_v_self), ((double)__pyx_v_other));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":186
 *         return SymbolicWeight(new_weights)
 * 
 *     def __rmul__(self, double other):             # <<<<<<<<<<<<<<
 *         return self.__mul__(other)
 * 
 */

static PyObject *__pyx_pf_9casuarius_14SymbolicWeight_8__rmul__(struct __pyx_obj_9casuarius_SymbolicWeight *__pyx_v_self, double __pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__rmul__", 0);

  /* "casuarius.pyx":187
 * 
 *     def __rmul__(self, double other):
 *         return self.__mul__(other)             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s____mul__); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_other); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("casuarius.SymbolicWeight.__rmul__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_14SymbolicWeight_11__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9casuarius_14SymbolicWeight_11__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_14SymbolicWeight_10__repr__(((struct __pyx_obj_9casuarius_SymbolicWeight *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":189
 *         return self.__mul__(other)
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return 'SymbolicWeight({0!r})'.format(self.weights)
 * 
 */

static PyObject *__pyx_pf_9casuarius_14SymbolicWeight_10__repr__(struct __pyx_obj_9casuarius_SymbolicWeight *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "casuarius.pyx":190
 * 
 *     def __repr__(self):
 *         return 'SymbolicWeight({0!r})'.format(self.weights)             # <<<<<<<<<<<<<<
 * 
 *     def __hash__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_kp_s_3), __pyx_n_s__format); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->weights));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_self->weights));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->weights));
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("casuarius.SymbolicWeight.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static Py_hash_t __pyx_pw_9casuarius_14SymbolicWeight_13__hash__(PyObject *__pyx_v_self); /*proto*/
static Py_hash_t __pyx_pw_9casuarius_14SymbolicWeight_13__hash__(PyObject *__pyx_v_self) {
  Py_hash_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__hash__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_14SymbolicWeight_12__hash__(((struct __pyx_obj_9casuarius_SymbolicWeight *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":192
 *         return 'SymbolicWeight({0!r})'.format(self.weights)
 * 
 *     def __hash__(self):             # <<<<<<<<<<<<<<
 *         return object.__hash__(self)
 * 
 */

static Py_hash_t __pyx_pf_9casuarius_14SymbolicWeight_12__hash__(struct __pyx_obj_9casuarius_SymbolicWeight *__pyx_v_self) {
  Py_hash_t __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_hash_t __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__hash__", 0);

  /* "casuarius.pyx":193
 * 
 *     def __hash__(self):
 *         return object.__hash__(self)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = PyObject_GetAttr(__pyx_builtin_object, __pyx_n_s____hash__); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyInt_AsHash_t(__pyx_t_3); if (unlikely((__pyx_t_4 == (Py_hash_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  goto __pyx_L0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("casuarius.SymbolicWeight.__hash__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  if (unlikely(__pyx_r == -1) && !PyErr_Occurred()) __pyx_r = -2;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_14SymbolicWeight_7weights_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9casuarius_14SymbolicWeight_7weights_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_14SymbolicWeight_7weights___get__(((struct __pyx_obj_9casuarius_SymbolicWeight *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":164
 * cdef class SymbolicWeight:
 *     cdef ClSymbolicWeight *symbolic_weight
 *     cdef readonly tuple weights             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, tuple weights):
 */

static PyObject *__pyx_pf_9casuarius_14SymbolicWeight_7weights___get__(struct __pyx_obj_9casuarius_SymbolicWeight *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->weights));
  __pyx_r = ((PyObject *)__pyx_v_self->weights);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9casuarius_8Strength_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9casuarius_8Strength_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_name = 0;
  struct __pyx_obj_9casuarius_SymbolicWeight *__pyx_v_symbolic_weight = 0;
  int __pyx_v_is_required;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__name,&__pyx_n_s__symbolic_weight,&__pyx_n_s__is_required,0};
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__name);
        if (likely(values[0])) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__symbolic_weight);
        if (likely(values[1])) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 202; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__is_required);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 202; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      if (values[2]) {
      } else {

        /* "casuarius.pyx":202
 *     cdef readonly bint is_required
 * 
 *     def __cinit__(self, bytes name, SymbolicWeight symbolic_weight, bint is_required=False):             # <<<<<<<<<<<<<<
 *         self.strength = new ClStrength(string(<char*>name), deref(symbolic_weight.symbolic_weight), is_required)
 *         self.name = name
 */
        __pyx_v_is_required = ((int)0);
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_name = ((PyObject*)values[0]);
    __pyx_v_symbolic_weight = ((struct __pyx_obj_9casuarius_SymbolicWeight *)values[1]);
    if (values[2]) {
      __pyx_v_is_required = __Pyx_PyObject_IsTrue(values[2]); if (unlikely((__pyx_v_is_required == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 202; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_is_required = ((int)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 202; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("casuarius.Strength.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_name), (&PyBytes_Type), 1, "name", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_symbolic_weight), __pyx_ptype_9casuarius_SymbolicWeight, 1, "symbolic_weight", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_9casuarius_8Strength___cinit__(((struct __pyx_obj_9casuarius_Strength *)__pyx_v_self), __pyx_v_name, __pyx_v_symbolic_weight, __pyx_v_is_required);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9casuarius_8Strength___cinit__(struct __pyx_obj_9casuarius_Strength *__pyx_v_self, PyObject *__pyx_v_name, struct __pyx_obj_9casuarius_SymbolicWeight *__pyx_v_symbolic_weight, int __pyx_v_is_required) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "casuarius.pyx":203
 * 
 *     def __cinit__(self, bytes name, SymbolicWeight symbolic_weight, bint is_required=False):
 *         self.strength = new ClStrength(string(<char*>name), deref(symbolic_weight.symbolic_weight), is_required)             # <<<<<<<<<<<<<<
 *         self.name = name
 *         self.symbolic_weight = symbolic_weight
 */
  __pyx_t_1 = PyBytes_AsString(((PyObject *)__pyx_v_name)); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->strength = new Strength(std::string(((char *)__pyx_t_1)), (*__pyx_v_symbolic_weight->symbolic_weight), __pyx_v_is_required);

  /* "casuarius.pyx":204
 *     def __cinit__(self, bytes name, SymbolicWeight symbolic_weight, bint is_required=False):
 *         self.strength = new ClStrength(string(<char*>name), deref(symbolic_weight.symbolic_weight), is_required)
 *         self.name = name             # <<<<<<<<<<<<<<
 *         self.symbolic_weight = symbolic_weight
 *         self.is_required = is_required
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_name));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_name));
  __Pyx_GOTREF(__pyx_v_self->name);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->name));
  __pyx_v_self->name = __pyx_v_name;

  /* "casuarius.pyx":205
 *         self.strength = new ClStrength(string(<char*>name), deref(symbolic_weight.symbolic_weight), is_required)
 *         self.name = name
 *         self.symbolic_weight = symbolic_weight             # <<<<<<<<<<<<<<
 *         self.is_required = is_required
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_symbolic_weight));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_symbolic_weight));
  __Pyx_GOTREF(__pyx_v_self->symbolic_weight);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->symbolic_weight));
  __pyx_v_self->symbolic_weight = __pyx_v_symbolic_weight;

  /* "casuarius.pyx":206
 *         self.name = name
 *         self.symbolic_weight = symbolic_weight
 *         self.is_required = is_required             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->is_required = __pyx_v_is_required;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("casuarius.Strength.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_9casuarius_8Strength_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_9casuarius_8Strength_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_9casuarius_8Strength_2__dealloc__(((struct __pyx_obj_9casuarius_Strength *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "casuarius.pyx":208
 *         self.is_required = is_required
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.strength
 * 
 */

static void __pyx_pf_9casuarius_8Strength_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_9casuarius_Strength *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "casuarius.pyx":209
 * 
 *     def __dealloc__(self):
 *         del self.strength             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  delete __pyx_v_self->strength;

  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_8Strength_5__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9casuarius_8Strength_5__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_8Strength_4__repr__(((struct __pyx_obj_9casuarius_Strength *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":211
 *         del self.strength
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         if self.is_required:
 *             template = 'Strength({name!r}, {symbolic_weight!r}, is_required={is_required})'
 */

static PyObject *__pyx_pf_9casuarius_8Strength_4__repr__(struct __pyx_obj_9casuarius_Strength *__pyx_v_self) {
  PyObject *__pyx_v_template = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "casuarius.pyx":212
 * 
 *     def __repr__(self):
 *         if self.is_required:             # <<<<<<<<<<<<<<
 *             template = 'Strength({name!r}, {symbolic_weight!r}, is_required={is_required})'
 *         else:
 */
  if (__pyx_v_self->is_required) {

    /* "casuarius.pyx":213
 *     def __repr__(self):
 *         if self.is_required:
 *             template = 'Strength({name!r}, {symbolic_weight!r}, is_required={is_required})'             # <<<<<<<<<<<<<<
 *         else:
 *             template = 'Strength({name!r}, {symbolic_weight!r})'
 */
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_4));
    __pyx_v_template = ((PyObject *)__pyx_kp_s_4);
    goto __pyx_L3;
  }
  /*else*/ {

    /* "casuarius.pyx":215
 *             template = 'Strength({name!r}, {symbolic_weight!r}, is_required={is_required})'
 *         else:
 *             template = 'Strength({name!r}, {symbolic_weight!r})'             # <<<<<<<<<<<<<<
 *         return template.format(name=self.name, symbolic_weight=self.symbolic_weight, is_required=self.is_required)
 * 
 */
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_5));
    __pyx_v_template = ((PyObject *)__pyx_kp_s_5);
  }
  __pyx_L3:;

  /* "casuarius.pyx":216
 *         else:
 *             template = 'Strength({name!r}, {symbolic_weight!r})'
 *         return template.format(name=self.name, symbolic_weight=self.symbolic_weight, is_required=self.is_required)             # <<<<<<<<<<<<<<
 * 
 *     def __str__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_template, __pyx_n_s__format); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 216; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 216; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  if (PyDict_SetItem(__pyx_t_2, ((PyObject *)__pyx_n_s__name), ((PyObject *)__pyx_v_self->name)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 216; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_2, ((PyObject *)__pyx_n_s__symbolic_weight), ((PyObject *)__pyx_v_self->symbolic_weight)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 216; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __Pyx_PyBool_FromLong(__pyx_v_self->is_required); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 216; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, ((PyObject *)__pyx_n_s__is_required), __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 216; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_empty_tuple), ((PyObject *)__pyx_t_2)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 216; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("casuarius.Strength.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_template);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_8Strength_7__str__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9casuarius_8Strength_7__str__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__str__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_8Strength_6__str__(((struct __pyx_obj_9casuarius_Strength *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":218
 *         return template.format(name=self.name, symbolic_weight=self.symbolic_weight, is_required=self.is_required)
 * 
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         return repr(self.name)
 * 
 */

static PyObject *__pyx_pf_9casuarius_8Strength_6__str__(struct __pyx_obj_9casuarius_Strength *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__str__", 0);

  /* "casuarius.pyx":219
 * 
 *     def __str__(self):
 *         return repr(self.name)             # <<<<<<<<<<<<<<
 * 
 *     def __hash__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_v_self->name);
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Repr(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 219; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("casuarius.Strength.__str__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static Py_hash_t __pyx_pw_9casuarius_8Strength_9__hash__(PyObject *__pyx_v_self); /*proto*/
static Py_hash_t __pyx_pw_9casuarius_8Strength_9__hash__(PyObject *__pyx_v_self) {
  Py_hash_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__hash__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_8Strength_8__hash__(((struct __pyx_obj_9casuarius_Strength *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":221
 *         return repr(self.name)
 * 
 *     def __hash__(self):             # <<<<<<<<<<<<<<
 *         return object.__hash__(self)
 * 
 */

static Py_hash_t __pyx_pf_9casuarius_8Strength_8__hash__(struct __pyx_obj_9casuarius_Strength *__pyx_v_self) {
  Py_hash_t __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_hash_t __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__hash__", 0);

  /* "casuarius.pyx":222
 * 
 *     def __hash__(self):
 *         return object.__hash__(self)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = PyObject_GetAttr(__pyx_builtin_object, __pyx_n_s____hash__); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyInt_AsHash_t(__pyx_t_3); if (unlikely((__pyx_t_4 == (Py_hash_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  goto __pyx_L0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("casuarius.Strength.__hash__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  if (unlikely(__pyx_r == -1) && !PyErr_Occurred()) __pyx_r = -2;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_8Strength_4name_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9casuarius_8Strength_4name_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_8Strength_4name___get__(((struct __pyx_obj_9casuarius_Strength *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":198
 * cdef class Strength:
 *     cdef ClStrength *strength
 *     cdef readonly bytes name             # <<<<<<<<<<<<<<
 *     cdef readonly SymbolicWeight symbolic_weight
 *     cdef readonly bint is_required
 */

static PyObject *__pyx_pf_9casuarius_8Strength_4name___get__(struct __pyx_obj_9casuarius_Strength *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->name));
  __pyx_r = ((PyObject *)__pyx_v_self->name);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_8Strength_15symbolic_weight_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9casuarius_8Strength_15symbolic_weight_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_8Strength_15symbolic_weight___get__(((struct __pyx_obj_9casuarius_Strength *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":199
 *     cdef ClStrength *strength
 *     cdef readonly bytes name
 *     cdef readonly SymbolicWeight symbolic_weight             # <<<<<<<<<<<<<<
 *     cdef readonly bint is_required
 * 
 */

static PyObject *__pyx_pf_9casuarius_8Strength_15symbolic_weight___get__(struct __pyx_obj_9casuarius_Strength *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->symbolic_weight));
  __pyx_r = ((PyObject *)__pyx_v_self->symbolic_weight);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_8Strength_11is_required_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9casuarius_8Strength_11is_required_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_8Strength_11is_required___get__(((struct __pyx_obj_9casuarius_Strength *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":200
 *     cdef readonly bytes name
 *     cdef readonly SymbolicWeight symbolic_weight
 *     cdef readonly bint is_required             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, bytes name, SymbolicWeight symbolic_weight, bint is_required=False):
 */

static PyObject *__pyx_pf_9casuarius_8Strength_11is_required___get__(struct __pyx_obj_9casuarius_Strength *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->is_required); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 200; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("casuarius.Strength.is_required.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":238
 * 
 * 
 * cdef bint almost_equal(double a, double b, double eps=1e-8):             # <<<<<<<<<<<<<<
 *     return fabs(a - b) < eps
 * 
 */

static int __pyx_f_9casuarius_almost_equal(double __pyx_v_a, double __pyx_v_b, struct __pyx_opt_args_9casuarius_almost_equal *__pyx_optional_args) {
  double __pyx_v_eps = ((double)1e-8);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("almost_equal", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_eps = __pyx_optional_args->eps;
    }
  }

  /* "casuarius.pyx":239
 * 
 * cdef bint almost_equal(double a, double b, double eps=1e-8):
 *     return fabs(a - b) < eps             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = (fabs((__pyx_v_a - __pyx_v_b)) < __pyx_v_eps);
  goto __pyx_L0;

  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_1nonlinear(PyObject *__pyx_v_self, PyObject *__pyx_v_msg); /*proto*/
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_1nonlinear(PyObject *__pyx_v_self, PyObject *__pyx_v_msg) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("nonlinear (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_14LinearSymbolic_nonlinear(((struct __pyx_obj_9casuarius_LinearSymbolic *)__pyx_v_self), ((PyObject *)__pyx_v_msg));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":244
 * cdef class LinearSymbolic:
 * 
 *     def nonlinear(self, msg):             # <<<<<<<<<<<<<<
 *         raise TypeError('Non-linear expression: %s' % msg)
 * 
 */

static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_nonlinear(CYTHON_UNUSED struct __pyx_obj_9casuarius_LinearSymbolic *__pyx_v_self, PyObject *__pyx_v_msg) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("nonlinear", 0);

  /* "casuarius.pyx":245
 * 
 *     def nonlinear(self, msg):
 *         raise TypeError('Non-linear expression: %s' % msg)             # <<<<<<<<<<<<<<
 * 
 *     def nonlinear_op(self, op):
 */
  __pyx_t_1 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_6), __pyx_v_msg); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 245; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 245; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_t_1));
  __Pyx_GIVEREF(((PyObject *)__pyx_t_1));
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_TypeError, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 245; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 245; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("casuarius.LinearSymbolic.nonlinear", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_3nonlinear_op(PyObject *__pyx_v_self, PyObject *__pyx_v_op); /*proto*/
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_3nonlinear_op(PyObject *__pyx_v_self, PyObject *__pyx_v_op) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("nonlinear_op (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_14LinearSymbolic_2nonlinear_op(((struct __pyx_obj_9casuarius_LinearSymbolic *)__pyx_v_self), ((PyObject *)__pyx_v_op));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":247
 *         raise TypeError('Non-linear expression: %s' % msg)
 * 
 *     def nonlinear_op(self, op):             # <<<<<<<<<<<<<<
 *         raise TypeError('Non-linear operator: `%s`' % op)
 * 
 */

static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_2nonlinear_op(CYTHON_UNUSED struct __pyx_obj_9casuarius_LinearSymbolic *__pyx_v_self, PyObject *__pyx_v_op) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("nonlinear_op", 0);

  /* "casuarius.pyx":248
 * 
 *     def nonlinear_op(self, op):
 *         raise TypeError('Non-linear operator: `%s`' % op)             # <<<<<<<<<<<<<<
 * 
 *     def convert_to_csw(self):
 */
  __pyx_t_1 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_7), __pyx_v_op); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 248; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 248; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_t_1));
  __Pyx_GIVEREF(((PyObject *)__pyx_t_1));
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_TypeError, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 248; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 248; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("casuarius.LinearSymbolic.nonlinear_op", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_5convert_to_csw(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_5convert_to_csw(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("convert_to_csw (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_14LinearSymbolic_4convert_to_csw(((struct __pyx_obj_9casuarius_LinearSymbolic *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":250
 *         raise TypeError('Non-linear operator: `%s`' % op)
 * 
 *     def convert_to_csw(self):             # <<<<<<<<<<<<<<
 *         raise NotImplementedError
 * 
 */

static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_4convert_to_csw(CYTHON_UNUSED struct __pyx_obj_9casuarius_LinearSymbolic *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("convert_to_csw", 0);

  /* "casuarius.pyx":251
 * 
 *     def convert_to_csw(self):
 *         raise NotImplementedError             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  __Pyx_Raise(__pyx_builtin_NotImplementedError, 0, 0, 0);
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 251; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("casuarius.LinearSymbolic.convert_to_csw", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_7__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_7__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_14LinearSymbolic_6__repr__(((struct __pyx_obj_9casuarius_LinearSymbolic *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":253
 *         raise NotImplementedError
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         raise NotImplementedError
 * 
 */

static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_6__repr__(CYTHON_UNUSED struct __pyx_obj_9casuarius_LinearSymbolic *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "casuarius.pyx":254
 * 
 *     def __repr__(self):
 *         raise NotImplementedError             # <<<<<<<<<<<<<<
 * 
 *     def __add__(self, other):
 */
  __Pyx_Raise(__pyx_builtin_NotImplementedError, 0, 0, 0);
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 254; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("casuarius.LinearSymbolic.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_9__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_9__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__add__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_14LinearSymbolic_8__add__(((PyObject *)__pyx_v_self), ((PyObject *)__pyx_v_other));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":256
 *         raise NotImplementedError
 * 
 *     def __add__(self, other):             # <<<<<<<<<<<<<<
 *         raise NotImplementedError
 * 
 */

static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_8__add__(CYTHON_UNUSED PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__add__", 0);

  /* "casuarius.pyx":257
 * 
 *     def __add__(self, other):
 *         raise NotImplementedError             # <<<<<<<<<<<<<<
 * 
 *     def __mul__(self, other):
 */
  __Pyx_Raise(__pyx_builtin_NotImplementedError, 0, 0, 0);
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 257; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("casuarius.LinearSymbolic.__add__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_11__mul__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_11__mul__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__mul__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_14LinearSymbolic_10__mul__(((PyObject *)__pyx_v_self), ((PyObject *)__pyx_v_other));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":259
 *         raise NotImplementedError
 * 
 *     def __mul__(self, other):             # <<<<<<<<<<<<<<
 *         raise NotImplementedError
 * 
 */

static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_10__mul__(CYTHON_UNUSED PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__mul__", 0);

  /* "casuarius.pyx":260
 * 
 *     def __mul__(self, other):
 *         raise NotImplementedError             # <<<<<<<<<<<<<<
 * 
 *     def __div__(self, other):
 */
  __Pyx_Raise(__pyx_builtin_NotImplementedError, 0, 0, 0);
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 260; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("casuarius.LinearSymbolic.__mul__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
#if PY_MAJOR_VERSION < 3
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_13__div__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_13__div__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__div__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_14LinearSymbolic_12__div__(((PyObject *)__pyx_v_self), ((PyObject *)__pyx_v_other));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
#endif /*!(#if PY_MAJOR_VERSION < 3)*/

/* "casuarius.pyx":262
 *         raise NotImplementedError
 * 
 *     def __div__(self, other):             # <<<<<<<<<<<<<<
 *         raise NotImplementedError
 * 
 */

#if PY_MAJOR_VERSION < 3
static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_12__div__(CYTHON_UNUSED PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__div__", 0);

  /* "casuarius.pyx":263
 * 
 *     def __div__(self, other):
 *         raise NotImplementedError             # <<<<<<<<<<<<<<
 * 
 *     def __str__(self):
 */
  __Pyx_Raise(__pyx_builtin_NotImplementedError, 0, 0, 0);
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 263; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("casuarius.LinearSymbolic.__div__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
#endif /*!(#if PY_MAJOR_VERSION < 3)*/

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_15__str__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_15__str__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__str__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_14LinearSymbolic_14__str__(((struct __pyx_obj_9casuarius_LinearSymbolic *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":265
 *         raise NotImplementedError
 * 
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         return self.__repr__()
 * 
 */

static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_14__str__(struct __pyx_obj_9casuarius_LinearSymbolic *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__str__", 0);

  /* "casuarius.pyx":266
 * 
 *     def __str__(self):
 *         return self.__repr__()             # <<<<<<<<<<<<<<
 * 
 *     def __sub__(self, other):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s____repr__); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 266; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 266; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("casuarius.LinearSymbolic.__str__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_17__sub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_17__sub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__sub__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_14LinearSymbolic_16__sub__(((PyObject *)__pyx_v_self), ((PyObject *)__pyx_v_other));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":268
 *         return self.__repr__()
 * 
 *     def __sub__(self, other):             # <<<<<<<<<<<<<<
 *         return self + (-1.0 * other)
 * 
 */

static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_16__sub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__sub__", 0);

  /* "casuarius.pyx":269
 * 
 *     def __sub__(self, other):
 *         return self + (-1.0 * other)             # <<<<<<<<<<<<<<
 * 
 *     def __floordiv__(self, other):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(-1.0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 269; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyNumber_Multiply(__pyx_t_1, __pyx_v_other); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 269; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Add(__pyx_v_self, __pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 269; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("casuarius.LinearSymbolic.__sub__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_19__floordiv__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_19__floordiv__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__floordiv__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_14LinearSymbolic_18__floordiv__(((PyObject *)__pyx_v_self), ((PyObject *)__pyx_v_other));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":271
 *         return self + (-1.0 * other)
 * 
 *     def __floordiv__(self, other):             # <<<<<<<<<<<<<<
 *         if not isinstance(self, LinearSymbolic):
 *             self = other
 */

static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_18__floordiv__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__floordiv__", 0);
  __Pyx_INCREF(__pyx_v_self);

  /* "casuarius.pyx":272
 * 
 *     def __floordiv__(self, other):
 *         if not isinstance(self, LinearSymbolic):             # <<<<<<<<<<<<<<
 *             self = other
 *         self.nonlinear_op('//')
 */
  __pyx_t_1 = ((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearSymbolic));
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_self, __pyx_t_1); 
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (!__pyx_t_2);
  if (__pyx_t_3) {

    /* "casuarius.pyx":273
 *     def __floordiv__(self, other):
 *         if not isinstance(self, LinearSymbolic):
 *             self = other             # <<<<<<<<<<<<<<
 *         self.nonlinear_op('//')
 * 
 */
    __Pyx_INCREF(__pyx_v_other);
    __Pyx_DECREF(__pyx_v_self);
    __pyx_v_self = __pyx_v_other;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "casuarius.pyx":274
 *         if not isinstance(self, LinearSymbolic):
 *             self = other
 *         self.nonlinear_op('//')             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__nonlinear_op); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 274; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_k_tuple_9), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 274; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("casuarius.LinearSymbolic.__floordiv__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_self);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_21__mod__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_21__mod__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__mod__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_14LinearSymbolic_20__mod__(((PyObject *)__pyx_v_self), ((PyObject *)__pyx_v_other));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":277
 * 
 * 
 *     def __mod__(self, other):             # <<<<<<<<<<<<<<
 *         if not isinstance(self, LinearSymbolic):
 *             self = other
 */

static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_20__mod__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__mod__", 0);
  __Pyx_INCREF(__pyx_v_self);

  /* "casuarius.pyx":278
 * 
 *     def __mod__(self, other):
 *         if not isinstance(self, LinearSymbolic):             # <<<<<<<<<<<<<<
 *             self = other
 *         self.nonlinear_op('%')
 */
  __pyx_t_1 = ((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearSymbolic));
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_self, __pyx_t_1); 
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (!__pyx_t_2);
  if (__pyx_t_3) {

    /* "casuarius.pyx":279
 *     def __mod__(self, other):
 *         if not isinstance(self, LinearSymbolic):
 *             self = other             # <<<<<<<<<<<<<<
 *         self.nonlinear_op('%')
 * 
 */
    __Pyx_INCREF(__pyx_v_other);
    __Pyx_DECREF(__pyx_v_self);
    __pyx_v_self = __pyx_v_other;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "casuarius.pyx":280
 *         if not isinstance(self, LinearSymbolic):
 *             self = other
 *         self.nonlinear_op('%')             # <<<<<<<<<<<<<<
 * 
 *     def __divmod__(self, other):
 */
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__nonlinear_op); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 280; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_k_tuple_11), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 280; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("casuarius.LinearSymbolic.__mod__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_self);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_23__divmod__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_23__divmod__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__divmod__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_14LinearSymbolic_22__divmod__(((PyObject *)__pyx_v_self), ((PyObject *)__pyx_v_other));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":282
 *         self.nonlinear_op('%')
 * 
 *     def __divmod__(self, other):             # <<<<<<<<<<<<<<
 *         if not isinstance(self, LinearSymbolic):
 *             self = other
 */

static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_22__divmod__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__divmod__", 0);
  __Pyx_INCREF(__pyx_v_self);

  /* "casuarius.pyx":283
 * 
 *     def __divmod__(self, other):
 *         if not isinstance(self, LinearSymbolic):             # <<<<<<<<<<<<<<
 *             self = other
 *         self.nonlinear_op('divmod')
 */
  __pyx_t_1 = ((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearSymbolic));
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_self, __pyx_t_1); 
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (!__pyx_t_2);
  if (__pyx_t_3) {

    /* "casuarius.pyx":284
 *     def __divmod__(self, other):
 *         if not isinstance(self, LinearSymbolic):
 *             self = other             # <<<<<<<<<<<<<<
 *         self.nonlinear_op('divmod')
 * 
 */
    __Pyx_INCREF(__pyx_v_other);
    __Pyx_DECREF(__pyx_v_self);
    __pyx_v_self = __pyx_v_other;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "casuarius.pyx":285
 *         if not isinstance(self, LinearSymbolic):
 *             self = other
 *         self.nonlinear_op('divmod')             # <<<<<<<<<<<<<<
 * 
 *     def __pow__(self, other, mod):
 */
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__nonlinear_op); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 285; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_k_tuple_12), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 285; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("casuarius.LinearSymbolic.__divmod__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_self);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_25__pow__(PyObject *__pyx_v_self, PyObject *__pyx_v_other, PyObject *__pyx_v_mod); /*proto*/
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_25__pow__(PyObject *__pyx_v_self, PyObject *__pyx_v_other, PyObject *__pyx_v_mod) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pow__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_14LinearSymbolic_24__pow__(((PyObject *)__pyx_v_self), ((PyObject *)__pyx_v_other), ((PyObject *)__pyx_v_mod));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":287
 *         self.nonlinear_op('divmod')
 * 
 *     def __pow__(self, other, mod):             # <<<<<<<<<<<<<<
 *         if not isinstance(self, LinearSymbolic):
 *             self = other
 */

static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_24__pow__(PyObject *__pyx_v_self, PyObject *__pyx_v_other, CYTHON_UNUSED PyObject *__pyx_v_mod) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pow__", 0);
  __Pyx_INCREF(__pyx_v_self);

  /* "casuarius.pyx":288
 * 
 *     def __pow__(self, other, mod):
 *         if not isinstance(self, LinearSymbolic):             # <<<<<<<<<<<<<<
 *             self = other
 *         self.nonlinear_op('**')
 */
  __pyx_t_1 = ((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearSymbolic));
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_self, __pyx_t_1); 
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (!__pyx_t_2);
  if (__pyx_t_3) {

    /* "casuarius.pyx":289
 *     def __pow__(self, other, mod):
 *         if not isinstance(self, LinearSymbolic):
 *             self = other             # <<<<<<<<<<<<<<
 *         self.nonlinear_op('**')
 * 
 */
    __Pyx_INCREF(__pyx_v_other);
    __Pyx_DECREF(__pyx_v_self);
    __pyx_v_self = __pyx_v_other;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "casuarius.pyx":290
 *         if not isinstance(self, LinearSymbolic):
 *             self = other
 *         self.nonlinear_op('**')             # <<<<<<<<<<<<<<
 * 
 *     def __lshift__(self, other):
 */
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__nonlinear_op); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_k_tuple_14), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("casuarius.LinearSymbolic.__pow__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_self);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_27__lshift__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_27__lshift__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__lshift__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_14LinearSymbolic_26__lshift__(((PyObject *)__pyx_v_self), ((PyObject *)__pyx_v_other));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":292
 *         self.nonlinear_op('**')
 * 
 *     def __lshift__(self, other):             # <<<<<<<<<<<<<<
 *         if not isinstance(self, LinearSymbolic):
 *             self = other
 */

static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_26__lshift__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__lshift__", 0);
  __Pyx_INCREF(__pyx_v_self);

  /* "casuarius.pyx":293
 * 
 *     def __lshift__(self, other):
 *         if not isinstance(self, LinearSymbolic):             # <<<<<<<<<<<<<<
 *             self = other
 *         self.nonlinear_op('<<')
 */
  __pyx_t_1 = ((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearSymbolic));
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_self, __pyx_t_1); 
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (!__pyx_t_2);
  if (__pyx_t_3) {

    /* "casuarius.pyx":294
 *     def __lshift__(self, other):
 *         if not isinstance(self, LinearSymbolic):
 *             self = other             # <<<<<<<<<<<<<<
 *         self.nonlinear_op('<<')
 * 
 */
    __Pyx_INCREF(__pyx_v_other);
    __Pyx_DECREF(__pyx_v_self);
    __pyx_v_self = __pyx_v_other;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "casuarius.pyx":295
 *         if not isinstance(self, LinearSymbolic):
 *             self = other
 *         self.nonlinear_op('<<')             # <<<<<<<<<<<<<<
 * 
 *     def __rshift__(self, other):
 */
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__nonlinear_op); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 295; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_k_tuple_16), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 295; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("casuarius.LinearSymbolic.__lshift__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_self);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_29__rshift__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_29__rshift__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__rshift__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_14LinearSymbolic_28__rshift__(((PyObject *)__pyx_v_self), ((PyObject *)__pyx_v_other));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":297
 *         self.nonlinear_op('<<')
 * 
 *     def __rshift__(self, other):             # <<<<<<<<<<<<<<
 *         if not isinstance(self, LinearSymbolic):
 *             self = other
 */

static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_28__rshift__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__rshift__", 0);
  __Pyx_INCREF(__pyx_v_self);

  /* "casuarius.pyx":298
 * 
 *     def __rshift__(self, other):
 *         if not isinstance(self, LinearSymbolic):             # <<<<<<<<<<<<<<
 *             self = other
 *         self.nonlinear_op('>>')
 */
  __pyx_t_1 = ((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearSymbolic));
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_self, __pyx_t_1); 
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (!__pyx_t_2);
  if (__pyx_t_3) {

    /* "casuarius.pyx":299
 *     def __rshift__(self, other):
 *         if not isinstance(self, LinearSymbolic):
 *             self = other             # <<<<<<<<<<<<<<
 *         self.nonlinear_op('>>')
 * 
 */
    __Pyx_INCREF(__pyx_v_other);
    __Pyx_DECREF(__pyx_v_self);
    __pyx_v_self = __pyx_v_other;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "casuarius.pyx":300
 *         if not isinstance(self, LinearSymbolic):
 *             self = other
 *         self.nonlinear_op('>>')             # <<<<<<<<<<<<<<
 * 
 *     def __and__(self, other):
 */
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__nonlinear_op); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 300; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_k_tuple_18), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 300; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("casuarius.LinearSymbolic.__rshift__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_self);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_31__and__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_31__and__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__and__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_14LinearSymbolic_30__and__(((PyObject *)__pyx_v_self), ((PyObject *)__pyx_v_other));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":302
 *         self.nonlinear_op('>>')
 * 
 *     def __and__(self, other):             # <<<<<<<<<<<<<<
 *         if not isinstance(self, LinearSymbolic):
 *             self = other
 */

static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_30__and__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__and__", 0);
  __Pyx_INCREF(__pyx_v_self);

  /* "casuarius.pyx":303
 * 
 *     def __and__(self, other):
 *         if not isinstance(self, LinearSymbolic):             # <<<<<<<<<<<<<<
 *             self = other
 *         self.nonlinear_op('&')
 */
  __pyx_t_1 = ((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearSymbolic));
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_self, __pyx_t_1); 
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (!__pyx_t_2);
  if (__pyx_t_3) {

    /* "casuarius.pyx":304
 *     def __and__(self, other):
 *         if not isinstance(self, LinearSymbolic):
 *             self = other             # <<<<<<<<<<<<<<
 *         self.nonlinear_op('&')
 * 
 */
    __Pyx_INCREF(__pyx_v_other);
    __Pyx_DECREF(__pyx_v_self);
    __pyx_v_self = __pyx_v_other;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "casuarius.pyx":305
 *         if not isinstance(self, LinearSymbolic):
 *             self = other
 *         self.nonlinear_op('&')             # <<<<<<<<<<<<<<
 * 
 *     def __or__(self, other):
 */
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__nonlinear_op); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 305; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_k_tuple_20), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 305; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("casuarius.LinearSymbolic.__and__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_self);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_33__or__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_33__or__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__or__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_14LinearSymbolic_32__or__(((PyObject *)__pyx_v_self), ((PyObject *)__pyx_v_other));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":307
 *         self.nonlinear_op('&')
 * 
 *     def __or__(self, other):             # <<<<<<<<<<<<<<
 *         if not isinstance(self, LinearSymbolic):
 *             self = other
 */

static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_32__or__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__or__", 0);
  __Pyx_INCREF(__pyx_v_self);

  /* "casuarius.pyx":308
 * 
 *     def __or__(self, other):
 *         if not isinstance(self, LinearSymbolic):             # <<<<<<<<<<<<<<
 *             self = other
 *         self.nonlinear_op('|')
 */
  __pyx_t_1 = ((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearSymbolic));
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_self, __pyx_t_1); 
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (!__pyx_t_2);
  if (__pyx_t_3) {

    /* "casuarius.pyx":309
 *     def __or__(self, other):
 *         if not isinstance(self, LinearSymbolic):
 *             self = other             # <<<<<<<<<<<<<<
 *         self.nonlinear_op('|')
 * 
 */
    __Pyx_INCREF(__pyx_v_other);
    __Pyx_DECREF(__pyx_v_self);
    __pyx_v_self = __pyx_v_other;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "casuarius.pyx":310
 *         if not isinstance(self, LinearSymbolic):
 *             self = other
 *         self.nonlinear_op('|')             # <<<<<<<<<<<<<<
 * 
 *     def __xor__(self, other):
 */
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__nonlinear_op); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 310; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_k_tuple_22), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 310; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("casuarius.LinearSymbolic.__or__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_self);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_35__xor__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_35__xor__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__xor__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_14LinearSymbolic_34__xor__(((PyObject *)__pyx_v_self), ((PyObject *)__pyx_v_other));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":312
 *         self.nonlinear_op('|')
 * 
 *     def __xor__(self, other):             # <<<<<<<<<<<<<<
 *         if not isinstance(self, LinearSymbolic):
 *             self = other
 */

static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_34__xor__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__xor__", 0);
  __Pyx_INCREF(__pyx_v_self);

  /* "casuarius.pyx":313
 * 
 *     def __xor__(self, other):
 *         if not isinstance(self, LinearSymbolic):             # <<<<<<<<<<<<<<
 *             self = other
 *         self.nonlinear_op('^')
 */
  __pyx_t_1 = ((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearSymbolic));
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_self, __pyx_t_1); 
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (!__pyx_t_2);
  if (__pyx_t_3) {

    /* "casuarius.pyx":314
 *     def __xor__(self, other):
 *         if not isinstance(self, LinearSymbolic):
 *             self = other             # <<<<<<<<<<<<<<
 *         self.nonlinear_op('^')
 * 
 */
    __Pyx_INCREF(__pyx_v_other);
    __Pyx_DECREF(__pyx_v_self);
    __pyx_v_self = __pyx_v_other;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "casuarius.pyx":315
 *         if not isinstance(self, LinearSymbolic):
 *             self = other
 *         self.nonlinear_op('^')             # <<<<<<<<<<<<<<
 * 
 *     def __richcmp__(self, other, int op):
 */
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__nonlinear_op); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 315; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_k_tuple_24), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 315; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("casuarius.LinearSymbolic.__xor__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_self);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_37__richcmp__(PyObject *__pyx_v_self, PyObject *__pyx_v_other, int __pyx_v_op); /*proto*/
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_37__richcmp__(PyObject *__pyx_v_self, PyObject *__pyx_v_other, int __pyx_v_op) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__richcmp__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_14LinearSymbolic_36__richcmp__(((PyObject *)__pyx_v_self), ((PyObject *)__pyx_v_other), ((int)__pyx_v_op));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":317
 *         self.nonlinear_op('^')
 * 
 *     def __richcmp__(self, other, int op):             # <<<<<<<<<<<<<<
 *         if op == 0 or op == 4 or op == 3:
 *             raise ValueError('Invalid constraint operation.')
 */

static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_36__richcmp__(PyObject *__pyx_v_self, PyObject *__pyx_v_other, int __pyx_v_op) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__richcmp__", 0);

  /* "casuarius.pyx":324
 *         elif op == 1:
 *             return self._richcmp_le(other)
 *         elif op == 5:             # <<<<<<<<<<<<<<
 *             return self._richcmp_ge(other)
 * 
 */
  switch (__pyx_v_op) {

    /* "casuarius.pyx":318
 * 
 *     def __richcmp__(self, other, int op):
 *         if op == 0 or op == 4 or op == 3:             # <<<<<<<<<<<<<<
 *             raise ValueError('Invalid constraint operation.')
 *         elif op == 2:
 */
    case 0:
    case 4:
    case 3:

    /* "casuarius.pyx":319
 *     def __richcmp__(self, other, int op):
 *         if op == 0 or op == 4 or op == 3:
 *             raise ValueError('Invalid constraint operation.')             # <<<<<<<<<<<<<<
 *         elif op == 2:
 *             return self._richcmp_eq(other)
 */
    __pyx_t_1 = PyObject_Call(__pyx_builtin_ValueError, ((PyObject *)__pyx_k_tuple_26), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    break;

    /* "casuarius.pyx":320
 *         if op == 0 or op == 4 or op == 3:
 *             raise ValueError('Invalid constraint operation.')
 *         elif op == 2:             # <<<<<<<<<<<<<<
 *             return self._richcmp_eq(other)
 *         elif op == 1:
 */
    case 2:

    /* "casuarius.pyx":321
 *             raise ValueError('Invalid constraint operation.')
 *         elif op == 2:
 *             return self._richcmp_eq(other)             # <<<<<<<<<<<<<<
 *         elif op == 1:
 *             return self._richcmp_le(other)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s___richcmp_eq); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 321; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 321; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_v_other);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_other);
    __Pyx_GIVEREF(__pyx_v_other);
    __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 321; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
    break;

    /* "casuarius.pyx":322
 *         elif op == 2:
 *             return self._richcmp_eq(other)
 *         elif op == 1:             # <<<<<<<<<<<<<<
 *             return self._richcmp_le(other)
 *         elif op == 5:
 */
    case 1:

    /* "casuarius.pyx":323
 *             return self._richcmp_eq(other)
 *         elif op == 1:
 *             return self._richcmp_le(other)             # <<<<<<<<<<<<<<
 *         elif op == 5:
 *             return self._richcmp_ge(other)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s___richcmp_le); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_v_other);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_other);
    __Pyx_GIVEREF(__pyx_v_other);
    __pyx_t_1 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;
    break;

    /* "casuarius.pyx":324
 *         elif op == 1:
 *             return self._richcmp_le(other)
 *         elif op == 5:             # <<<<<<<<<<<<<<
 *             return self._richcmp_ge(other)
 * 
 */
    case 5:

    /* "casuarius.pyx":325
 *             return self._richcmp_le(other)
 *         elif op == 5:
 *             return self._richcmp_ge(other)             # <<<<<<<<<<<<<<
 * 
 *     cpdef LinearConstraint _richcmp_le(self, other):
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s___richcmp_ge); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_v_other);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_other);
    __Pyx_GIVEREF(__pyx_v_other);
    __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
    break;
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("casuarius.LinearSymbolic.__richcmp__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":327
 *             return self._richcmp_ge(other)
 * 
 *     cpdef LinearConstraint _richcmp_le(self, other):             # <<<<<<<<<<<<<<
 *         if isinstance(other, (float, int, long)):
 *             rhs = LinearExpression([], float(other))
 */

static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_39_richcmp_le(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static struct __pyx_obj_9casuarius_LinearConstraint *__pyx_f_9casuarius_14LinearSymbolic__richcmp_le(struct __pyx_obj_9casuarius_LinearSymbolic *__pyx_v_self, PyObject *__pyx_v_other, int __pyx_skip_dispatch) {
  PyObject *__pyx_v_rhs = NULL;
  PyObject *__pyx_v_msg = NULL;
  struct __pyx_obj_9casuarius_LinearConstraint *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  double __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_richcmp_le", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overriden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s___richcmp_le); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_9casuarius_14LinearSymbolic_39_richcmp_le)) {
      __Pyx_XDECREF(((PyObject *)__pyx_r));
      __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_INCREF(__pyx_v_other);
      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_other);
      __Pyx_GIVEREF(__pyx_v_other);
      __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
      if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_9casuarius_LinearConstraint))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_r = ((struct __pyx_obj_9casuarius_LinearConstraint *)__pyx_t_3);
      __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "casuarius.pyx":328
 * 
 *     cpdef LinearConstraint _richcmp_le(self, other):
 *         if isinstance(other, (float, int, long)):             # <<<<<<<<<<<<<<
 *             rhs = LinearExpression([], float(other))
 *         elif isinstance(other, LinearSymbolic):
 */
  __Pyx_INCREF(__pyx_v_other);
  __pyx_t_1 = __pyx_v_other;
  __pyx_t_4 = PyFloat_Check(__pyx_t_1); 
  if (!__pyx_t_4) {
    __pyx_t_5 = PyInt_Check(__pyx_t_1); 
    __pyx_t_6 = __pyx_t_5;
  } else {
    __pyx_t_6 = __pyx_t_4;
  }
  if (!__pyx_t_6) {
    __pyx_t_4 = PyLong_Check(__pyx_t_1); 
    __pyx_t_5 = __pyx_t_4;
  } else {
    __pyx_t_5 = __pyx_t_6;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_5) {

    /* "casuarius.pyx":329
 *     cpdef LinearConstraint _richcmp_le(self, other):
 *         if isinstance(other, (float, int, long)):
 *             rhs = LinearExpression([], float(other))             # <<<<<<<<<<<<<<
 *         elif isinstance(other, LinearSymbolic):
 *             rhs = other
 */
    __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = __Pyx_PyObject_AsDouble(__pyx_v_other); if (unlikely(__pyx_t_7 == ((double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_3 = PyFloat_FromDouble(__pyx_t_7); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_t_1));
    __Pyx_GIVEREF(((PyObject *)__pyx_t_1));
    PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    __pyx_t_1 = 0;
    __pyx_t_3 = 0;
    __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearExpression)), ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
    __pyx_v_rhs = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L3;
  }

  /* "casuarius.pyx":330
 *         if isinstance(other, (float, int, long)):
 *             rhs = LinearExpression([], float(other))
 *         elif isinstance(other, LinearSymbolic):             # <<<<<<<<<<<<<<
 *             rhs = other
 *         else:
 */
  __pyx_t_3 = ((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearSymbolic));
  __Pyx_INCREF(__pyx_t_3);
  __pyx_t_5 = __Pyx_TypeCheck(__pyx_v_other, __pyx_t_3); 
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_5) {

    /* "casuarius.pyx":331
 *             rhs = LinearExpression([], float(other))
 *         elif isinstance(other, LinearSymbolic):
 *             rhs = other             # <<<<<<<<<<<<<<
 *         else:
 *             msg = 'Invalid type for constraint operation %s' % type(other)
 */
    __Pyx_INCREF(__pyx_v_other);
    __pyx_v_rhs = __pyx_v_other;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "casuarius.pyx":333
 *             rhs = other
 *         else:
 *             msg = 'Invalid type for constraint operation %s' % type(other)             # <<<<<<<<<<<<<<
 *             raise TypeError(msg)
 *         return LEConstraint(self, rhs)
 */
    __pyx_t_3 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_27), ((PyObject *)Py_TYPE(__pyx_v_other))); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 333; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_3));
    __pyx_v_msg = ((PyObject *)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "casuarius.pyx":334
 *         else:
 *             msg = 'Invalid type for constraint operation %s' % type(other)
 *             raise TypeError(msg)             # <<<<<<<<<<<<<<
 *         return LEConstraint(self, rhs)
 * 
 */
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 334; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_v_msg);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_msg);
    __Pyx_GIVEREF(__pyx_v_msg);
    __pyx_t_2 = PyObject_Call(__pyx_builtin_TypeError, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 334; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 334; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_L3:;

  /* "casuarius.pyx":335
 *             msg = 'Invalid type for constraint operation %s' % type(other)
 *             raise TypeError(msg)
 *         return LEConstraint(self, rhs)             # <<<<<<<<<<<<<<
 * 
 *     cpdef LinearConstraint _richcmp_ge(self, other):
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 335; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  __Pyx_INCREF(__pyx_v_rhs);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_rhs);
  __Pyx_GIVEREF(__pyx_v_rhs);
  __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LEConstraint)), ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 335; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_r = ((struct __pyx_obj_9casuarius_LinearConstraint *)__pyx_t_3);
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = ((struct __pyx_obj_9casuarius_LinearConstraint *)Py_None); __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("casuarius.LinearSymbolic._richcmp_le", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_rhs);
  __Pyx_XDECREF(__pyx_v_msg);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_39_richcmp_le(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_39_richcmp_le(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_richcmp_le (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_14LinearSymbolic_38_richcmp_le(((struct __pyx_obj_9casuarius_LinearSymbolic *)__pyx_v_self), ((PyObject *)__pyx_v_other));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":327
 *             return self._richcmp_ge(other)
 * 
 *     cpdef LinearConstraint _richcmp_le(self, other):             # <<<<<<<<<<<<<<
 *         if isinstance(other, (float, int, long)):
 *             rhs = LinearExpression([], float(other))
 */

static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_38_richcmp_le(struct __pyx_obj_9casuarius_LinearSymbolic *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_richcmp_le", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)((struct __pyx_vtabstruct_9casuarius_LinearSymbolic *)__pyx_v_self->__pyx_vtab)->_richcmp_le(__pyx_v_self, __pyx_v_other, 1)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("casuarius.LinearSymbolic._richcmp_le", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":337
 *         return LEConstraint(self, rhs)
 * 
 *     cpdef LinearConstraint _richcmp_ge(self, other):             # <<<<<<<<<<<<<<
 *         if isinstance(other, (float, int, long)):
 *             rhs = LinearExpression([], float(other))
 */

static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_41_richcmp_ge(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static struct __pyx_obj_9casuarius_LinearConstraint *__pyx_f_9casuarius_14LinearSymbolic__richcmp_ge(struct __pyx_obj_9casuarius_LinearSymbolic *__pyx_v_self, PyObject *__pyx_v_other, int __pyx_skip_dispatch) {
  PyObject *__pyx_v_rhs = NULL;
  PyObject *__pyx_v_msg = NULL;
  struct __pyx_obj_9casuarius_LinearConstraint *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  double __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_richcmp_ge", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overriden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s___richcmp_ge); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 337; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_9casuarius_14LinearSymbolic_41_richcmp_ge)) {
      __Pyx_XDECREF(((PyObject *)__pyx_r));
      __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 337; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_INCREF(__pyx_v_other);
      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_other);
      __Pyx_GIVEREF(__pyx_v_other);
      __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 337; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
      if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_9casuarius_LinearConstraint))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 337; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_r = ((struct __pyx_obj_9casuarius_LinearConstraint *)__pyx_t_3);
      __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "casuarius.pyx":338
 * 
 *     cpdef LinearConstraint _richcmp_ge(self, other):
 *         if isinstance(other, (float, int, long)):             # <<<<<<<<<<<<<<
 *             rhs = LinearExpression([], float(other))
 *         elif isinstance(other, LinearSymbolic):
 */
  __Pyx_INCREF(__pyx_v_other);
  __pyx_t_1 = __pyx_v_other;
  __pyx_t_4 = PyFloat_Check(__pyx_t_1); 
  if (!__pyx_t_4) {
    __pyx_t_5 = PyInt_Check(__pyx_t_1); 
    __pyx_t_6 = __pyx_t_5;
  } else {
    __pyx_t_6 = __pyx_t_4;
  }
  if (!__pyx_t_6) {
    __pyx_t_4 = PyLong_Check(__pyx_t_1); 
    __pyx_t_5 = __pyx_t_4;
  } else {
    __pyx_t_5 = __pyx_t_6;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_5) {

    /* "casuarius.pyx":339
 *     cpdef LinearConstraint _richcmp_ge(self, other):
 *         if isinstance(other, (float, int, long)):
 *             rhs = LinearExpression([], float(other))             # <<<<<<<<<<<<<<
 *         elif isinstance(other, LinearSymbolic):
 *             rhs = other
 */
    __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 339; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = __Pyx_PyObject_AsDouble(__pyx_v_other); if (unlikely(__pyx_t_7 == ((double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 339; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_3 = PyFloat_FromDouble(__pyx_t_7); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 339; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 339; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_t_1));
    __Pyx_GIVEREF(((PyObject *)__pyx_t_1));
    PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    __pyx_t_1 = 0;
    __pyx_t_3 = 0;
    __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearExpression)), ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 339; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
    __pyx_v_rhs = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L3;
  }

  /* "casuarius.pyx":340
 *         if isinstance(other, (float, int, long)):
 *             rhs = LinearExpression([], float(other))
 *         elif isinstance(other, LinearSymbolic):             # <<<<<<<<<<<<<<
 *             rhs = other
 *         else:
 */
  __pyx_t_3 = ((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearSymbolic));
  __Pyx_INCREF(__pyx_t_3);
  __pyx_t_5 = __Pyx_TypeCheck(__pyx_v_other, __pyx_t_3); 
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_5) {

    /* "casuarius.pyx":341
 *             rhs = LinearExpression([], float(other))
 *         elif isinstance(other, LinearSymbolic):
 *             rhs = other             # <<<<<<<<<<<<<<
 *         else:
 *             msg = 'Invalid type for constraint operation %s' % type(other)
 */
    __Pyx_INCREF(__pyx_v_other);
    __pyx_v_rhs = __pyx_v_other;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "casuarius.pyx":343
 *             rhs = other
 *         else:
 *             msg = 'Invalid type for constraint operation %s' % type(other)             # <<<<<<<<<<<<<<
 *             raise TypeError(msg)
 *         return GEConstraint(self, rhs)
 */
    __pyx_t_3 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_27), ((PyObject *)Py_TYPE(__pyx_v_other))); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 343; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_3));
    __pyx_v_msg = ((PyObject *)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "casuarius.pyx":344
 *         else:
 *             msg = 'Invalid type for constraint operation %s' % type(other)
 *             raise TypeError(msg)             # <<<<<<<<<<<<<<
 *         return GEConstraint(self, rhs)
 * 
 */
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 344; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_v_msg);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_msg);
    __Pyx_GIVEREF(__pyx_v_msg);
    __pyx_t_2 = PyObject_Call(__pyx_builtin_TypeError, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 344; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 344; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_L3:;

  /* "casuarius.pyx":345
 *             msg = 'Invalid type for constraint operation %s' % type(other)
 *             raise TypeError(msg)
 *         return GEConstraint(self, rhs)             # <<<<<<<<<<<<<<
 * 
 *     cpdef LinearConstraint _richcmp_eq(self, other):
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 345; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  __Pyx_INCREF(__pyx_v_rhs);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_rhs);
  __Pyx_GIVEREF(__pyx_v_rhs);
  __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_GEConstraint)), ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 345; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_r = ((struct __pyx_obj_9casuarius_LinearConstraint *)__pyx_t_3);
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = ((struct __pyx_obj_9casuarius_LinearConstraint *)Py_None); __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("casuarius.LinearSymbolic._richcmp_ge", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_rhs);
  __Pyx_XDECREF(__pyx_v_msg);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_41_richcmp_ge(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_41_richcmp_ge(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_richcmp_ge (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_14LinearSymbolic_40_richcmp_ge(((struct __pyx_obj_9casuarius_LinearSymbolic *)__pyx_v_self), ((PyObject *)__pyx_v_other));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":337
 *         return LEConstraint(self, rhs)
 * 
 *     cpdef LinearConstraint _richcmp_ge(self, other):             # <<<<<<<<<<<<<<
 *         if isinstance(other, (float, int, long)):
 *             rhs = LinearExpression([], float(other))
 */

static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_40_richcmp_ge(struct __pyx_obj_9casuarius_LinearSymbolic *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_richcmp_ge", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)((struct __pyx_vtabstruct_9casuarius_LinearSymbolic *)__pyx_v_self->__pyx_vtab)->_richcmp_ge(__pyx_v_self, __pyx_v_other, 1)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 337; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("casuarius.LinearSymbolic._richcmp_ge", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":347
 *         return GEConstraint(self, rhs)
 * 
 *     cpdef LinearConstraint _richcmp_eq(self, other):             # <<<<<<<<<<<<<<
 *         if isinstance(other, (float, int, long)):
 *             rhs = LinearExpression([], float(other))
 */

static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_43_richcmp_eq(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static struct __pyx_obj_9casuarius_LinearConstraint *__pyx_f_9casuarius_14LinearSymbolic__richcmp_eq(struct __pyx_obj_9casuarius_LinearSymbolic *__pyx_v_self, PyObject *__pyx_v_other, int __pyx_skip_dispatch) {
  PyObject *__pyx_v_rhs = NULL;
  PyObject *__pyx_v_msg = NULL;
  struct __pyx_obj_9casuarius_LinearConstraint *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  double __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_richcmp_eq", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overriden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s___richcmp_eq); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 347; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_9casuarius_14LinearSymbolic_43_richcmp_eq)) {
      __Pyx_XDECREF(((PyObject *)__pyx_r));
      __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 347; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_INCREF(__pyx_v_other);
      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_other);
      __Pyx_GIVEREF(__pyx_v_other);
      __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 347; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
      if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_9casuarius_LinearConstraint))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 347; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_r = ((struct __pyx_obj_9casuarius_LinearConstraint *)__pyx_t_3);
      __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "casuarius.pyx":348
 * 
 *     cpdef LinearConstraint _richcmp_eq(self, other):
 *         if isinstance(other, (float, int, long)):             # <<<<<<<<<<<<<<
 *             rhs = LinearExpression([], float(other))
 *         elif isinstance(other, LinearSymbolic):
 */
  __Pyx_INCREF(__pyx_v_other);
  __pyx_t_1 = __pyx_v_other;
  __pyx_t_4 = PyFloat_Check(__pyx_t_1); 
  if (!__pyx_t_4) {
    __pyx_t_5 = PyInt_Check(__pyx_t_1); 
    __pyx_t_6 = __pyx_t_5;
  } else {
    __pyx_t_6 = __pyx_t_4;
  }
  if (!__pyx_t_6) {
    __pyx_t_4 = PyLong_Check(__pyx_t_1); 
    __pyx_t_5 = __pyx_t_4;
  } else {
    __pyx_t_5 = __pyx_t_6;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_5) {

    /* "casuarius.pyx":349
 *     cpdef LinearConstraint _richcmp_eq(self, other):
 *         if isinstance(other, (float, int, long)):
 *             rhs = LinearExpression([], float(other))             # <<<<<<<<<<<<<<
 *         elif isinstance(other, LinearSymbolic):
 *             rhs = other
 */
    __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 349; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = __Pyx_PyObject_AsDouble(__pyx_v_other); if (unlikely(__pyx_t_7 == ((double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 349; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_3 = PyFloat_FromDouble(__pyx_t_7); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 349; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 349; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_t_1));
    __Pyx_GIVEREF(((PyObject *)__pyx_t_1));
    PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    __pyx_t_1 = 0;
    __pyx_t_3 = 0;
    __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearExpression)), ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 349; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
    __pyx_v_rhs = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L3;
  }

  /* "casuarius.pyx":350
 *         if isinstance(other, (float, int, long)):
 *             rhs = LinearExpression([], float(other))
 *         elif isinstance(other, LinearSymbolic):             # <<<<<<<<<<<<<<
 *             rhs = other
 *         else:
 */
  __pyx_t_3 = ((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearSymbolic));
  __Pyx_INCREF(__pyx_t_3);
  __pyx_t_5 = __Pyx_TypeCheck(__pyx_v_other, __pyx_t_3); 
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_5) {

    /* "casuarius.pyx":351
 *             rhs = LinearExpression([], float(other))
 *         elif isinstance(other, LinearSymbolic):
 *             rhs = other             # <<<<<<<<<<<<<<
 *         else:
 *             msg = 'Invalid type for constraint operation %s' % type(other)
 */
    __Pyx_INCREF(__pyx_v_other);
    __pyx_v_rhs = __pyx_v_other;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "casuarius.pyx":353
 *             rhs = other
 *         else:
 *             msg = 'Invalid type for constraint operation %s' % type(other)             # <<<<<<<<<<<<<<
 *             raise TypeError(msg)
 *         return EQConstraint(self, rhs)
 */
    __pyx_t_3 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_27), ((PyObject *)Py_TYPE(__pyx_v_other))); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 353; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_3));
    __pyx_v_msg = ((PyObject *)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "casuarius.pyx":354
 *         else:
 *             msg = 'Invalid type for constraint operation %s' % type(other)
 *             raise TypeError(msg)             # <<<<<<<<<<<<<<
 *         return EQConstraint(self, rhs)
 * 
 */
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 354; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_v_msg);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_msg);
    __Pyx_GIVEREF(__pyx_v_msg);
    __pyx_t_2 = PyObject_Call(__pyx_builtin_TypeError, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 354; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 354; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_L3:;

  /* "casuarius.pyx":355
 *             msg = 'Invalid type for constraint operation %s' % type(other)
 *             raise TypeError(msg)
 *         return EQConstraint(self, rhs)             # <<<<<<<<<<<<<<
 * 
 *     def __hash__(self):
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 355; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  __Pyx_INCREF(__pyx_v_rhs);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_rhs);
  __Pyx_GIVEREF(__pyx_v_rhs);
  __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_EQConstraint)), ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 355; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_r = ((struct __pyx_obj_9casuarius_LinearConstraint *)__pyx_t_3);
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = ((struct __pyx_obj_9casuarius_LinearConstraint *)Py_None); __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("casuarius.LinearSymbolic._richcmp_eq", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_rhs);
  __Pyx_XDECREF(__pyx_v_msg);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_43_richcmp_eq(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_9casuarius_14LinearSymbolic_43_richcmp_eq(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_richcmp_eq (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_14LinearSymbolic_42_richcmp_eq(((struct __pyx_obj_9casuarius_LinearSymbolic *)__pyx_v_self), ((PyObject *)__pyx_v_other));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":347
 *         return GEConstraint(self, rhs)
 * 
 *     cpdef LinearConstraint _richcmp_eq(self, other):             # <<<<<<<<<<<<<<
 *         if isinstance(other, (float, int, long)):
 *             rhs = LinearExpression([], float(other))
 */

static PyObject *__pyx_pf_9casuarius_14LinearSymbolic_42_richcmp_eq(struct __pyx_obj_9casuarius_LinearSymbolic *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_richcmp_eq", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)((struct __pyx_vtabstruct_9casuarius_LinearSymbolic *)__pyx_v_self->__pyx_vtab)->_richcmp_eq(__pyx_v_self, __pyx_v_other, 1)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 347; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("casuarius.LinearSymbolic._richcmp_eq", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static Py_hash_t __pyx_pw_9casuarius_14LinearSymbolic_45__hash__(PyObject *__pyx_v_self); /*proto*/
static Py_hash_t __pyx_pw_9casuarius_14LinearSymbolic_45__hash__(PyObject *__pyx_v_self) {
  Py_hash_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__hash__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_14LinearSymbolic_44__hash__(((struct __pyx_obj_9casuarius_LinearSymbolic *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":357
 *         return EQConstraint(self, rhs)
 * 
 *     def __hash__(self):             # <<<<<<<<<<<<<<
 *         return object.__hash__(self)
 * 
 */

static Py_hash_t __pyx_pf_9casuarius_14LinearSymbolic_44__hash__(struct __pyx_obj_9casuarius_LinearSymbolic *__pyx_v_self) {
  Py_hash_t __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_hash_t __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__hash__", 0);

  /* "casuarius.pyx":358
 * 
 *     def __hash__(self):
 *         return object.__hash__(self)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = PyObject_GetAttr(__pyx_builtin_object, __pyx_n_s____hash__); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 358; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 358; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 358; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyInt_AsHash_t(__pyx_t_3); if (unlikely((__pyx_t_4 == (Py_hash_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 358; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  goto __pyx_L0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("casuarius.LinearSymbolic.__hash__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  if (unlikely(__pyx_r == -1) && !PyErr_Occurred()) __pyx_r = -2;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9casuarius_18ConstraintVariable_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9casuarius_18ConstraintVariable_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_name = 0;
  double __pyx_v_value;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__name,&__pyx_n_s__value,0};
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__name);
        if (likely(values[0])) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__value);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 365; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      if (values[1]) {
      } else {

        /* "casuarius.pyx":365
 *     cdef readonly bytes name
 * 
 *     def __cinit__(self, bytes name, double value=0.0):             # <<<<<<<<<<<<<<
 *         self.variable = new ClVariable(string(<char*>name), value)
 *         self.name = name
 */
        __pyx_v_value = ((double)0.0);
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_name = ((PyObject*)values[0]);
    if (values[1]) {
      __pyx_v_value = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 365; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_value = ((double)0.0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 365; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("casuarius.ConstraintVariable.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_name), (&PyBytes_Type), 1, "name", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 365; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_9casuarius_18ConstraintVariable___cinit__(((struct __pyx_obj_9casuarius_ConstraintVariable *)__pyx_v_self), __pyx_v_name, __pyx_v_value);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9casuarius_18ConstraintVariable___cinit__(struct __pyx_obj_9casuarius_ConstraintVariable *__pyx_v_self, PyObject *__pyx_v_name, double __pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "casuarius.pyx":366
 * 
 *     def __cinit__(self, bytes name, double value=0.0):
 *         self.variable = new ClVariable(string(<char*>name), value)             # <<<<<<<<<<<<<<
 *         self.name = name
 * 
 */
  __pyx_t_1 = PyBytes_AsString(((PyObject *)__pyx_v_name)); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 366; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->variable = new Variable(std::string(((char *)__pyx_t_1)), __pyx_v_value);

  /* "casuarius.pyx":367
 *     def __cinit__(self, bytes name, double value=0.0):
 *         self.variable = new ClVariable(string(<char*>name), value)
 *         self.name = name             # <<<<<<<<<<<<<<
 * 
 *     property value:
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_name));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_name));
  __Pyx_GOTREF(__pyx_v_self->name);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->name));
  __pyx_v_self->name = __pyx_v_name;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("casuarius.ConstraintVariable.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_18ConstraintVariable_5value_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9casuarius_18ConstraintVariable_5value_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_18ConstraintVariable_5value___get__(((struct __pyx_obj_9casuarius_ConstraintVariable *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":370
 * 
 *     property value:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.variable.Value()
 * 
 */

static PyObject *__pyx_pf_9casuarius_18ConstraintVariable_5value___get__(struct __pyx_obj_9casuarius_ConstraintVariable *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "casuarius.pyx":371
 *     property value:
 *         def __get__(self):
 *             return self.variable.Value()             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->variable->Value()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 371; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("casuarius.ConstraintVariable.value.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_9casuarius_18ConstraintVariable_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_9casuarius_18ConstraintVariable_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_9casuarius_18ConstraintVariable_2__dealloc__(((struct __pyx_obj_9casuarius_ConstraintVariable *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "casuarius.pyx":373
 *             return self.variable.Value()
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.variable
 * 
 */

static void __pyx_pf_9casuarius_18ConstraintVariable_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_9casuarius_ConstraintVariable *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "casuarius.pyx":374
 * 
 *     def __dealloc__(self):
 *         del self.variable             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  delete __pyx_v_self->variable;

  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_18ConstraintVariable_5__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9casuarius_18ConstraintVariable_5__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_18ConstraintVariable_4__repr__(((struct __pyx_obj_9casuarius_ConstraintVariable *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":376
 *         del self.variable
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return 'ConstraintVariable({0!r}, {1!r})'.format(self.name, self.variable.Value())
 * 
 */

static PyObject *__pyx_pf_9casuarius_18ConstraintVariable_4__repr__(struct __pyx_obj_9casuarius_ConstraintVariable *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "casuarius.pyx":377
 * 
 *     def __repr__(self):
 *         return 'ConstraintVariable({0!r}, {1!r})'.format(self.name, self.variable.Value())             # <<<<<<<<<<<<<<
 * 
 *     def __str__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_kp_s_28), __pyx_n_s__format); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 377; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_self->variable->Value()); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 377; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 377; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->name));
  PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_v_self->name));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->name));
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 377; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("casuarius.ConstraintVariable.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_18ConstraintVariable_7__str__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9casuarius_18ConstraintVariable_7__str__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__str__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_18ConstraintVariable_6__str__(((struct __pyx_obj_9casuarius_ConstraintVariable *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":379
 *         return 'ConstraintVariable({0!r}, {1!r})'.format(self.name, self.variable.Value())
 * 
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         return '{0}:{1}'.format(self.name, self.value)
 * 
 */

static PyObject *__pyx_pf_9casuarius_18ConstraintVariable_6__str__(struct __pyx_obj_9casuarius_ConstraintVariable *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__str__", 0);

  /* "casuarius.pyx":380
 * 
 *     def __str__(self):
 *         return '{0}:{1}'.format(self.name, self.value)             # <<<<<<<<<<<<<<
 * 
 *     def __add__(self, other):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_kp_s_29), __pyx_n_s__format); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 380; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s__value); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 380; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 380; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->name));
  PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_v_self->name));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->name));
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 380; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("casuarius.ConstraintVariable.__str__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_18ConstraintVariable_9__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_9casuarius_18ConstraintVariable_9__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__add__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_18ConstraintVariable_8__add__(((PyObject *)__pyx_v_self), ((PyObject *)__pyx_v_other));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":382
 *         return '{0}:{1}'.format(self.name, self.value)
 * 
 *     def __add__(self, other):             # <<<<<<<<<<<<<<
 *         if not isinstance(self, LinearSymbolic):
 *             self, other = other, self
 */

static PyObject *__pyx_pf_9casuarius_18ConstraintVariable_8__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_v_terms = NULL;
  double __pyx_v_const;
  PyObject *__pyx_v_expr = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  double __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__add__", 0);
  __Pyx_INCREF(__pyx_v_self);
  __Pyx_INCREF(__pyx_v_other);

  /* "casuarius.pyx":383
 * 
 *     def __add__(self, other):
 *         if not isinstance(self, LinearSymbolic):             # <<<<<<<<<<<<<<
 *             self, other = other, self
 *         if isinstance(other, (float, int, long)):
 */
  __pyx_t_1 = ((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearSymbolic));
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_self, __pyx_t_1); 
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (!__pyx_t_2);
  if (__pyx_t_3) {

    /* "casuarius.pyx":384
 *     def __add__(self, other):
 *         if not isinstance(self, LinearSymbolic):
 *             self, other = other, self             # <<<<<<<<<<<<<<
 *         if isinstance(other, (float, int, long)):
 *             terms = [Term(self)]
 */
    __pyx_t_4 = __pyx_v_other;
    __pyx_t_5 = __pyx_v_self;
    __pyx_v_self = __pyx_t_4;
    __pyx_t_4 = 0;
    __pyx_v_other = __pyx_t_5;
    __pyx_t_5 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "casuarius.pyx":385
 *         if not isinstance(self, LinearSymbolic):
 *             self, other = other, self
 *         if isinstance(other, (float, int, long)):             # <<<<<<<<<<<<<<
 *             terms = [Term(self)]
 *             const = float(other)
 */
  __Pyx_INCREF(__pyx_v_other);
  __pyx_t_1 = __pyx_v_other;
  __pyx_t_3 = PyFloat_Check(__pyx_t_1); 
  if (!__pyx_t_3) {
    __pyx_t_2 = PyInt_Check(__pyx_t_1); 
    __pyx_t_6 = __pyx_t_2;
  } else {
    __pyx_t_6 = __pyx_t_3;
  }
  if (!__pyx_t_6) {
    __pyx_t_3 = PyLong_Check(__pyx_t_1); 
    __pyx_t_2 = __pyx_t_3;
  } else {
    __pyx_t_2 = __pyx_t_6;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "casuarius.pyx":386
 *             self, other = other, self
 *         if isinstance(other, (float, int, long)):
 *             terms = [Term(self)]             # <<<<<<<<<<<<<<
 *             const = float(other)
 *             expr = LinearExpression(terms, const)
 */
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 386; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v_self);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_self);
    __Pyx_GIVEREF(__pyx_v_self);
    __pyx_t_7 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_Term)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 386; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 386; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_7);
    __pyx_t_7 = 0;
    __pyx_v_terms = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "casuarius.pyx":387
 *         if isinstance(other, (float, int, long)):
 *             terms = [Term(self)]
 *             const = float(other)             # <<<<<<<<<<<<<<
 *             expr = LinearExpression(terms, const)
 *         elif isinstance(other, Term):
 */
    __pyx_t_8 = __Pyx_PyObject_AsDouble(__pyx_v_other); if (unlikely(__pyx_t_8 == ((double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 387; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_const = __pyx_t_8;

    /* "casuarius.pyx":388
 *             terms = [Term(self)]
 *             const = float(other)
 *             expr = LinearExpression(terms, const)             # <<<<<<<<<<<<<<
 *         elif isinstance(other, Term):
 *             terms = [Term(self), other]
 */
    __pyx_t_1 = PyFloat_FromDouble(__pyx_v_const); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 388; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = PyTuple_New(2); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 388; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_INCREF(((PyObject *)__pyx_v_terms));
    PyTuple_SET_ITEM(__pyx_t_7, 0, ((PyObject *)__pyx_v_terms));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_terms));
    PyTuple_SET_ITEM(__pyx_t_7, 1, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearExpression)), ((PyObject *)__pyx_t_7), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 388; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(((PyObject *)__pyx_t_7)); __pyx_t_7 = 0;
    __pyx_v_expr = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L4;
  }

  /* "casuarius.pyx":389
 *             const = float(other)
 *             expr = LinearExpression(terms, const)
 *         elif isinstance(other, Term):             # <<<<<<<<<<<<<<
 *             terms = [Term(self), other]
 *             expr = LinearExpression(terms)
 */
  __pyx_t_1 = ((PyObject *)((PyObject*)__pyx_ptype_9casuarius_Term));
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_other, __pyx_t_1); 
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "casuarius.pyx":390
 *             expr = LinearExpression(terms, const)
 *         elif isinstance(other, Term):
 *             terms = [Term(self), other]             # <<<<<<<<<<<<<<
 *             expr = LinearExpression(terms)
 *         elif isinstance(other, ConstraintVariable):
 */
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 390; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v_self);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_self);
    __Pyx_GIVEREF(__pyx_v_self);
    __pyx_t_7 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_Term)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 390; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
    __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 390; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_7);
    __Pyx_INCREF(__pyx_v_other);
    PyList_SET_ITEM(__pyx_t_1, 1, __pyx_v_other);
    __Pyx_GIVEREF(__pyx_v_other);
    __pyx_t_7 = 0;
    __pyx_v_terms = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "casuarius.pyx":391
 *         elif isinstance(other, Term):
 *             terms = [Term(self), other]
 *             expr = LinearExpression(terms)             # <<<<<<<<<<<<<<
 *         elif isinstance(other, ConstraintVariable):
 *             terms = [Term(self), Term(other)]
 */
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 391; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)__pyx_v_terms));
    PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_terms));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_terms));
    __pyx_t_7 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearExpression)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 391; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
    __pyx_v_expr = __pyx_t_7;
    __pyx_t_7 = 0;
    goto __pyx_L4;
  }

  /* "casuarius.pyx":392
 *             terms = [Term(self), other]
 *             expr = LinearExpression(terms)
 *         elif isinstance(other, ConstraintVariable):             # <<<<<<<<<<<<<<
 *             terms = [Term(self), Term(other)]
 *             expr = LinearExpression(terms)
 */
  __pyx_t_7 = ((PyObject *)((PyObject*)__pyx_ptype_9casuarius_ConstraintVariable));
  __Pyx_INCREF(__pyx_t_7);
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_other, __pyx_t_7); 
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  if (__pyx_t_2) {

    /* "casuarius.pyx":393
 *             expr = LinearExpression(terms)
 *         elif isinstance(other, ConstraintVariable):
 *             terms = [Term(self), Term(other)]             # <<<<<<<<<<<<<<
 *             expr = LinearExpression(terms)
 *         elif isinstance(other, LinearExpression):
 */
    __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 393; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_INCREF(__pyx_v_self);
    PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_v_self);
    __Pyx_GIVEREF(__pyx_v_self);
    __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_Term)), ((PyObject *)__pyx_t_7), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 393; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(((PyObject *)__pyx_t_7)); __pyx_t_7 = 0;
    __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 393; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_INCREF(__pyx_v_other);
    PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_v_other);
    __Pyx_GIVEREF(__pyx_v_other);
    __pyx_t_9 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_Term)), ((PyObject *)__pyx_t_7), NULL); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 393; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(((PyObject *)__pyx_t_7)); __pyx_t_7 = 0;
    __pyx_t_7 = PyList_New(2); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 393; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    PyList_SET_ITEM(__pyx_t_7, 0, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    PyList_SET_ITEM(__pyx_t_7, 1, __pyx_t_9);
    __Pyx_GIVEREF(__pyx_t_9);
    __pyx_t_1 = 0;
    __pyx_t_9 = 0;
    __pyx_v_terms = __pyx_t_7;
    __pyx_t_7 = 0;

    /* "casuarius.pyx":394
 *         elif isinstance(other, ConstraintVariable):
 *             terms = [Term(self), Term(other)]
 *             expr = LinearExpression(terms)             # <<<<<<<<<<<<<<
 *         elif isinstance(other, LinearExpression):
 *             expr = other + self
 */
    __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 394; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_INCREF(((PyObject *)__pyx_v_terms));
    PyTuple_SET_ITEM(__pyx_t_7, 0, ((PyObject *)__pyx_v_terms));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_terms));
    __pyx_t_9 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearExpression)), ((PyObject *)__pyx_t_7), NULL); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 394; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(((PyObject *)__pyx_t_7)); __pyx_t_7 = 0;
    __pyx_v_expr = __pyx_t_9;
    __pyx_t_9 = 0;
    goto __pyx_L4;
  }

  /* "casuarius.pyx":395
 *             terms = [Term(self), Term(other)]
 *             expr = LinearExpression(terms)
 *         elif isinstance(other, LinearExpression):             # <<<<<<<<<<<<<<
 *             expr = other + self
 *         else:
 */
  __pyx_t_9 = ((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearExpression));
  __Pyx_INCREF(__pyx_t_9);
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_other, __pyx_t_9); 
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  if (__pyx_t_2) {

    /* "casuarius.pyx":396
 *             expr = LinearExpression(terms)
 *         elif isinstance(other, LinearExpression):
 *             expr = other + self             # <<<<<<<<<<<<<<
 *         else:
 *             return NotImplemented
 */
    __pyx_t_9 = PyNumber_Add(__pyx_v_other, __pyx_v_self); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 396; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_v_expr = __pyx_t_9;
    __pyx_t_9 = 0;
    goto __pyx_L4;
  }
  /*else*/ {

    /* "casuarius.pyx":398
 *             expr = other + self
 *         else:
 *             return NotImplemented             # <<<<<<<<<<<<<<
 *         return expr
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_builtin_NotImplemented);
    __pyx_r = __pyx_builtin_NotImplemented;
    goto __pyx_L0;
  }
  __pyx_L4:;

  /* "casuarius.pyx":399
 *         else:
 *             return NotImplemented
 *         return expr             # <<<<<<<<<<<<<<
 * 
 *     def __mul__(self, other):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_expr);
  __pyx_r = __pyx_v_expr;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("casuarius.ConstraintVariable.__add__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_terms);
  __Pyx_XDECREF(__pyx_v_expr);
  __Pyx_XDECREF(__pyx_v_self);
  __Pyx_XDECREF(__pyx_v_other);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_18ConstraintVariable_11__mul__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_9casuarius_18ConstraintVariable_11__mul__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__mul__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_18ConstraintVariable_10__mul__(((PyObject *)__pyx_v_self), ((PyObject *)__pyx_v_other));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":401
 *         return expr
 * 
 *     def __mul__(self, other):             # <<<<<<<<<<<<<<
 *         if not isinstance(self, LinearSymbolic):
 *             self, other = other, self
 */

static PyObject *__pyx_pf_9casuarius_18ConstraintVariable_10__mul__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  struct __pyx_obj_9casuarius_Term *__pyx_v_res = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  double __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__mul__", 0);
  __Pyx_INCREF(__pyx_v_self);
  __Pyx_INCREF(__pyx_v_other);

  /* "casuarius.pyx":402
 * 
 *     def __mul__(self, other):
 *         if not isinstance(self, LinearSymbolic):             # <<<<<<<<<<<<<<
 *             self, other = other, self
 *         if isinstance(other, (float, int, long)):
 */
  __pyx_t_1 = ((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearSymbolic));
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_self, __pyx_t_1); 
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (!__pyx_t_2);
  if (__pyx_t_3) {

    /* "casuarius.pyx":403
 *     def __mul__(self, other):
 *         if not isinstance(self, LinearSymbolic):
 *             self, other = other, self             # <<<<<<<<<<<<<<
 *         if isinstance(other, (float, int, long)):
 *             res = Term(self, float(other))
 */
    __pyx_t_4 = __pyx_v_other;
    __pyx_t_5 = __pyx_v_self;
    __pyx_v_self = __pyx_t_4;
    __pyx_t_4 = 0;
    __pyx_v_other = __pyx_t_5;
    __pyx_t_5 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "casuarius.pyx":404
 *         if not isinstance(self, LinearSymbolic):
 *             self, other = other, self
 *         if isinstance(other, (float, int, long)):             # <<<<<<<<<<<<<<
 *             res = Term(self, float(other))
 *         elif isinstance(other, (Term, ConstraintVariable, LinearExpression)):
 */
  __Pyx_INCREF(__pyx_v_other);
  __pyx_t_1 = __pyx_v_other;
  __pyx_t_3 = PyFloat_Check(__pyx_t_1); 
  if (!__pyx_t_3) {
    __pyx_t_2 = PyInt_Check(__pyx_t_1); 
    __pyx_t_6 = __pyx_t_2;
  } else {
    __pyx_t_6 = __pyx_t_3;
  }
  if (!__pyx_t_6) {
    __pyx_t_3 = PyLong_Check(__pyx_t_1); 
    __pyx_t_2 = __pyx_t_3;
  } else {
    __pyx_t_2 = __pyx_t_6;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "casuarius.pyx":405
 *             self, other = other, self
 *         if isinstance(other, (float, int, long)):
 *             res = Term(self, float(other))             # <<<<<<<<<<<<<<
 *         elif isinstance(other, (Term, ConstraintVariable, LinearExpression)):
 *             self.nonlinear('[ %s ] * [ %s ]' % (self, other))
 */
    __pyx_t_7 = __Pyx_PyObject_AsDouble(__pyx_v_other); if (unlikely(__pyx_t_7 == ((double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 405; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_1 = PyFloat_FromDouble(__pyx_t_7); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 405; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_8 = PyTuple_New(2); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 405; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_INCREF(__pyx_v_self);
    PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_v_self);
    __Pyx_GIVEREF(__pyx_v_self);
    PyTuple_SET_ITEM(__pyx_t_8, 1, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_Term)), ((PyObject *)__pyx_t_8), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 405; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(((PyObject *)__pyx_t_8)); __pyx_t_8 = 0;
    __pyx_v_res = ((struct __pyx_obj_9casuarius_Term *)__pyx_t_1);
    __pyx_t_1 = 0;
    goto __pyx_L4;
  }

  /* "casuarius.pyx":406
 *         if isinstance(other, (float, int, long)):
 *             res = Term(self, float(other))
 *         elif isinstance(other, (Term, ConstraintVariable, LinearExpression)):             # <<<<<<<<<<<<<<
 *             self.nonlinear('[ %s ] * [ %s ]' % (self, other))
 *         else:
 */
  __Pyx_INCREF(__pyx_v_other);
  __pyx_t_1 = __pyx_v_other;
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_t_1, ((PyObject*)__pyx_ptype_9casuarius_Term)); 
  if (!__pyx_t_2) {
    __pyx_t_6 = __Pyx_TypeCheck(__pyx_t_1, ((PyObject*)__pyx_ptype_9casuarius_ConstraintVariable)); 
    __pyx_t_3 = __pyx_t_6;
  } else {
    __pyx_t_3 = __pyx_t_2;
  }
  if (!__pyx_t_3) {
    __pyx_t_2 = __Pyx_TypeCheck(__pyx_t_1, ((PyObject*)__pyx_ptype_9casuarius_LinearExpression)); 
    __pyx_t_6 = __pyx_t_2;
  } else {
    __pyx_t_6 = __pyx_t_3;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_6) {

    /* "casuarius.pyx":407
 *             res = Term(self, float(other))
 *         elif isinstance(other, (Term, ConstraintVariable, LinearExpression)):
 *             self.nonlinear('[ %s ] * [ %s ]' % (self, other))             # <<<<<<<<<<<<<<
 *         else:
 *             return NotImplemented
 */
    __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__nonlinear); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_8 = PyTuple_New(2); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_INCREF(__pyx_v_self);
    PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_v_self);
    __Pyx_GIVEREF(__pyx_v_self);
    __Pyx_INCREF(__pyx_v_other);
    PyTuple_SET_ITEM(__pyx_t_8, 1, __pyx_v_other);
    __Pyx_GIVEREF(__pyx_v_other);
    __pyx_t_9 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_30), ((PyObject *)__pyx_t_8)); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_9));
    __Pyx_DECREF(((PyObject *)__pyx_t_8)); __pyx_t_8 = 0;
    __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    PyTuple_SET_ITEM(__pyx_t_8, 0, ((PyObject *)__pyx_t_9));
    __Pyx_GIVEREF(((PyObject *)__pyx_t_9));
    __pyx_t_9 = 0;
    __pyx_t_9 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_8), NULL); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_8)); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    goto __pyx_L4;
  }
  /*else*/ {

    /* "casuarius.pyx":409
 *             self.nonlinear('[ %s ] * [ %s ]' % (self, other))
 *         else:
 *             return NotImplemented             # <<<<<<<<<<<<<<
 *         return res
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_builtin_NotImplemented);
    __pyx_r = __pyx_builtin_NotImplemented;
    goto __pyx_L0;
  }
  __pyx_L4:;

  /* "casuarius.pyx":410
 *         else:
 *             return NotImplemented
 *         return res             # <<<<<<<<<<<<<<
 * 
 *     def __div__(self, other):
 */
  __Pyx_XDECREF(__pyx_r);
  if (unlikely(!__pyx_v_res)) { __Pyx_RaiseUnboundLocalError("res"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 410; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
  __Pyx_INCREF(((PyObject *)__pyx_v_res));
  __pyx_r = ((PyObject *)__pyx_v_res);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("casuarius.ConstraintVariable.__mul__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_res);
  __Pyx_XDECREF(__pyx_v_self);
  __Pyx_XDECREF(__pyx_v_other);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
#if PY_MAJOR_VERSION < 3
static PyObject *__pyx_pw_9casuarius_18ConstraintVariable_13__div__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_9casuarius_18ConstraintVariable_13__div__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__div__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_18ConstraintVariable_12__div__(((PyObject *)__pyx_v_self), ((PyObject *)__pyx_v_other));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
#endif /*!(#if PY_MAJOR_VERSION < 3)*/

/* "casuarius.pyx":412
 *         return res
 * 
 *     def __div__(self, other):             # <<<<<<<<<<<<<<
 *         if not isinstance(self, LinearSymbolic):
 *             other.nonlinear('[ %s ] / [ %s ]' % (self, other))
 */

#if PY_MAJOR_VERSION < 3
static PyObject *__pyx_pf_9casuarius_18ConstraintVariable_12__div__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_v_res = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  double __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__div__", 0);

  /* "casuarius.pyx":413
 * 
 *     def __div__(self, other):
 *         if not isinstance(self, LinearSymbolic):             # <<<<<<<<<<<<<<
 *             other.nonlinear('[ %s ] / [ %s ]' % (self, other))
 *         if isinstance(other, (float, int)):
 */
  __pyx_t_1 = ((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearSymbolic));
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_self, __pyx_t_1); 
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (!__pyx_t_2);
  if (__pyx_t_3) {

    /* "casuarius.pyx":414
 *     def __div__(self, other):
 *         if not isinstance(self, LinearSymbolic):
 *             other.nonlinear('[ %s ] / [ %s ]' % (self, other))             # <<<<<<<<<<<<<<
 *         if isinstance(other, (float, int)):
 *             res = (1.0 / float(other)) * self
 */
    __pyx_t_1 = PyObject_GetAttr(__pyx_v_other, __pyx_n_s__nonlinear); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 414; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 414; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_v_self);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_self);
    __Pyx_GIVEREF(__pyx_v_self);
    __Pyx_INCREF(__pyx_v_other);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_v_other);
    __Pyx_GIVEREF(__pyx_v_other);
    __pyx_t_5 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_31), ((PyObject *)__pyx_t_4)); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 414; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_5));
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 414; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_t_5));
    __Pyx_GIVEREF(((PyObject *)__pyx_t_5));
    __pyx_t_5 = 0;
    __pyx_t_5 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 414; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "casuarius.pyx":415
 *         if not isinstance(self, LinearSymbolic):
 *             other.nonlinear('[ %s ] / [ %s ]' % (self, other))
 *         if isinstance(other, (float, int)):             # <<<<<<<<<<<<<<
 *             res = (1.0 / float(other)) * self
 *         elif isinstance(other, (Term, ConstraintVariable, LinearExpression)):
 */
  __Pyx_INCREF(__pyx_v_other);
  __pyx_t_5 = __pyx_v_other;
  __pyx_t_3 = PyFloat_Check(__pyx_t_5); 
  if (!__pyx_t_3) {
    __pyx_t_2 = PyInt_Check(__pyx_t_5); 
    __pyx_t_6 = __pyx_t_2;
  } else {
    __pyx_t_6 = __pyx_t_3;
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__pyx_t_6) {

    /* "casuarius.pyx":416
 *             other.nonlinear('[ %s ] / [ %s ]' % (self, other))
 *         if isinstance(other, (float, int)):
 *             res = (1.0 / float(other)) * self             # <<<<<<<<<<<<<<
 *         elif isinstance(other, (Term, ConstraintVariable, LinearExpression)):
 *             self.nonlinear('[ %s ] / [ %s ]' % (self, other))
 */
    __pyx_t_7 = __Pyx_PyObject_AsDouble(__pyx_v_other); if (unlikely(__pyx_t_7 == ((double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 416; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (unlikely(__pyx_t_7 == 0)) {
      PyErr_Format(PyExc_ZeroDivisionError, "float division");
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 416; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_5 = PyFloat_FromDouble((1.0 / __pyx_t_7)); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 416; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_4 = PyNumber_Multiply(__pyx_t_5, __pyx_v_self); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 416; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_v_res = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L4;
  }

  /* "casuarius.pyx":417
 *         if isinstance(other, (float, int)):
 *             res = (1.0 / float(other)) * self
 *         elif isinstance(other, (Term, ConstraintVariable, LinearExpression)):             # <<<<<<<<<<<<<<
 *             self.nonlinear('[ %s ] / [ %s ]' % (self, other))
 *         else:
 */
  __Pyx_INCREF(__pyx_v_other);
  __pyx_t_4 = __pyx_v_other;
  __pyx_t_6 = __Pyx_TypeCheck(__pyx_t_4, ((PyObject*)__pyx_ptype_9casuarius_Term)); 
  if (!__pyx_t_6) {
    __pyx_t_3 = __Pyx_TypeCheck(__pyx_t_4, ((PyObject*)__pyx_ptype_9casuarius_ConstraintVariable)); 
    __pyx_t_2 = __pyx_t_3;
  } else {
    __pyx_t_2 = __pyx_t_6;
  }
  if (!__pyx_t_2) {
    __pyx_t_6 = __Pyx_TypeCheck(__pyx_t_4, ((PyObject*)__pyx_ptype_9casuarius_LinearExpression)); 
    __pyx_t_3 = __pyx_t_6;
  } else {
    __pyx_t_3 = __pyx_t_2;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__pyx_t_3) {

    /* "casuarius.pyx":418
 *             res = (1.0 / float(other)) * self
 *         elif isinstance(other, (Term, ConstraintVariable, LinearExpression)):
 *             self.nonlinear('[ %s ] / [ %s ]' % (self, other))             # <<<<<<<<<<<<<<
 *         else:
 *             return NotImplemented
 */
    __pyx_t_4 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__nonlinear); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 418; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 418; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(__pyx_v_self);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_self);
    __Pyx_GIVEREF(__pyx_v_self);
    __Pyx_INCREF(__pyx_v_other);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_v_other);
    __Pyx_GIVEREF(__pyx_v_other);
    __pyx_t_1 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_31), ((PyObject *)__pyx_t_5)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 418; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_1));
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 418; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_t_1));
    __Pyx_GIVEREF(((PyObject *)__pyx_t_1));
    __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 418; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L4;
  }
  /*else*/ {

    /* "casuarius.pyx":420
 *             self.nonlinear('[ %s ] / [ %s ]' % (self, other))
 *         else:
 *             return NotImplemented             # <<<<<<<<<<<<<<
 *         return res
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_builtin_NotImplemented);
    __pyx_r = __pyx_builtin_NotImplemented;
    goto __pyx_L0;
  }
  __pyx_L4:;

  /* "casuarius.pyx":421
 *         else:
 *             return NotImplemented
 *         return res             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  if (unlikely(!__pyx_v_res)) { __Pyx_RaiseUnboundLocalError("res"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 421; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
  __Pyx_INCREF(__pyx_v_res);
  __pyx_r = __pyx_v_res;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("casuarius.ConstraintVariable.__div__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_res);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
#endif /*!(#if PY_MAJOR_VERSION < 3)*/

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_18ConstraintVariable_4name_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9casuarius_18ConstraintVariable_4name_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_18ConstraintVariable_4name___get__(((struct __pyx_obj_9casuarius_ConstraintVariable *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":363
 * cdef class ConstraintVariable(LinearSymbolic):
 *     cdef ClVariable *variable
 *     cdef readonly bytes name             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, bytes name, double value=0.0):
 */

static PyObject *__pyx_pf_9casuarius_18ConstraintVariable_4name___get__(struct __pyx_obj_9casuarius_ConstraintVariable *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->name));
  __pyx_r = ((PyObject *)__pyx_v_self->name);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9casuarius_4Term_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9casuarius_4Term_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_9casuarius_ConstraintVariable *__pyx_v_var = 0;
  double __pyx_v_coeff;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__var,&__pyx_n_s__coeff,0};
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__var);
        if (likely(values[0])) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__coeff);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 428; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      if (values[1]) {
      } else {

        /* "casuarius.pyx":428
 *     cdef public double coeff
 * 
 *     def __cinit__(self, ConstraintVariable var, double coeff=1.0):             # <<<<<<<<<<<<<<
 *         self.var = var
 *         self.coeff = coeff
 */
        __pyx_v_coeff = ((double)1.0);
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_var = ((struct __pyx_obj_9casuarius_ConstraintVariable *)values[0]);
    if (values[1]) {
      __pyx_v_coeff = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_coeff == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 428; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_coeff = ((double)1.0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 428; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("casuarius.Term.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_var), __pyx_ptype_9casuarius_ConstraintVariable, 1, "var", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 428; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_9casuarius_4Term___cinit__(((struct __pyx_obj_9casuarius_Term *)__pyx_v_self), __pyx_v_var, __pyx_v_coeff);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9casuarius_4Term___cinit__(struct __pyx_obj_9casuarius_Term *__pyx_v_self, struct __pyx_obj_9casuarius_ConstraintVariable *__pyx_v_var, double __pyx_v_coeff) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "casuarius.pyx":429
 * 
 *     def __cinit__(self, ConstraintVariable var, double coeff=1.0):
 *         self.var = var             # <<<<<<<<<<<<<<
 *         self.coeff = coeff
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_var));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_var));
  __Pyx_GOTREF(__pyx_v_self->var);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->var));
  __pyx_v_self->var = __pyx_v_var;

  /* "casuarius.pyx":430
 *     def __cinit__(self, ConstraintVariable var, double coeff=1.0):
 *         self.var = var
 *         self.coeff = coeff             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  __pyx_v_self->coeff = __pyx_v_coeff;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_4Term_3__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9casuarius_4Term_3__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_4Term_2__repr__(((struct __pyx_obj_9casuarius_Term *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":432
 *         self.coeff = coeff
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return 'Term({0!r}, {1!r})'.format(self.var, self.coeff)
 * 
 */

static PyObject *__pyx_pf_9casuarius_4Term_2__repr__(struct __pyx_obj_9casuarius_Term *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "casuarius.pyx":433
 * 
 *     def __repr__(self):
 *         return 'Term({0!r}, {1!r})'.format(self.var, self.coeff)             # <<<<<<<<<<<<<<
 * 
 *     def __str__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_kp_s_32), __pyx_n_s__format); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 433; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_self->coeff); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 433; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 433; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->var));
  PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_v_self->var));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->var));
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 433; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("casuarius.Term.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_4Term_5__str__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9casuarius_4Term_5__str__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__str__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_4Term_4__str__(((struct __pyx_obj_9casuarius_Term *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":435
 *         return 'Term({0!r}, {1!r})'.format(self.var, self.coeff)
 * 
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         if self.coeff == 1.0:
 *             template = '{name}:{value}'
 */

static PyObject *__pyx_pf_9casuarius_4Term_4__str__(struct __pyx_obj_9casuarius_Term *__pyx_v_self) {
  PyObject *__pyx_v_template = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__str__", 0);

  /* "casuarius.pyx":436
 * 
 *     def __str__(self):
 *         if self.coeff == 1.0:             # <<<<<<<<<<<<<<
 *             template = '{name}:{value}'
 *         elif self.coeff == -1.0:
 */
  __pyx_t_1 = (__pyx_v_self->coeff == 1.0);
  if (__pyx_t_1) {

    /* "casuarius.pyx":437
 *     def __str__(self):
 *         if self.coeff == 1.0:
 *             template = '{name}:{value}'             # <<<<<<<<<<<<<<
 *         elif self.coeff == -1.0:
 *             template = '-{name}:{value}'
 */
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_33));
    __pyx_v_template = ((PyObject *)__pyx_kp_s_33);
    goto __pyx_L3;
  }

  /* "casuarius.pyx":438
 *         if self.coeff == 1.0:
 *             template = '{name}:{value}'
 *         elif self.coeff == -1.0:             # <<<<<<<<<<<<<<
 *             template = '-{name}:{value}'
 *         else:
 */
  __pyx_t_1 = (__pyx_v_self->coeff == -1.0);
  if (__pyx_t_1) {

    /* "casuarius.pyx":439
 *             template = '{name}:{value}'
 *         elif self.coeff == -1.0:
 *             template = '-{name}:{value}'             # <<<<<<<<<<<<<<
 *         else:
 *             template = '{coeff} * {name}:{value}'
 */
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_34));
    __pyx_v_template = ((PyObject *)__pyx_kp_s_34);
    goto __pyx_L3;
  }
  /*else*/ {

    /* "casuarius.pyx":441
 *             template = '-{name}:{value}'
 *         else:
 *             template = '{coeff} * {name}:{value}'             # <<<<<<<<<<<<<<
 *         return template.format(coeff=self.coeff, name=self.var.name, value=self.var.value)
 * 
 */
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_35));
    __pyx_v_template = ((PyObject *)__pyx_kp_s_35);
  }
  __pyx_L3:;

  /* "casuarius.pyx":442
 *         else:
 *             template = '{coeff} * {name}:{value}'
 *         return template.format(coeff=self.coeff, name=self.var.name, value=self.var.value)             # <<<<<<<<<<<<<<
 * 
 *     def __add__(self, other):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = PyObject_GetAttr(__pyx_v_template, __pyx_n_s__format); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 442; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyDict_New(); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 442; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_3));
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_self->coeff); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 442; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_3, ((PyObject *)__pyx_n_s__coeff), __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 442; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (PyDict_SetItem(__pyx_t_3, ((PyObject *)__pyx_n_s__name), ((PyObject *)__pyx_v_self->var->name)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 442; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_4 = PyObject_GetAttr(((PyObject *)__pyx_v_self->var), __pyx_n_s__value); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 442; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_3, ((PyObject *)__pyx_n_s__value), __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 442; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_empty_tuple), ((PyObject *)__pyx_t_3)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 442; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("casuarius.Term.__str__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_template);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_4Term_7__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_9casuarius_4Term_7__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__add__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_4Term_6__add__(((PyObject *)__pyx_v_self), ((PyObject *)__pyx_v_other));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":444
 *         return template.format(coeff=self.coeff, name=self.var.name, value=self.var.value)
 * 
 *     def __add__(self, other):             # <<<<<<<<<<<<<<
 *         if not isinstance(self, LinearSymbolic):
 *             self, other = other, self
 */

static PyObject *__pyx_pf_9casuarius_4Term_6__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_v_terms = NULL;
  double __pyx_v_const;
  PyObject *__pyx_v_expr = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  double __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__add__", 0);
  __Pyx_INCREF(__pyx_v_self);
  __Pyx_INCREF(__pyx_v_other);

  /* "casuarius.pyx":445
 * 
 *     def __add__(self, other):
 *         if not isinstance(self, LinearSymbolic):             # <<<<<<<<<<<<<<
 *             self, other = other, self
 *         if isinstance(other, (float, int, long)):
 */
  __pyx_t_1 = ((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearSymbolic));
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_self, __pyx_t_1); 
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (!__pyx_t_2);
  if (__pyx_t_3) {

    /* "casuarius.pyx":446
 *     def __add__(self, other):
 *         if not isinstance(self, LinearSymbolic):
 *             self, other = other, self             # <<<<<<<<<<<<<<
 *         if isinstance(other, (float, int, long)):
 *             terms = [self]
 */
    __pyx_t_4 = __pyx_v_other;
    __pyx_t_5 = __pyx_v_self;
    __pyx_v_self = __pyx_t_4;
    __pyx_t_4 = 0;
    __pyx_v_other = __pyx_t_5;
    __pyx_t_5 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "casuarius.pyx":447
 *         if not isinstance(self, LinearSymbolic):
 *             self, other = other, self
 *         if isinstance(other, (float, int, long)):             # <<<<<<<<<<<<<<
 *             terms = [self]
 *             const = float(other)
 */
  __Pyx_INCREF(__pyx_v_other);
  __pyx_t_1 = __pyx_v_other;
  __pyx_t_3 = PyFloat_Check(__pyx_t_1); 
  if (!__pyx_t_3) {
    __pyx_t_2 = PyInt_Check(__pyx_t_1); 
    __pyx_t_6 = __pyx_t_2;
  } else {
    __pyx_t_6 = __pyx_t_3;
  }
  if (!__pyx_t_6) {
    __pyx_t_3 = PyLong_Check(__pyx_t_1); 
    __pyx_t_2 = __pyx_t_3;
  } else {
    __pyx_t_2 = __pyx_t_6;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "casuarius.pyx":448
 *             self, other = other, self
 *         if isinstance(other, (float, int, long)):
 *             terms = [self]             # <<<<<<<<<<<<<<
 *             const = float(other)
 *             expr = LinearExpression(terms, const)
 */
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 448; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v_self);
    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_v_self);
    __Pyx_GIVEREF(__pyx_v_self);
    __pyx_v_terms = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "casuarius.pyx":449
 *         if isinstance(other, (float, int, long)):
 *             terms = [self]
 *             const = float(other)             # <<<<<<<<<<<<<<
 *             expr = LinearExpression(terms, const)
 *         elif isinstance(other, Term):
 */
    __pyx_t_7 = __Pyx_PyObject_AsDouble(__pyx_v_other); if (unlikely(__pyx_t_7 == ((double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 449; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_const = __pyx_t_7;

    /* "casuarius.pyx":450
 *             terms = [self]
 *             const = float(other)
 *             expr = LinearExpression(terms, const)             # <<<<<<<<<<<<<<
 *         elif isinstance(other, Term):
 *             terms = [self, other]
 */
    __pyx_t_1 = PyFloat_FromDouble(__pyx_v_const); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 450; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_8 = PyTuple_New(2); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 450; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_INCREF(((PyObject *)__pyx_v_terms));
    PyTuple_SET_ITEM(__pyx_t_8, 0, ((PyObject *)__pyx_v_terms));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_terms));
    PyTuple_SET_ITEM(__pyx_t_8, 1, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearExpression)), ((PyObject *)__pyx_t_8), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 450; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(((PyObject *)__pyx_t_8)); __pyx_t_8 = 0;
    __pyx_v_expr = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L4;
  }

  /* "casuarius.pyx":451
 *             const = float(other)
 *             expr = LinearExpression(terms, const)
 *         elif isinstance(other, Term):             # <<<<<<<<<<<<<<
 *             terms = [self, other]
 *             expr = LinearExpression(terms)
 */
  __pyx_t_1 = ((PyObject *)((PyObject*)__pyx_ptype_9casuarius_Term));
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_other, __pyx_t_1); 
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "casuarius.pyx":452
 *             expr = LinearExpression(terms, const)
 *         elif isinstance(other, Term):
 *             terms = [self, other]             # <<<<<<<<<<<<<<
 *             expr = LinearExpression(terms)
 *         elif isinstance(other, ConstraintVariable):
 */
    __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 452; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v_self);
    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_v_self);
    __Pyx_GIVEREF(__pyx_v_self);
    __Pyx_INCREF(__pyx_v_other);
    PyList_SET_ITEM(__pyx_t_1, 1, __pyx_v_other);
    __Pyx_GIVEREF(__pyx_v_other);
    __pyx_v_terms = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "casuarius.pyx":453
 *         elif isinstance(other, Term):
 *             terms = [self, other]
 *             expr = LinearExpression(terms)             # <<<<<<<<<<<<<<
 *         elif isinstance(other, ConstraintVariable):
 *             terms = [self, Term(other)]
 */
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 453; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)__pyx_v_terms));
    PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_terms));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_terms));
    __pyx_t_8 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearExpression)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 453; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
    __pyx_v_expr = __pyx_t_8;
    __pyx_t_8 = 0;
    goto __pyx_L4;
  }

  /* "casuarius.pyx":454
 *             terms = [self, other]
 *             expr = LinearExpression(terms)
 *         elif isinstance(other, ConstraintVariable):             # <<<<<<<<<<<<<<
 *             terms = [self, Term(other)]
 *             expr = LinearExpression(terms)
 */
  __pyx_t_8 = ((PyObject *)((PyObject*)__pyx_ptype_9casuarius_ConstraintVariable));
  __Pyx_INCREF(__pyx_t_8);
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_other, __pyx_t_8); 
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  if (__pyx_t_2) {

    /* "casuarius.pyx":455
 *             expr = LinearExpression(terms)
 *         elif isinstance(other, ConstraintVariable):
 *             terms = [self, Term(other)]             # <<<<<<<<<<<<<<
 *             expr = LinearExpression(terms)
 *         elif isinstance(other, LinearExpression):
 */
    __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 455; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_INCREF(__pyx_v_other);
    PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_v_other);
    __Pyx_GIVEREF(__pyx_v_other);
    __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_Term)), ((PyObject *)__pyx_t_8), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 455; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(((PyObject *)__pyx_t_8)); __pyx_t_8 = 0;
    __pyx_t_8 = PyList_New(2); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 455; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_INCREF(__pyx_v_self);
    PyList_SET_ITEM(__pyx_t_8, 0, __pyx_v_self);
    __Pyx_GIVEREF(__pyx_v_self);
    PyList_SET_ITEM(__pyx_t_8, 1, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_v_terms = __pyx_t_8;
    __pyx_t_8 = 0;

    /* "casuarius.pyx":456
 *         elif isinstance(other, ConstraintVariable):
 *             terms = [self, Term(other)]
 *             expr = LinearExpression(terms)             # <<<<<<<<<<<<<<
 *         elif isinstance(other, LinearExpression):
 *             expr = other + self
 */
    __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 456; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_INCREF(((PyObject *)__pyx_v_terms));
    PyTuple_SET_ITEM(__pyx_t_8, 0, ((PyObject *)__pyx_v_terms));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_terms));
    __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearExpression)), ((PyObject *)__pyx_t_8), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 456; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(((PyObject *)__pyx_t_8)); __pyx_t_8 = 0;
    __pyx_v_expr = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L4;
  }

  /* "casuarius.pyx":457
 *             terms = [self, Term(other)]
 *             expr = LinearExpression(terms)
 *         elif isinstance(other, LinearExpression):             # <<<<<<<<<<<<<<
 *             expr = other + self
 *         else:
 */
  __pyx_t_1 = ((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearExpression));
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_other, __pyx_t_1); 
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "casuarius.pyx":458
 *             expr = LinearExpression(terms)
 *         elif isinstance(other, LinearExpression):
 *             expr = other + self             # <<<<<<<<<<<<<<
 *         else:
 *             return NotImplemented
 */
    __pyx_t_1 = PyNumber_Add(__pyx_v_other, __pyx_v_self); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 458; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_v_expr = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L4;
  }
  /*else*/ {

    /* "casuarius.pyx":460
 *             expr = other + self
 *         else:
 *             return NotImplemented             # <<<<<<<<<<<<<<
 *         return expr
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_builtin_NotImplemented);
    __pyx_r = __pyx_builtin_NotImplemented;
    goto __pyx_L0;
  }
  __pyx_L4:;

  /* "casuarius.pyx":461
 *         else:
 *             return NotImplemented
 *         return expr             # <<<<<<<<<<<<<<
 * 
 *     def __mul__(self, other):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_expr);
  __pyx_r = __pyx_v_expr;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("casuarius.Term.__add__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_terms);
  __Pyx_XDECREF(__pyx_v_expr);
  __Pyx_XDECREF(__pyx_v_self);
  __Pyx_XDECREF(__pyx_v_other);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_4Term_9__mul__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_9casuarius_4Term_9__mul__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__mul__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_4Term_8__mul__(((PyObject *)__pyx_v_self), ((PyObject *)__pyx_v_other));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":463
 *         return expr
 * 
 *     def __mul__(self, other):             # <<<<<<<<<<<<<<
 *         if not isinstance(self, LinearSymbolic):
 *             self, other = other, self
 */

static PyObject *__pyx_pf_9casuarius_4Term_8__mul__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  struct __pyx_obj_9casuarius_Term *__pyx_v_res = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  double __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__mul__", 0);
  __Pyx_INCREF(__pyx_v_self);
  __Pyx_INCREF(__pyx_v_other);

  /* "casuarius.pyx":464
 * 
 *     def __mul__(self, other):
 *         if not isinstance(self, LinearSymbolic):             # <<<<<<<<<<<<<<
 *             self, other = other, self
 *         if isinstance(other, (float, int, long)):
 */
  __pyx_t_1 = ((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearSymbolic));
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_self, __pyx_t_1); 
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (!__pyx_t_2);
  if (__pyx_t_3) {

    /* "casuarius.pyx":465
 *     def __mul__(self, other):
 *         if not isinstance(self, LinearSymbolic):
 *             self, other = other, self             # <<<<<<<<<<<<<<
 *         if isinstance(other, (float, int, long)):
 *             res = Term(self.var, float(other) * self.coeff)
 */
    __pyx_t_4 = __pyx_v_other;
    __pyx_t_5 = __pyx_v_self;
    __pyx_v_self = __pyx_t_4;
    __pyx_t_4 = 0;
    __pyx_v_other = __pyx_t_5;
    __pyx_t_5 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "casuarius.pyx":466
 *         if not isinstance(self, LinearSymbolic):
 *             self, other = other, self
 *         if isinstance(other, (float, int, long)):             # <<<<<<<<<<<<<<
 *             res = Term(self.var, float(other) * self.coeff)
 *         elif isinstance(other, (Term, ConstraintVariable, LinearExpression)):
 */
  __Pyx_INCREF(__pyx_v_other);
  __pyx_t_1 = __pyx_v_other;
  __pyx_t_3 = PyFloat_Check(__pyx_t_1); 
  if (!__pyx_t_3) {
    __pyx_t_2 = PyInt_Check(__pyx_t_1); 
    __pyx_t_6 = __pyx_t_2;
  } else {
    __pyx_t_6 = __pyx_t_3;
  }
  if (!__pyx_t_6) {
    __pyx_t_3 = PyLong_Check(__pyx_t_1); 
    __pyx_t_2 = __pyx_t_3;
  } else {
    __pyx_t_2 = __pyx_t_6;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "casuarius.pyx":467
 *             self, other = other, self
 *         if isinstance(other, (float, int, long)):
 *             res = Term(self.var, float(other) * self.coeff)             # <<<<<<<<<<<<<<
 *         elif isinstance(other, (Term, ConstraintVariable, LinearExpression)):
 *             self.nonlinear('[ %s ] * [ %s ]' % (self, other))
 */
    __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__var); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 467; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = __Pyx_PyObject_AsDouble(__pyx_v_other); if (unlikely(__pyx_t_7 == ((double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 467; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_8 = PyFloat_FromDouble(__pyx_t_7); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 467; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_9 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__coeff); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 467; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_10 = PyNumber_Multiply(__pyx_t_8, __pyx_t_9); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 467; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_9 = PyTuple_New(2); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 467; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_9, 1, __pyx_t_10);
    __Pyx_GIVEREF(__pyx_t_10);
    __pyx_t_1 = 0;
    __pyx_t_10 = 0;
    __pyx_t_10 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_Term)), ((PyObject *)__pyx_t_9), NULL); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 467; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(((PyObject *)__pyx_t_9)); __pyx_t_9 = 0;
    __pyx_v_res = ((struct __pyx_obj_9casuarius_Term *)__pyx_t_10);
    __pyx_t_10 = 0;
    goto __pyx_L4;
  }

  /* "casuarius.pyx":468
 *         if isinstance(other, (float, int, long)):
 *             res = Term(self.var, float(other) * self.coeff)
 *         elif isinstance(other, (Term, ConstraintVariable, LinearExpression)):             # <<<<<<<<<<<<<<
 *             self.nonlinear('[ %s ] * [ %s ]' % (self, other))
 *         else:
 */
  __Pyx_INCREF(__pyx_v_other);
  __pyx_t_10 = __pyx_v_other;
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_t_10, ((PyObject*)__pyx_ptype_9casuarius_Term)); 
  if (!__pyx_t_2) {
    __pyx_t_6 = __Pyx_TypeCheck(__pyx_t_10, ((PyObject*)__pyx_ptype_9casuarius_ConstraintVariable)); 
    __pyx_t_3 = __pyx_t_6;
  } else {
    __pyx_t_3 = __pyx_t_2;
  }
  if (!__pyx_t_3) {
    __pyx_t_2 = __Pyx_TypeCheck(__pyx_t_10, ((PyObject*)__pyx_ptype_9casuarius_LinearExpression)); 
    __pyx_t_6 = __pyx_t_2;
  } else {
    __pyx_t_6 = __pyx_t_3;
  }
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  if (__pyx_t_6) {

    /* "casuarius.pyx":469
 *             res = Term(self.var, float(other) * self.coeff)
 *         elif isinstance(other, (Term, ConstraintVariable, LinearExpression)):
 *             self.nonlinear('[ %s ] * [ %s ]' % (self, other))             # <<<<<<<<<<<<<<
 *         else:
 *             return NotImplemented
 */
    __pyx_t_10 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__nonlinear); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 469; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_9 = PyTuple_New(2); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 469; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_INCREF(__pyx_v_self);
    PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_v_self);
    __Pyx_GIVEREF(__pyx_v_self);
    __Pyx_INCREF(__pyx_v_other);
    PyTuple_SET_ITEM(__pyx_t_9, 1, __pyx_v_other);
    __Pyx_GIVEREF(__pyx_v_other);
    __pyx_t_1 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_30), ((PyObject *)__pyx_t_9)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 469; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_1));
    __Pyx_DECREF(((PyObject *)__pyx_t_9)); __pyx_t_9 = 0;
    __pyx_t_9 = PyTuple_New(1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 469; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    PyTuple_SET_ITEM(__pyx_t_9, 0, ((PyObject *)__pyx_t_1));
    __Pyx_GIVEREF(((PyObject *)__pyx_t_1));
    __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(__pyx_t_10, ((PyObject *)__pyx_t_9), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 469; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_9)); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L4;
  }
  /*else*/ {

    /* "casuarius.pyx":471
 *             self.nonlinear('[ %s ] * [ %s ]' % (self, other))
 *         else:
 *             return NotImplemented             # <<<<<<<<<<<<<<
 *         return res
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_builtin_NotImplemented);
    __pyx_r = __pyx_builtin_NotImplemented;
    goto __pyx_L0;
  }
  __pyx_L4:;

  /* "casuarius.pyx":472
 *         else:
 *             return NotImplemented
 *         return res             # <<<<<<<<<<<<<<
 * 
 *     def __div__(self, other):
 */
  __Pyx_XDECREF(__pyx_r);
  if (unlikely(!__pyx_v_res)) { __Pyx_RaiseUnboundLocalError("res"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 472; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
  __Pyx_INCREF(((PyObject *)__pyx_v_res));
  __pyx_r = ((PyObject *)__pyx_v_res);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("casuarius.Term.__mul__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_res);
  __Pyx_XDECREF(__pyx_v_self);
  __Pyx_XDECREF(__pyx_v_other);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
#if PY_MAJOR_VERSION < 3
static PyObject *__pyx_pw_9casuarius_4Term_11__div__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_9casuarius_4Term_11__div__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__div__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_4Term_10__div__(((PyObject *)__pyx_v_self), ((PyObject *)__pyx_v_other));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
#endif /*!(#if PY_MAJOR_VERSION < 3)*/

/* "casuarius.pyx":474
 *         return res
 * 
 *     def __div__(self, other):             # <<<<<<<<<<<<<<
 *         if not isinstance(self, LinearSymbolic):
 *             other.nonlinear('[ %s ] / [ %s ]' % (self, other))
 */

#if PY_MAJOR_VERSION < 3
static PyObject *__pyx_pf_9casuarius_4Term_10__div__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_v_res = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  double __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__div__", 0);

  /* "casuarius.pyx":475
 * 
 *     def __div__(self, other):
 *         if not isinstance(self, LinearSymbolic):             # <<<<<<<<<<<<<<
 *             other.nonlinear('[ %s ] / [ %s ]' % (self, other))
 *         if isinstance(other, (float, int, long)):
 */
  __pyx_t_1 = ((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearSymbolic));
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_self, __pyx_t_1); 
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (!__pyx_t_2);
  if (__pyx_t_3) {

    /* "casuarius.pyx":476
 *     def __div__(self, other):
 *         if not isinstance(self, LinearSymbolic):
 *             other.nonlinear('[ %s ] / [ %s ]' % (self, other))             # <<<<<<<<<<<<<<
 *         if isinstance(other, (float, int, long)):
 *             res = (1.0 / float(other)) * self
 */
    __pyx_t_1 = PyObject_GetAttr(__pyx_v_other, __pyx_n_s__nonlinear); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 476; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 476; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_v_self);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_self);
    __Pyx_GIVEREF(__pyx_v_self);
    __Pyx_INCREF(__pyx_v_other);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_v_other);
    __Pyx_GIVEREF(__pyx_v_other);
    __pyx_t_5 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_31), ((PyObject *)__pyx_t_4)); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 476; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_5));
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 476; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_t_5));
    __Pyx_GIVEREF(((PyObject *)__pyx_t_5));
    __pyx_t_5 = 0;
    __pyx_t_5 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 476; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "casuarius.pyx":477
 *         if not isinstance(self, LinearSymbolic):
 *             other.nonlinear('[ %s ] / [ %s ]' % (self, other))
 *         if isinstance(other, (float, int, long)):             # <<<<<<<<<<<<<<
 *             res = (1.0 / float(other)) * self
 *         elif isinstance(other, (Term, ConstraintVariable, LinearExpression)):
 */
  __Pyx_INCREF(__pyx_v_other);
  __pyx_t_5 = __pyx_v_other;
  __pyx_t_3 = PyFloat_Check(__pyx_t_5); 
  if (!__pyx_t_3) {
    __pyx_t_2 = PyInt_Check(__pyx_t_5); 
    __pyx_t_6 = __pyx_t_2;
  } else {
    __pyx_t_6 = __pyx_t_3;
  }
  if (!__pyx_t_6) {
    __pyx_t_3 = PyLong_Check(__pyx_t_5); 
    __pyx_t_2 = __pyx_t_3;
  } else {
    __pyx_t_2 = __pyx_t_6;
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__pyx_t_2) {

    /* "casuarius.pyx":478
 *             other.nonlinear('[ %s ] / [ %s ]' % (self, other))
 *         if isinstance(other, (float, int, long)):
 *             res = (1.0 / float(other)) * self             # <<<<<<<<<<<<<<
 *         elif isinstance(other, (Term, ConstraintVariable, LinearExpression)):
 *             self.nonlinear('[ %s ] / [ %s ]' % (self, other))
 */
    __pyx_t_7 = __Pyx_PyObject_AsDouble(__pyx_v_other); if (unlikely(__pyx_t_7 == ((double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (unlikely(__pyx_t_7 == 0)) {
      PyErr_Format(PyExc_ZeroDivisionError, "float division");
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_5 = PyFloat_FromDouble((1.0 / __pyx_t_7)); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_4 = PyNumber_Multiply(__pyx_t_5, __pyx_v_self); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_v_res = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L4;
  }

  /* "casuarius.pyx":479
 *         if isinstance(other, (float, int, long)):
 *             res = (1.0 / float(other)) * self
 *         elif isinstance(other, (Term, ConstraintVariable, LinearExpression)):             # <<<<<<<<<<<<<<
 *             self.nonlinear('[ %s ] / [ %s ]' % (self, other))
 *         else:
 */
  __Pyx_INCREF(__pyx_v_other);
  __pyx_t_4 = __pyx_v_other;
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_t_4, ((PyObject*)__pyx_ptype_9casuarius_Term)); 
  if (!__pyx_t_2) {
    __pyx_t_6 = __Pyx_TypeCheck(__pyx_t_4, ((PyObject*)__pyx_ptype_9casuarius_ConstraintVariable)); 
    __pyx_t_3 = __pyx_t_6;
  } else {
    __pyx_t_3 = __pyx_t_2;
  }
  if (!__pyx_t_3) {
    __pyx_t_2 = __Pyx_TypeCheck(__pyx_t_4, ((PyObject*)__pyx_ptype_9casuarius_LinearExpression)); 
    __pyx_t_6 = __pyx_t_2;
  } else {
    __pyx_t_6 = __pyx_t_3;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__pyx_t_6) {

    /* "casuarius.pyx":480
 *             res = (1.0 / float(other)) * self
 *         elif isinstance(other, (Term, ConstraintVariable, LinearExpression)):
 *             self.nonlinear('[ %s ] / [ %s ]' % (self, other))             # <<<<<<<<<<<<<<
 *         else:
 *             return NotImplemented
 */
    __pyx_t_4 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__nonlinear); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 480; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 480; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(__pyx_v_self);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_self);
    __Pyx_GIVEREF(__pyx_v_self);
    __Pyx_INCREF(__pyx_v_other);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_v_other);
    __Pyx_GIVEREF(__pyx_v_other);
    __pyx_t_1 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_31), ((PyObject *)__pyx_t_5)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 480; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_1));
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 480; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_t_1));
    __Pyx_GIVEREF(((PyObject *)__pyx_t_1));
    __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 480; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L4;
  }
  /*else*/ {

    /* "casuarius.pyx":482
 *             self.nonlinear('[ %s ] / [ %s ]' % (self, other))
 *         else:
 *             return NotImplemented             # <<<<<<<<<<<<<<
 *         return res
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_builtin_NotImplemented);
    __pyx_r = __pyx_builtin_NotImplemented;
    goto __pyx_L0;
  }
  __pyx_L4:;

  /* "casuarius.pyx":483
 *         else:
 *             return NotImplemented
 *         return res             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  if (unlikely(!__pyx_v_res)) { __Pyx_RaiseUnboundLocalError("res"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 483; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
  __Pyx_INCREF(__pyx_v_res);
  __pyx_r = __pyx_v_res;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("casuarius.Term.__div__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_res);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
#endif /*!(#if PY_MAJOR_VERSION < 3)*/

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_4Term_3var_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9casuarius_4Term_3var_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_4Term_3var___get__(((struct __pyx_obj_9casuarius_Term *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":425
 * 
 * cdef class Term(LinearSymbolic):
 *     cdef public ConstraintVariable var             # <<<<<<<<<<<<<<
 *     cdef public double coeff
 * 
 */

static PyObject *__pyx_pf_9casuarius_4Term_3var___get__(struct __pyx_obj_9casuarius_Term *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->var));
  __pyx_r = ((PyObject *)__pyx_v_self->var);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9casuarius_4Term_3var_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9casuarius_4Term_3var_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_4Term_3var_2__set__(((struct __pyx_obj_9casuarius_Term *)__pyx_v_self), ((PyObject *)__pyx_v_value));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9casuarius_4Term_3var_2__set__(struct __pyx_obj_9casuarius_Term *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(((__pyx_v_value) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_value, __pyx_ptype_9casuarius_ConstraintVariable))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 425; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->var);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->var));
  __pyx_v_self->var = ((struct __pyx_obj_9casuarius_ConstraintVariable *)__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("casuarius.Term.var.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9casuarius_4Term_3var_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9casuarius_4Term_3var_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_4Term_3var_4__del__(((struct __pyx_obj_9casuarius_Term *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9casuarius_4Term_3var_4__del__(struct __pyx_obj_9casuarius_Term *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->var);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->var));
  __pyx_v_self->var = ((struct __pyx_obj_9casuarius_ConstraintVariable *)Py_None);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_4Term_5coeff_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9casuarius_4Term_5coeff_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_4Term_5coeff___get__(((struct __pyx_obj_9casuarius_Term *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":426
 * cdef class Term(LinearSymbolic):
 *     cdef public ConstraintVariable var
 *     cdef public double coeff             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, ConstraintVariable var, double coeff=1.0):
 */

static PyObject *__pyx_pf_9casuarius_4Term_5coeff___get__(struct __pyx_obj_9casuarius_Term *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->coeff); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 426; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("casuarius.Term.coeff.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9casuarius_4Term_5coeff_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9casuarius_4Term_5coeff_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_4Term_5coeff_2__set__(((struct __pyx_obj_9casuarius_Term *)__pyx_v_self), ((PyObject *)__pyx_v_value));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9casuarius_4Term_5coeff_2__set__(struct __pyx_obj_9casuarius_Term *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 426; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->coeff = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("casuarius.Term.coeff.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_16LinearExpression_1reduce_terms(PyObject *__pyx_v_self, PyObject *__pyx_v_terms); /*proto*/
static PyObject *__pyx_pw_9casuarius_16LinearExpression_1reduce_terms(PyObject *__pyx_v_self, PyObject *__pyx_v_terms) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("reduce_terms (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_16LinearExpression_reduce_terms(((struct __pyx_obj_9casuarius_LinearExpression *)__pyx_v_self), ((PyObject *)__pyx_v_terms));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_9casuarius_16LinearExpression_12reduce_terms_2generator1(__pyx_GeneratorObject *__pyx_generator, PyObject *__pyx_sent_value); /* proto */

/* "casuarius.pyx":494
 *         for term in terms:
 *             mapping[term.var] += term.coeff
 *         terms = tuple(Term(var, coeff) for (var, coeff) in mapping.iteritems()             # <<<<<<<<<<<<<<
 *                       if not almost_equal(coeff, 0.0))
 *         return terms
 */

static PyObject *__pyx_pf_9casuarius_16LinearExpression_12reduce_terms_genexpr(PyObject *__pyx_self) {
  struct __pyx_obj_9casuarius___pyx_scope_struct_3_genexpr *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("genexpr", 0);
  __pyx_cur_scope = (struct __pyx_obj_9casuarius___pyx_scope_struct_3_genexpr *)__pyx_ptype_9casuarius___pyx_scope_struct_3_genexpr->tp_new(__pyx_ptype_9casuarius___pyx_scope_struct_3_genexpr, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_cur_scope);
  __pyx_cur_scope->__pyx_outer_scope = (struct __pyx_obj_9casuarius___pyx_scope_struct_2_reduce_terms *) __pyx_self;
  __Pyx_INCREF(((PyObject *)__pyx_cur_scope->__pyx_outer_scope));
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_outer_scope);
  {
    __pyx_GeneratorObject *gen = __Pyx_Generator_New((__pyx_generator_body_t) __pyx_gb_9casuarius_16LinearExpression_12reduce_terms_2generator1, (PyObject *) __pyx_cur_scope); if (unlikely(!gen)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("casuarius.LinearExpression.reduce_terms.genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_9casuarius_16LinearExpression_12reduce_terms_2generator1(__pyx_GeneratorObject *__pyx_generator, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_9casuarius___pyx_scope_struct_3_genexpr *__pyx_cur_scope = ((struct __pyx_obj_9casuarius___pyx_scope_struct_3_genexpr *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *(*__pyx_t_4)(PyObject *);
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *(*__pyx_t_8)(PyObject *);
  double __pyx_t_9;
  int __pyx_t_10;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("None", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L9_resume_from_yield;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__pyx_cur_scope->__pyx_outer_scope->__pyx_v_mapping)) { __Pyx_RaiseClosureNameError("mapping"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
  __pyx_t_1 = PyObject_GetAttr(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_mapping, __pyx_n_s__iteritems); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyList_CheckExact(__pyx_t_2) || PyTuple_CheckExact(__pyx_t_2)) {
    __pyx_t_1 = __pyx_t_2; __Pyx_INCREF(__pyx_t_1); __pyx_t_3 = 0;
    __pyx_t_4 = NULL;
  } else {
    __pyx_t_3 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = Py_TYPE(__pyx_t_1)->tp_iternext;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  for (;;) {
    if (!__pyx_t_4 && PyList_CheckExact(__pyx_t_1)) {
      if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_1)) break;
      __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_3); __Pyx_INCREF(__pyx_t_2); __pyx_t_3++;
    } else if (!__pyx_t_4 && PyTuple_CheckExact(__pyx_t_1)) {
      if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
      __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_3); __Pyx_INCREF(__pyx_t_2); __pyx_t_3++;
    } else {
      __pyx_t_2 = __pyx_t_4(__pyx_t_1);
      if (unlikely(!__pyx_t_2)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_2);
    }
    if ((likely(PyTuple_CheckExact(__pyx_t_2))) || (PyList_CheckExact(__pyx_t_2))) {
      PyObject* sequence = __pyx_t_2;
      if (likely(PyTuple_CheckExact(sequence))) {
        if (unlikely(PyTuple_GET_SIZE(sequence) != 2)) {
          if (PyTuple_GET_SIZE(sequence) > 2) __Pyx_RaiseTooManyValuesError(2);
          else __Pyx_RaiseNeedMoreValuesError(PyTuple_GET_SIZE(sequence));
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_t_5 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_6 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        if (unlikely(PyList_GET_SIZE(sequence) != 2)) {
          if (PyList_GET_SIZE(sequence) > 2) __Pyx_RaiseTooManyValuesError(2);
          else __Pyx_RaiseNeedMoreValuesError(PyList_GET_SIZE(sequence));
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_t_5 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_6 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_7 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_8 = Py_TYPE(__pyx_t_7)->tp_iternext;
      index = 0; __pyx_t_5 = __pyx_t_8(__pyx_t_7); if (unlikely(!__pyx_t_5)) goto __pyx_L6_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_5);
      index = 1; __pyx_t_6 = __pyx_t_8(__pyx_t_7); if (unlikely(!__pyx_t_6)) goto __pyx_L6_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_6);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_8(__pyx_t_7), 2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      goto __pyx_L7_unpacking_done;
      __pyx_L6_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      if (PyErr_Occurred() && PyErr_ExceptionMatches(PyExc_StopIteration)) PyErr_Clear();
      if (!PyErr_Occurred()) __Pyx_RaiseNeedMoreValuesError(index);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_L7_unpacking_done:;
    }
    __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_var);
    __Pyx_XDECREF(__pyx_cur_scope->__pyx_v_var);
    __Pyx_GIVEREF(__pyx_t_5);
    __pyx_cur_scope->__pyx_v_var = __pyx_t_5;
    __pyx_t_5 = 0;
    __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_coeff);
    __Pyx_XDECREF(__pyx_cur_scope->__pyx_v_coeff);
    __Pyx_GIVEREF(__pyx_t_6);
    __pyx_cur_scope->__pyx_v_coeff = __pyx_t_6;
    __pyx_t_6 = 0;

    /* "casuarius.pyx":495
 *             mapping[term.var] += term.coeff
 *         terms = tuple(Term(var, coeff) for (var, coeff) in mapping.iteritems()
 *                       if not almost_equal(coeff, 0.0))             # <<<<<<<<<<<<<<
 *         return terms
 * 
 */
    __pyx_t_9 = __pyx_PyFloat_AsDouble(__pyx_cur_scope->__pyx_v_coeff); if (unlikely((__pyx_t_9 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 495; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_10 = (!__pyx_f_9casuarius_almost_equal(__pyx_t_9, 0.0, NULL));
    if (__pyx_t_10) {

      /* "casuarius.pyx":494
 *         for term in terms:
 *             mapping[term.var] += term.coeff
 *         terms = tuple(Term(var, coeff) for (var, coeff) in mapping.iteritems()             # <<<<<<<<<<<<<<
 *                       if not almost_equal(coeff, 0.0))
 *         return terms
 */
      __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_INCREF(__pyx_cur_scope->__pyx_v_var);
      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_cur_scope->__pyx_v_var);
      __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_var);
      __Pyx_INCREF(__pyx_cur_scope->__pyx_v_coeff);
      PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_cur_scope->__pyx_v_coeff);
      __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_coeff);
      __pyx_t_6 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_Term)), ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_6;
      __pyx_t_6 = 0;
      __Pyx_XGIVEREF(__pyx_t_1);
      __pyx_cur_scope->__pyx_t_0 = __pyx_t_1;
      __pyx_cur_scope->__pyx_t_1 = __pyx_t_3;
      __pyx_cur_scope->__pyx_t_2 = __pyx_t_4;
      __Pyx_XGIVEREF(__pyx_r);
      __Pyx_RefNannyFinishContext();
      /* return from generator, yielding value */
      __pyx_generator->resume_label = 1;
      return __pyx_r;
      __pyx_L9_resume_from_yield:;
      __pyx_t_1 = __pyx_cur_scope->__pyx_t_0;
      __pyx_cur_scope->__pyx_t_0 = 0;
      __Pyx_XGOTREF(__pyx_t_1);
      __pyx_t_3 = __pyx_cur_scope->__pyx_t_1;
      __pyx_t_4 = __pyx_cur_scope->__pyx_t_2;
      if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L8;
    }
    __pyx_L8:;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r);
  __pyx_generator->resume_label = -1;
  __Pyx_RefNannyFinishContext();
  return NULL;
}

/* "casuarius.pyx":490
 *     cdef public double constant
 * 
 *     def reduce_terms(self, terms):             # <<<<<<<<<<<<<<
 *         mapping = defaultdict(float)
 *         for term in terms:
 */

static PyObject *__pyx_pf_9casuarius_16LinearExpression_reduce_terms(CYTHON_UNUSED struct __pyx_obj_9casuarius_LinearExpression *__pyx_v_self, PyObject *__pyx_v_terms) {
  struct __pyx_obj_9casuarius___pyx_scope_struct_2_reduce_terms *__pyx_cur_scope;
  PyObject *__pyx_v_term = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  PyObject *(*__pyx_t_5)(PyObject *);
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("reduce_terms", 0);
  __pyx_cur_scope = (struct __pyx_obj_9casuarius___pyx_scope_struct_2_reduce_terms *)__pyx_ptype_9casuarius___pyx_scope_struct_2_reduce_terms->tp_new(__pyx_ptype_9casuarius___pyx_scope_struct_2_reduce_terms, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_cur_scope);
  __Pyx_INCREF(__pyx_v_terms);

  /* "casuarius.pyx":491
 * 
 *     def reduce_terms(self, terms):
 *         mapping = defaultdict(float)             # <<<<<<<<<<<<<<
 *         for term in terms:
 *             mapping[term.var] += term.coeff
 */
  __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__defaultdict); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 491; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 491; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)((PyObject*)(&PyFloat_Type))));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)((PyObject*)(&PyFloat_Type))));
  __Pyx_GIVEREF(((PyObject *)((PyObject*)(&PyFloat_Type))));
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 491; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_cur_scope->__pyx_v_mapping = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "casuarius.pyx":492
 *     def reduce_terms(self, terms):
 *         mapping = defaultdict(float)
 *         for term in terms:             # <<<<<<<<<<<<<<
 *             mapping[term.var] += term.coeff
 *         terms = tuple(Term(var, coeff) for (var, coeff) in mapping.iteritems()
 */
  if (PyList_CheckExact(__pyx_v_terms) || PyTuple_CheckExact(__pyx_v_terms)) {
    __pyx_t_3 = __pyx_v_terms; __Pyx_INCREF(__pyx_t_3); __pyx_t_4 = 0;
    __pyx_t_5 = NULL;
  } else {
    __pyx_t_4 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_v_terms); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 492; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = Py_TYPE(__pyx_t_3)->tp_iternext;
  }
  for (;;) {
    if (!__pyx_t_5 && PyList_CheckExact(__pyx_t_3)) {
      if (__pyx_t_4 >= PyList_GET_SIZE(__pyx_t_3)) break;
      __pyx_t_2 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_4); __Pyx_INCREF(__pyx_t_2); __pyx_t_4++;
    } else if (!__pyx_t_5 && PyTuple_CheckExact(__pyx_t_3)) {
      if (__pyx_t_4 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
      __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_4); __Pyx_INCREF(__pyx_t_2); __pyx_t_4++;
    } else {
      __pyx_t_2 = __pyx_t_5(__pyx_t_3);
      if (unlikely(!__pyx_t_2)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 492; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_2);
    }
    __Pyx_XDECREF(__pyx_v_term);
    __pyx_v_term = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "casuarius.pyx":493
 *         mapping = defaultdict(float)
 *         for term in terms:
 *             mapping[term.var] += term.coeff             # <<<<<<<<<<<<<<
 *         terms = tuple(Term(var, coeff) for (var, coeff) in mapping.iteritems()
 *                       if not almost_equal(coeff, 0.0))
 */
    __pyx_t_2 = PyObject_GetAttr(__pyx_v_term, __pyx_n_s__var); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 493; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetItem(__pyx_cur_scope->__pyx_v_mapping, __pyx_t_2); if (!__pyx_t_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 493; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = PyObject_GetAttr(__pyx_v_term, __pyx_n_s__coeff); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 493; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = PyNumber_InPlaceAdd(__pyx_t_1, __pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 493; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (PyObject_SetItem(__pyx_cur_scope->__pyx_v_mapping, __pyx_t_2, __pyx_t_7) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 493; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "casuarius.pyx":494
 *         for term in terms:
 *             mapping[term.var] += term.coeff
 *         terms = tuple(Term(var, coeff) for (var, coeff) in mapping.iteritems()             # <<<<<<<<<<<<<<
 *                       if not almost_equal(coeff, 0.0))
 *         return terms
 */
  __pyx_t_3 = __pyx_pf_9casuarius_16LinearExpression_12reduce_terms_genexpr(((PyObject*)__pyx_cur_scope)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)(&PyTuple_Type))), ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_v_terms);
  __pyx_v_terms = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "casuarius.pyx":496
 *         terms = tuple(Term(var, coeff) for (var, coeff) in mapping.iteritems()
 *                       if not almost_equal(coeff, 0.0))
 *         return terms             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, terms, constant=0.0):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_terms);
  __pyx_r = __pyx_v_terms;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("casuarius.LinearExpression.reduce_terms", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_term);
  __Pyx_XDECREF(__pyx_v_terms);
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9casuarius_16LinearExpression_3__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9casuarius_16LinearExpression_3__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_terms = 0;
  PyObject *__pyx_v_constant = 0;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__terms,&__pyx_n_s__constant,0};
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    PyObject* values[2] = {0,0};
    values[1] = __pyx_k_36;
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__terms);
        if (likely(values[0])) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__constant);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 498; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_terms = values[0];
    __pyx_v_constant = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 498; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("casuarius.LinearExpression.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9casuarius_16LinearExpression_2__cinit__(((struct __pyx_obj_9casuarius_LinearExpression *)__pyx_v_self), __pyx_v_terms, __pyx_v_constant);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":498
 *         return terms
 * 
 *     def __cinit__(self, terms, constant=0.0):             # <<<<<<<<<<<<<<
 *         self.terms = self.reduce_terms(terms)
 *         self.constant = constant
 */

static int __pyx_pf_9casuarius_16LinearExpression_2__cinit__(struct __pyx_obj_9casuarius_LinearExpression *__pyx_v_self, PyObject *__pyx_v_terms, PyObject *__pyx_v_constant) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  double __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "casuarius.pyx":499
 * 
 *     def __cinit__(self, terms, constant=0.0):
 *         self.terms = self.reduce_terms(terms)             # <<<<<<<<<<<<<<
 *         self.constant = constant
 * 
 */
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s__reduce_terms); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 499; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 499; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v_terms);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_terms);
  __Pyx_GIVEREF(__pyx_v_terms);
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 499; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (!(likely(PyTuple_CheckExact(__pyx_t_3))||((__pyx_t_3) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected tuple, got %.200s", Py_TYPE(__pyx_t_3)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 499; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GIVEREF(__pyx_t_3);
  __Pyx_GOTREF(__pyx_v_self->terms);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->terms));
  __pyx_v_self->terms = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "casuarius.pyx":500
 *     def __cinit__(self, terms, constant=0.0):
 *         self.terms = self.reduce_terms(terms)
 *         self.constant = constant             # <<<<<<<<<<<<<<
 * 
 *     property value:
 */
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_v_constant); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 500; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->constant = __pyx_t_4;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("casuarius.LinearExpression.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_16LinearExpression_5value_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9casuarius_16LinearExpression_5value_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_16LinearExpression_5value___get__(((struct __pyx_obj_9casuarius_LinearExpression *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":503
 * 
 *     property value:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef double value=self.constant
 *             for term in self.terms:
 */

static PyObject *__pyx_pf_9casuarius_16LinearExpression_5value___get__(struct __pyx_obj_9casuarius_LinearExpression *__pyx_v_self) {
  double __pyx_v_value;
  PyObject *__pyx_v_term = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  double __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "casuarius.pyx":504
 *     property value:
 *         def __get__(self):
 *             cdef double value=self.constant             # <<<<<<<<<<<<<<
 *             for term in self.terms:
 *                 value += term.coeff * term.var.value
 */
  __pyx_v_value = __pyx_v_self->constant;

  /* "casuarius.pyx":505
 *         def __get__(self):
 *             cdef double value=self.constant
 *             for term in self.terms:             # <<<<<<<<<<<<<<
 *                 value += term.coeff * term.var.value
 *             return value
 */
  if (unlikely(((PyObject *)__pyx_v_self->terms) == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 505; __pyx_clineno = __LINE__; goto __pyx_L1_error;} 
  }
  __pyx_t_1 = ((PyObject *)__pyx_v_self->terms); __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
  for (;;) {
    if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
    __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++;
    __Pyx_XDECREF(__pyx_v_term);
    __pyx_v_term = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "casuarius.pyx":506
 *             cdef double value=self.constant
 *             for term in self.terms:
 *                 value += term.coeff * term.var.value             # <<<<<<<<<<<<<<
 *             return value
 * 
 */
    __pyx_t_3 = PyFloat_FromDouble(__pyx_v_value); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 506; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PyObject_GetAttr(__pyx_v_term, __pyx_n_s__coeff); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 506; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyObject_GetAttr(__pyx_v_term, __pyx_n_s__var); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 506; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyObject_GetAttr(__pyx_t_5, __pyx_n_s__value); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 506; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyNumber_Multiply(__pyx_t_4, __pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 506; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyNumber_InPlaceAdd(__pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 506; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_7 = __pyx_PyFloat_AsDouble(__pyx_t_6); if (unlikely((__pyx_t_7 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 506; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_v_value = __pyx_t_7;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "casuarius.pyx":507
 *             for term in self.terms:
 *                 value += term.coeff * term.var.value
 *             return value             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 507; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("casuarius.LinearExpression.value.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_term);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_16LinearExpression_5__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9casuarius_16LinearExpression_5__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_16LinearExpression_4__repr__(((struct __pyx_obj_9casuarius_LinearExpression *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_9casuarius_16LinearExpression_8__repr___2generator2(__pyx_GeneratorObject *__pyx_generator, PyObject *__pyx_sent_value); /* proto */

/* "casuarius.pyx":512
 *         if len(self.terms) > 0:
 *             s = sorted(self.terms, key=operator.attrgetter('var.name'))
 *             terms = ' + '.join(str(term) for term in s)             # <<<<<<<<<<<<<<
 *             if self.constant > 0.0:
 *                 terms += ' + %s' % self.constant
 */

static PyObject *__pyx_pf_9casuarius_16LinearExpression_8__repr___genexpr(PyObject *__pyx_self) {
  struct __pyx_obj_9casuarius___pyx_scope_struct_5_genexpr *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("genexpr", 0);
  __pyx_cur_scope = (struct __pyx_obj_9casuarius___pyx_scope_struct_5_genexpr *)__pyx_ptype_9casuarius___pyx_scope_struct_5_genexpr->tp_new(__pyx_ptype_9casuarius___pyx_scope_struct_5_genexpr, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_cur_scope);
  __pyx_cur_scope->__pyx_outer_scope = (struct __pyx_obj_9casuarius___pyx_scope_struct_4___repr__ *) __pyx_self;
  __Pyx_INCREF(((PyObject *)__pyx_cur_scope->__pyx_outer_scope));
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_outer_scope);
  {
    __pyx_GeneratorObject *gen = __Pyx_Generator_New((__pyx_generator_body_t) __pyx_gb_9casuarius_16LinearExpression_8__repr___2generator2, (PyObject *) __pyx_cur_scope); if (unlikely(!gen)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("casuarius.LinearExpression.__repr__.genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_9casuarius_16LinearExpression_8__repr___2generator2(__pyx_GeneratorObject *__pyx_generator, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_9casuarius___pyx_scope_struct_5_genexpr *__pyx_cur_scope = ((struct __pyx_obj_9casuarius___pyx_scope_struct_5_genexpr *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("None", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L6_resume_from_yield;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__pyx_cur_scope->__pyx_outer_scope->__pyx_v_s)) { __Pyx_RaiseClosureNameError("s"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 512; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
  if (PyList_CheckExact(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_s) || PyTuple_CheckExact(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_s)) {
    __pyx_t_1 = __pyx_cur_scope->__pyx_outer_scope->__pyx_v_s; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_s); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext;
  }
  for (;;) {
    if (!__pyx_t_3 && PyList_CheckExact(__pyx_t_1)) {
      if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
      __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++;
    } else if (!__pyx_t_3 && PyTuple_CheckExact(__pyx_t_1)) {
      if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
      __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++;
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_term);
    __Pyx_XDECREF(__pyx_cur_scope->__pyx_v_term);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_cur_scope->__pyx_v_term = __pyx_t_4;
    __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_cur_scope->__pyx_v_term);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_cur_scope->__pyx_v_term);
    __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_term);
    __pyx_t_5 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __pyx_r = __pyx_t_5;
    __pyx_t_5 = 0;
    __Pyx_XGIVEREF(__pyx_t_1);
    __pyx_cur_scope->__pyx_t_0 = __pyx_t_1;
    __pyx_cur_scope->__pyx_t_1 = __pyx_t_2;
    __pyx_cur_scope->__pyx_t_2 = __pyx_t_3;
    __Pyx_XGIVEREF(__pyx_r);
    __Pyx_RefNannyFinishContext();
    /* return from generator, yielding value */
    __pyx_generator->resume_label = 1;
    return __pyx_r;
    __pyx_L6_resume_from_yield:;
    __pyx_t_1 = __pyx_cur_scope->__pyx_t_0;
    __pyx_cur_scope->__pyx_t_0 = 0;
    __Pyx_XGOTREF(__pyx_t_1);
    __pyx_t_2 = __pyx_cur_scope->__pyx_t_1;
    __pyx_t_3 = __pyx_cur_scope->__pyx_t_2;
    if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r);
  __pyx_generator->resume_label = -1;
  __Pyx_RefNannyFinishContext();
  return NULL;
}

/* "casuarius.pyx":509
 *             return value
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         if len(self.terms) > 0:
 *             s = sorted(self.terms, key=operator.attrgetter('var.name'))
 */

static PyObject *__pyx_pf_9casuarius_16LinearExpression_4__repr__(struct __pyx_obj_9casuarius_LinearExpression *__pyx_v_self) {
  struct __pyx_obj_9casuarius___pyx_scope_struct_4___repr__ *__pyx_cur_scope;
  PyObject *__pyx_v_terms = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__repr__", 0);
  __pyx_cur_scope = (struct __pyx_obj_9casuarius___pyx_scope_struct_4___repr__ *)__pyx_ptype_9casuarius___pyx_scope_struct_4___repr__->tp_new(__pyx_ptype_9casuarius___pyx_scope_struct_4___repr__, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_cur_scope);

  /* "casuarius.pyx":510
 * 
 *     def __repr__(self):
 *         if len(self.terms) > 0:             # <<<<<<<<<<<<<<
 *             s = sorted(self.terms, key=operator.attrgetter('var.name'))
 *             terms = ' + '.join(str(term) for term in s)
 */
  __pyx_t_1 = ((PyObject *)__pyx_v_self->terms);
  __Pyx_INCREF(__pyx_t_1);
  if (unlikely(__pyx_t_1 == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 510; __pyx_clineno = __LINE__; goto __pyx_L1_error;} 
  }
  __pyx_t_2 = PyTuple_GET_SIZE(__pyx_t_1); 
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_t_2 > 0);
  if (__pyx_t_3) {

    /* "casuarius.pyx":511
 *     def __repr__(self):
 *         if len(self.terms) > 0:
 *             s = sorted(self.terms, key=operator.attrgetter('var.name'))             # <<<<<<<<<<<<<<
 *             terms = ' + '.join(str(term) for term in s)
 *             if self.constant > 0.0:
 */
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 511; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)__pyx_v_self->terms));
    PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_self->terms));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_self->terms));
    __pyx_t_4 = PyDict_New(); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 511; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_4));
    __pyx_t_5 = __Pyx_GetName(__pyx_m, __pyx_n_s__operator); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 511; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyObject_GetAttr(__pyx_t_5, __pyx_n_s__attrgetter); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 511; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyObject_Call(__pyx_t_6, ((PyObject *)__pyx_k_tuple_38), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 511; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (PyDict_SetItem(__pyx_t_4, ((PyObject *)__pyx_n_s__key), __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 511; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyObject_Call(__pyx_builtin_sorted, ((PyObject *)__pyx_t_1), ((PyObject *)__pyx_t_4)); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 511; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_GIVEREF(__pyx_t_5);
    __pyx_cur_scope->__pyx_v_s = __pyx_t_5;
    __pyx_t_5 = 0;

    /* "casuarius.pyx":512
 *         if len(self.terms) > 0:
 *             s = sorted(self.terms, key=operator.attrgetter('var.name'))
 *             terms = ' + '.join(str(term) for term in s)             # <<<<<<<<<<<<<<
 *             if self.constant > 0.0:
 *                 terms += ' + %s' % self.constant
 */
    __pyx_t_5 = PyObject_GetAttr(((PyObject *)__pyx_kp_s_39), __pyx_n_s__join); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_4 = __pyx_pf_9casuarius_16LinearExpression_8__repr___genexpr(((PyObject*)__pyx_cur_scope)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_4 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
    __pyx_v_terms = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "casuarius.pyx":513
 *             s = sorted(self.terms, key=operator.attrgetter('var.name'))
 *             terms = ' + '.join(str(term) for term in s)
 *             if self.constant > 0.0:             # <<<<<<<<<<<<<<
 *                 terms += ' + %s' % self.constant
 *             elif self.constant < 0.0:
 */
    __pyx_t_3 = (__pyx_v_self->constant > 0.0);
    if (__pyx_t_3) {

      /* "casuarius.pyx":514
 *             terms = ' + '.join(str(term) for term in s)
 *             if self.constant > 0.0:
 *                 terms += ' + %s' % self.constant             # <<<<<<<<<<<<<<
 *             elif self.constant < 0.0:
 *                 terms += ' - %s' % -self.constant
 */
      __pyx_t_4 = PyFloat_FromDouble(__pyx_v_self->constant); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 514; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_1 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_40), __pyx_t_4); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 514; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_1));
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = PyNumber_InPlaceAdd(__pyx_v_terms, ((PyObject *)__pyx_t_1)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 514; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_v_terms);
      __pyx_v_terms = __pyx_t_4;
      __pyx_t_4 = 0;
      goto __pyx_L4;
    }

    /* "casuarius.pyx":515
 *             if self.constant > 0.0:
 *                 terms += ' + %s' % self.constant
 *             elif self.constant < 0.0:             # <<<<<<<<<<<<<<
 *                 terms += ' - %s' % -self.constant
 *         else:
 */
    __pyx_t_3 = (__pyx_v_self->constant < 0.0);
    if (__pyx_t_3) {

      /* "casuarius.pyx":516
 *                 terms += ' + %s' % self.constant
 *             elif self.constant < 0.0:
 *                 terms += ' - %s' % -self.constant             # <<<<<<<<<<<<<<
 *         else:
 *             terms = str(self.constant)
 */
      __pyx_t_4 = PyFloat_FromDouble((-__pyx_v_self->constant)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_1 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_41), __pyx_t_4); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_1));
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = PyNumber_InPlaceAdd(__pyx_v_terms, ((PyObject *)__pyx_t_1)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_v_terms);
      __pyx_v_terms = __pyx_t_4;
      __pyx_t_4 = 0;
      goto __pyx_L4;
    }
    __pyx_L4:;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "casuarius.pyx":518
 *                 terms += ' - %s' % -self.constant
 *         else:
 *             terms = str(self.constant)             # <<<<<<<<<<<<<<
 *         return terms
 * 
 */
    __pyx_t_4 = PyFloat_FromDouble(__pyx_v_self->constant); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 518; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 518; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_4 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 518; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
    __pyx_v_terms = __pyx_t_4;
    __pyx_t_4 = 0;
  }
  __pyx_L3:;

  /* "casuarius.pyx":519
 *         else:
 *             terms = str(self.constant)
 *         return terms             # <<<<<<<<<<<<<<
 * 
 *     def __add__(self, other):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_terms);
  __pyx_r = __pyx_v_terms;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("casuarius.LinearExpression.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_terms);
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_16LinearExpression_7__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_9casuarius_16LinearExpression_7__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__add__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_16LinearExpression_6__add__(((PyObject *)__pyx_v_self), ((PyObject *)__pyx_v_other));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":521
 *         return terms
 * 
 *     def __add__(self, other):             # <<<<<<<<<<<<<<
 *         if not isinstance(self, LinearSymbolic):
 *             self, other = other, self
 */

static PyObject *__pyx_pf_9casuarius_16LinearExpression_6__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  struct __pyx_obj_9casuarius_LinearExpression *__pyx_v_expr = NULL;
  PyObject *__pyx_v_terms = NULL;
  PyObject *__pyx_v_const = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  double __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__add__", 0);
  __Pyx_INCREF(__pyx_v_self);
  __Pyx_INCREF(__pyx_v_other);

  /* "casuarius.pyx":522
 * 
 *     def __add__(self, other):
 *         if not isinstance(self, LinearSymbolic):             # <<<<<<<<<<<<<<
 *             self, other = other, self
 *         if isinstance(other, (float, int, long)):
 */
  __pyx_t_1 = ((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearSymbolic));
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_self, __pyx_t_1); 
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (!__pyx_t_2);
  if (__pyx_t_3) {

    /* "casuarius.pyx":523
 *     def __add__(self, other):
 *         if not isinstance(self, LinearSymbolic):
 *             self, other = other, self             # <<<<<<<<<<<<<<
 *         if isinstance(other, (float, int, long)):
 *             expr = LinearExpression(self.terms, self.constant + float(other))
 */
    __pyx_t_4 = __pyx_v_other;
    __pyx_t_5 = __pyx_v_self;
    __pyx_v_self = __pyx_t_4;
    __pyx_t_4 = 0;
    __pyx_v_other = __pyx_t_5;
    __pyx_t_5 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "casuarius.pyx":524
 *         if not isinstance(self, LinearSymbolic):
 *             self, other = other, self
 *         if isinstance(other, (float, int, long)):             # <<<<<<<<<<<<<<
 *             expr = LinearExpression(self.terms, self.constant + float(other))
 *         elif isinstance(other, Term):
 */
  __Pyx_INCREF(__pyx_v_other);
  __pyx_t_1 = __pyx_v_other;
  __pyx_t_3 = PyFloat_Check(__pyx_t_1); 
  if (!__pyx_t_3) {
    __pyx_t_2 = PyInt_Check(__pyx_t_1); 
    __pyx_t_6 = __pyx_t_2;
  } else {
    __pyx_t_6 = __pyx_t_3;
  }
  if (!__pyx_t_6) {
    __pyx_t_3 = PyLong_Check(__pyx_t_1); 
    __pyx_t_2 = __pyx_t_3;
  } else {
    __pyx_t_2 = __pyx_t_6;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "casuarius.pyx":525
 *             self, other = other, self
 *         if isinstance(other, (float, int, long)):
 *             expr = LinearExpression(self.terms, self.constant + float(other))             # <<<<<<<<<<<<<<
 *         elif isinstance(other, Term):
 *             terms = list(self.terms) + [other]
 */
    __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__terms); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 525; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__constant); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 525; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = __Pyx_PyObject_AsDouble(__pyx_v_other); if (unlikely(__pyx_t_8 == ((double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 525; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_9 = PyFloat_FromDouble(__pyx_t_8); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 525; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_10 = PyNumber_Add(__pyx_t_7, __pyx_t_9); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 525; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_9 = PyTuple_New(2); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 525; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_9, 1, __pyx_t_10);
    __Pyx_GIVEREF(__pyx_t_10);
    __pyx_t_1 = 0;
    __pyx_t_10 = 0;
    __pyx_t_10 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearExpression)), ((PyObject *)__pyx_t_9), NULL); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 525; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(((PyObject *)__pyx_t_9)); __pyx_t_9 = 0;
    __pyx_v_expr = ((struct __pyx_obj_9casuarius_LinearExpression *)__pyx_t_10);
    __pyx_t_10 = 0;
    goto __pyx_L4;
  }

  /* "casuarius.pyx":526
 *         if isinstance(other, (float, int, long)):
 *             expr = LinearExpression(self.terms, self.constant + float(other))
 *         elif isinstance(other, Term):             # <<<<<<<<<<<<<<
 *             terms = list(self.terms) + [other]
 *             expr = LinearExpression(terms, self.constant)
 */
  __pyx_t_10 = ((PyObject *)((PyObject*)__pyx_ptype_9casuarius_Term));
  __Pyx_INCREF(__pyx_t_10);
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_other, __pyx_t_10); 
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  if (__pyx_t_2) {

    /* "casuarius.pyx":527
 *             expr = LinearExpression(self.terms, self.constant + float(other))
 *         elif isinstance(other, Term):
 *             terms = list(self.terms) + [other]             # <<<<<<<<<<<<<<
 *             expr = LinearExpression(terms, self.constant)
 *         elif isinstance(other, ConstraintVariable):
 */
    __pyx_t_10 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__terms); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 527; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_9 = PyTuple_New(1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 527; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_10);
    __Pyx_GIVEREF(__pyx_t_10);
    __pyx_t_10 = 0;
    __pyx_t_10 = PyObject_Call(((PyObject *)((PyObject*)(&PyList_Type))), ((PyObject *)__pyx_t_9), NULL); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 527; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(((PyObject *)__pyx_t_9)); __pyx_t_9 = 0;
    __pyx_t_9 = PyList_New(1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 527; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_INCREF(__pyx_v_other);
    PyList_SET_ITEM(__pyx_t_9, 0, __pyx_v_other);
    __Pyx_GIVEREF(__pyx_v_other);
    __pyx_t_1 = PyNumber_Add(__pyx_t_10, ((PyObject *)__pyx_t_9)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 527; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_1));
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_9)); __pyx_t_9 = 0;
    __pyx_v_terms = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "casuarius.pyx":528
 *         elif isinstance(other, Term):
 *             terms = list(self.terms) + [other]
 *             expr = LinearExpression(terms, self.constant)             # <<<<<<<<<<<<<<
 *         elif isinstance(other, ConstraintVariable):
 *             terms = list(self.terms) + [Term(other)]
 */
    __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__constant); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 528; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_9 = PyTuple_New(2); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 528; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_INCREF(((PyObject *)__pyx_v_terms));
    PyTuple_SET_ITEM(__pyx_t_9, 0, ((PyObject *)__pyx_v_terms));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_terms));
    PyTuple_SET_ITEM(__pyx_t_9, 1, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearExpression)), ((PyObject *)__pyx_t_9), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 528; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(((PyObject *)__pyx_t_9)); __pyx_t_9 = 0;
    __pyx_v_expr = ((struct __pyx_obj_9casuarius_LinearExpression *)__pyx_t_1);
    __pyx_t_1 = 0;
    goto __pyx_L4;
  }

  /* "casuarius.pyx":529
 *             terms = list(self.terms) + [other]
 *             expr = LinearExpression(terms, self.constant)
 *         elif isinstance(other, ConstraintVariable):             # <<<<<<<<<<<<<<
 *             terms = list(self.terms) + [Term(other)]
 *             expr = LinearExpression(terms, self.constant)
 */
  __pyx_t_1 = ((PyObject *)((PyObject*)__pyx_ptype_9casuarius_ConstraintVariable));
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_other, __pyx_t_1); 
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "casuarius.pyx":530
 *             expr = LinearExpression(terms, self.constant)
 *         elif isinstance(other, ConstraintVariable):
 *             terms = list(self.terms) + [Term(other)]             # <<<<<<<<<<<<<<
 *             expr = LinearExpression(terms, self.constant)
 *         elif isinstance(other, LinearExpression):
 */
    __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__terms); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 530; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_9 = PyTuple_New(1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 530; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)(&PyList_Type))), ((PyObject *)__pyx_t_9), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 530; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(((PyObject *)__pyx_t_9)); __pyx_t_9 = 0;
    __pyx_t_9 = PyTuple_New(1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 530; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_INCREF(__pyx_v_other);
    PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_v_other);
    __Pyx_GIVEREF(__pyx_v_other);
    __pyx_t_10 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_Term)), ((PyObject *)__pyx_t_9), NULL); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 530; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(((PyObject *)__pyx_t_9)); __pyx_t_9 = 0;
    __pyx_t_9 = PyList_New(1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 530; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    PyList_SET_ITEM(__pyx_t_9, 0, __pyx_t_10);
    __Pyx_GIVEREF(__pyx_t_10);
    __pyx_t_10 = 0;
    __pyx_t_10 = PyNumber_Add(__pyx_t_1, ((PyObject *)__pyx_t_9)); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 530; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_10));
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_9)); __pyx_t_9 = 0;
    __pyx_v_terms = __pyx_t_10;
    __pyx_t_10 = 0;

    /* "casuarius.pyx":531
 *         elif isinstance(other, ConstraintVariable):
 *             terms = list(self.terms) + [Term(other)]
 *             expr = LinearExpression(terms, self.constant)             # <<<<<<<<<<<<<<
 *         elif isinstance(other, LinearExpression):
 *             terms = list(self.terms) + list(other.terms)
 */
    __pyx_t_10 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__constant); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 531; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_9 = PyTuple_New(2); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 531; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_INCREF(((PyObject *)__pyx_v_terms));
    PyTuple_SET_ITEM(__pyx_t_9, 0, ((PyObject *)__pyx_v_terms));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_terms));
    PyTuple_SET_ITEM(__pyx_t_9, 1, __pyx_t_10);
    __Pyx_GIVEREF(__pyx_t_10);
    __pyx_t_10 = 0;
    __pyx_t_10 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearExpression)), ((PyObject *)__pyx_t_9), NULL); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 531; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(((PyObject *)__pyx_t_9)); __pyx_t_9 = 0;
    __pyx_v_expr = ((struct __pyx_obj_9casuarius_LinearExpression *)__pyx_t_10);
    __pyx_t_10 = 0;
    goto __pyx_L4;
  }

  /* "casuarius.pyx":532
 *             terms = list(self.terms) + [Term(other)]
 *             expr = LinearExpression(terms, self.constant)
 *         elif isinstance(other, LinearExpression):             # <<<<<<<<<<<<<<
 *             terms = list(self.terms) + list(other.terms)
 *             const = self.constant + other.constant
 */
  __pyx_t_10 = ((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearExpression));
  __Pyx_INCREF(__pyx_t_10);
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_other, __pyx_t_10); 
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  if (__pyx_t_2) {

    /* "casuarius.pyx":533
 *             expr = LinearExpression(terms, self.constant)
 *         elif isinstance(other, LinearExpression):
 *             terms = list(self.terms) + list(other.terms)             # <<<<<<<<<<<<<<
 *             const = self.constant + other.constant
 *             expr = LinearExpression(terms, const)
 */
    __pyx_t_10 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__terms); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 533; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_9 = PyTuple_New(1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 533; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_10);
    __Pyx_GIVEREF(__pyx_t_10);
    __pyx_t_10 = 0;
    __pyx_t_10 = PyObject_Call(((PyObject *)((PyObject*)(&PyList_Type))), ((PyObject *)__pyx_t_9), NULL); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 533; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(((PyObject *)__pyx_t_9)); __pyx_t_9 = 0;
    __pyx_t_9 = PyObject_GetAttr(__pyx_v_other, __pyx_n_s__terms); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 533; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 533; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_9);
    __Pyx_GIVEREF(__pyx_t_9);
    __pyx_t_9 = 0;
    __pyx_t_9 = PyObject_Call(((PyObject *)((PyObject*)(&PyList_Type))), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 533; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
    __pyx_t_1 = PyNumber_Add(__pyx_t_10, __pyx_t_9); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 533; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_1));
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_v_terms = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "casuarius.pyx":534
 *         elif isinstance(other, LinearExpression):
 *             terms = list(self.terms) + list(other.terms)
 *             const = self.constant + other.constant             # <<<<<<<<<<<<<<
 *             expr = LinearExpression(terms, const)
 *         else:
 */
    __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__constant); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 534; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_9 = PyObject_GetAttr(__pyx_v_other, __pyx_n_s__constant); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 534; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_10 = PyNumber_Add(__pyx_t_1, __pyx_t_9); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 534; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_v_const = __pyx_t_10;
    __pyx_t_10 = 0;

    /* "casuarius.pyx":535
 *             terms = list(self.terms) + list(other.terms)
 *             const = self.constant + other.constant
 *             expr = LinearExpression(terms, const)             # <<<<<<<<<<<<<<
 *         else:
 *             return NotImplemented
 */
    __pyx_t_10 = PyTuple_New(2); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 535; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_INCREF(((PyObject *)__pyx_v_terms));
    PyTuple_SET_ITEM(__pyx_t_10, 0, ((PyObject *)__pyx_v_terms));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_terms));
    __Pyx_INCREF(__pyx_v_const);
    PyTuple_SET_ITEM(__pyx_t_10, 1, __pyx_v_const);
    __Pyx_GIVEREF(__pyx_v_const);
    __pyx_t_9 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearExpression)), ((PyObject *)__pyx_t_10), NULL); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 535; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(((PyObject *)__pyx_t_10)); __pyx_t_10 = 0;
    __pyx_v_expr = ((struct __pyx_obj_9casuarius_LinearExpression *)__pyx_t_9);
    __pyx_t_9 = 0;
    goto __pyx_L4;
  }
  /*else*/ {

    /* "casuarius.pyx":537
 *             expr = LinearExpression(terms, const)
 *         else:
 *             return NotImplemented             # <<<<<<<<<<<<<<
 *         return expr
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_builtin_NotImplemented);
    __pyx_r = __pyx_builtin_NotImplemented;
    goto __pyx_L0;
  }
  __pyx_L4:;

  /* "casuarius.pyx":538
 *         else:
 *             return NotImplemented
 *         return expr             # <<<<<<<<<<<<<<
 * 
 *     def __mul__(self, other):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_expr));
  __pyx_r = ((PyObject *)__pyx_v_expr);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("casuarius.LinearExpression.__add__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_expr);
  __Pyx_XDECREF(__pyx_v_terms);
  __Pyx_XDECREF(__pyx_v_const);
  __Pyx_XDECREF(__pyx_v_self);
  __Pyx_XDECREF(__pyx_v_other);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_16LinearExpression_9__mul__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_9casuarius_16LinearExpression_9__mul__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__mul__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_16LinearExpression_8__mul__(((PyObject *)__pyx_v_self), ((PyObject *)__pyx_v_other));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":540
 *         return expr
 * 
 *     def __mul__(self, other):             # <<<<<<<<<<<<<<
 *         if not isinstance(self, LinearSymbolic):
 *             self, other = other, self
 */

static PyObject *__pyx_pf_9casuarius_16LinearExpression_8__mul__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_v_terms = NULL;
  PyObject *__pyx_v_const = NULL;
  struct __pyx_obj_9casuarius_LinearExpression *__pyx_v_res = NULL;
  PyObject *__pyx_v_term = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  Py_ssize_t __pyx_t_9;
  PyObject *(*__pyx_t_10)(PyObject *);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__mul__", 0);
  __Pyx_INCREF(__pyx_v_self);
  __Pyx_INCREF(__pyx_v_other);

  /* "casuarius.pyx":541
 * 
 *     def __mul__(self, other):
 *         if not isinstance(self, LinearSymbolic):             # <<<<<<<<<<<<<<
 *             self, other = other, self
 *         if isinstance(other, (float, int, long)):
 */
  __pyx_t_1 = ((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearSymbolic));
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_self, __pyx_t_1); 
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (!__pyx_t_2);
  if (__pyx_t_3) {

    /* "casuarius.pyx":542
 *     def __mul__(self, other):
 *         if not isinstance(self, LinearSymbolic):
 *             self, other = other, self             # <<<<<<<<<<<<<<
 *         if isinstance(other, (float, int, long)):
 *             terms = [other * term for term in self.terms]
 */
    __pyx_t_4 = __pyx_v_other;
    __pyx_t_5 = __pyx_v_self;
    __pyx_v_self = __pyx_t_4;
    __pyx_t_4 = 0;
    __pyx_v_other = __pyx_t_5;
    __pyx_t_5 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "casuarius.pyx":543
 *         if not isinstance(self, LinearSymbolic):
 *             self, other = other, self
 *         if isinstance(other, (float, int, long)):             # <<<<<<<<<<<<<<
 *             terms = [other * term for term in self.terms]
 *             const = self.constant * other
 */
  __Pyx_INCREF(__pyx_v_other);
  __pyx_t_1 = __pyx_v_other;
  __pyx_t_3 = PyFloat_Check(__pyx_t_1); 
  if (!__pyx_t_3) {
    __pyx_t_2 = PyInt_Check(__pyx_t_1); 
    __pyx_t_6 = __pyx_t_2;
  } else {
    __pyx_t_6 = __pyx_t_3;
  }
  if (!__pyx_t_6) {
    __pyx_t_3 = PyLong_Check(__pyx_t_1); 
    __pyx_t_2 = __pyx_t_3;
  } else {
    __pyx_t_2 = __pyx_t_6;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "casuarius.pyx":544
 *             self, other = other, self
 *         if isinstance(other, (float, int, long)):
 *             terms = [other * term for term in self.terms]             # <<<<<<<<<<<<<<
 *             const = self.constant * other
 *             res = LinearExpression(terms, const)
 */
    __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 544; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__terms); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 544; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (PyList_CheckExact(__pyx_t_7) || PyTuple_CheckExact(__pyx_t_7)) {
      __pyx_t_8 = __pyx_t_7; __Pyx_INCREF(__pyx_t_8); __pyx_t_9 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_9 = -1; __pyx_t_8 = PyObject_GetIter(__pyx_t_7); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 544; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_10 = Py_TYPE(__pyx_t_8)->tp_iternext;
    }
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    for (;;) {
      if (!__pyx_t_10 && PyList_CheckExact(__pyx_t_8)) {
        if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_8)) break;
        __pyx_t_7 = PyList_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++;
      } else if (!__pyx_t_10 && PyTuple_CheckExact(__pyx_t_8)) {
        if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_8)) break;
        __pyx_t_7 = PyTuple_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++;
      } else {
        __pyx_t_7 = __pyx_t_10(__pyx_t_8);
        if (unlikely(!__pyx_t_7)) {
          if (PyErr_Occurred()) {
            if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
            else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 544; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_7);
      }
      __Pyx_XDECREF(__pyx_v_term);
      __pyx_v_term = __pyx_t_7;
      __pyx_t_7 = 0;
      __pyx_t_7 = PyNumber_Multiply(__pyx_v_other, __pyx_v_term); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 544; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      if (unlikely(PyList_Append(__pyx_t_1, (PyObject*)__pyx_t_7))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 544; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    }
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_INCREF(((PyObject *)__pyx_t_1));
    __pyx_v_terms = __pyx_t_1;
    __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;

    /* "casuarius.pyx":545
 *         if isinstance(other, (float, int, long)):
 *             terms = [other * term for term in self.terms]
 *             const = self.constant * other             # <<<<<<<<<<<<<<
 *             res = LinearExpression(terms, const)
 *         elif isinstance(other, (Term, ConstraintVariable, LinearExpression)):
 */
    __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__constant); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 545; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_8 = PyNumber_Multiply(__pyx_t_1, __pyx_v_other); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 545; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_const = __pyx_t_8;
    __pyx_t_8 = 0;

    /* "casuarius.pyx":546
 *             terms = [other * term for term in self.terms]
 *             const = self.constant * other
 *             res = LinearExpression(terms, const)             # <<<<<<<<<<<<<<
 *         elif isinstance(other, (Term, ConstraintVariable, LinearExpression)):
 *             self.nonlinear('[ %s ] * [ %s ]' % (self, other))
 */
    __pyx_t_8 = PyTuple_New(2); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 546; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_INCREF(((PyObject *)__pyx_v_terms));
    PyTuple_SET_ITEM(__pyx_t_8, 0, ((PyObject *)__pyx_v_terms));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_terms));
    __Pyx_INCREF(__pyx_v_const);
    PyTuple_SET_ITEM(__pyx_t_8, 1, __pyx_v_const);
    __Pyx_GIVEREF(__pyx_v_const);
    __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearExpression)), ((PyObject *)__pyx_t_8), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 546; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(((PyObject *)__pyx_t_8)); __pyx_t_8 = 0;
    __pyx_v_res = ((struct __pyx_obj_9casuarius_LinearExpression *)__pyx_t_1);
    __pyx_t_1 = 0;
    goto __pyx_L4;
  }

  /* "casuarius.pyx":547
 *             const = self.constant * other
 *             res = LinearExpression(terms, const)
 *         elif isinstance(other, (Term, ConstraintVariable, LinearExpression)):             # <<<<<<<<<<<<<<
 *             self.nonlinear('[ %s ] * [ %s ]' % (self, other))
 *         else:
 */
  __Pyx_INCREF(__pyx_v_other);
  __pyx_t_1 = __pyx_v_other;
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_t_1, ((PyObject*)__pyx_ptype_9casuarius_Term)); 
  if (!__pyx_t_2) {
    __pyx_t_6 = __Pyx_TypeCheck(__pyx_t_1, ((PyObject*)__pyx_ptype_9casuarius_ConstraintVariable)); 
    __pyx_t_3 = __pyx_t_6;
  } else {
    __pyx_t_3 = __pyx_t_2;
  }
  if (!__pyx_t_3) {
    __pyx_t_2 = __Pyx_TypeCheck(__pyx_t_1, ((PyObject*)__pyx_ptype_9casuarius_LinearExpression)); 
    __pyx_t_6 = __pyx_t_2;
  } else {
    __pyx_t_6 = __pyx_t_3;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_6) {

    /* "casuarius.pyx":548
 *             res = LinearExpression(terms, const)
 *         elif isinstance(other, (Term, ConstraintVariable, LinearExpression)):
 *             self.nonlinear('[ %s ] * [ %s ]' % (self, other))             # <<<<<<<<<<<<<<
 *         else:
 *             return NotImplemented
 */
    __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__nonlinear); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 548; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_8 = PyTuple_New(2); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 548; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_INCREF(__pyx_v_self);
    PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_v_self);
    __Pyx_GIVEREF(__pyx_v_self);
    __Pyx_INCREF(__pyx_v_other);
    PyTuple_SET_ITEM(__pyx_t_8, 1, __pyx_v_other);
    __Pyx_GIVEREF(__pyx_v_other);
    __pyx_t_7 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_30), ((PyObject *)__pyx_t_8)); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 548; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_7));
    __Pyx_DECREF(((PyObject *)__pyx_t_8)); __pyx_t_8 = 0;
    __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 548; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    PyTuple_SET_ITEM(__pyx_t_8, 0, ((PyObject *)__pyx_t_7));
    __Pyx_GIVEREF(((PyObject *)__pyx_t_7));
    __pyx_t_7 = 0;
    __pyx_t_7 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_8), NULL); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 548; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_8)); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    goto __pyx_L4;
  }
  /*else*/ {

    /* "casuarius.pyx":550
 *             self.nonlinear('[ %s ] * [ %s ]' % (self, other))
 *         else:
 *             return NotImplemented             # <<<<<<<<<<<<<<
 *         return res
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_builtin_NotImplemented);
    __pyx_r = __pyx_builtin_NotImplemented;
    goto __pyx_L0;
  }
  __pyx_L4:;

  /* "casuarius.pyx":551
 *         else:
 *             return NotImplemented
 *         return res             # <<<<<<<<<<<<<<
 * 
 *     def __div__(self, other):
 */
  __Pyx_XDECREF(__pyx_r);
  if (unlikely(!__pyx_v_res)) { __Pyx_RaiseUnboundLocalError("res"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 551; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
  __Pyx_INCREF(((PyObject *)__pyx_v_res));
  __pyx_r = ((PyObject *)__pyx_v_res);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("casuarius.LinearExpression.__mul__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_terms);
  __Pyx_XDECREF(__pyx_v_const);
  __Pyx_XDECREF((PyObject *)__pyx_v_res);
  __Pyx_XDECREF(__pyx_v_term);
  __Pyx_XDECREF(__pyx_v_self);
  __Pyx_XDECREF(__pyx_v_other);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
#if PY_MAJOR_VERSION < 3
static PyObject *__pyx_pw_9casuarius_16LinearExpression_11__div__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_9casuarius_16LinearExpression_11__div__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__div__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_16LinearExpression_10__div__(((PyObject *)__pyx_v_self), ((PyObject *)__pyx_v_other));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
#endif /*!(#if PY_MAJOR_VERSION < 3)*/

/* "casuarius.pyx":553
 *         return res
 * 
 *     def __div__(self, other):             # <<<<<<<<<<<<<<
 *         if not isinstance(self, LinearSymbolic):
 *             self, other = other, self
 */

#if PY_MAJOR_VERSION < 3
static PyObject *__pyx_pf_9casuarius_16LinearExpression_10__div__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_v_res = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  double __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__div__", 0);
  __Pyx_INCREF(__pyx_v_self);
  __Pyx_INCREF(__pyx_v_other);

  /* "casuarius.pyx":554
 * 
 *     def __div__(self, other):
 *         if not isinstance(self, LinearSymbolic):             # <<<<<<<<<<<<<<
 *             self, other = other, self
 *         if isinstance(other, (float, int, long)):
 */
  __pyx_t_1 = ((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearSymbolic));
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_self, __pyx_t_1); 
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (!__pyx_t_2);
  if (__pyx_t_3) {

    /* "casuarius.pyx":555
 *     def __div__(self, other):
 *         if not isinstance(self, LinearSymbolic):
 *             self, other = other, self             # <<<<<<<<<<<<<<
 *         if isinstance(other, (float, int, long)):
 *             res = (1.0 / float(other)) * self
 */
    __pyx_t_4 = __pyx_v_other;
    __pyx_t_5 = __pyx_v_self;
    __pyx_v_self = __pyx_t_4;
    __pyx_t_4 = 0;
    __pyx_v_other = __pyx_t_5;
    __pyx_t_5 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "casuarius.pyx":556
 *         if not isinstance(self, LinearSymbolic):
 *             self, other = other, self
 *         if isinstance(other, (float, int, long)):             # <<<<<<<<<<<<<<
 *             res = (1.0 / float(other)) * self
 *         elif isinstance(other, (Term, ConstraintVariable, LinearExpression)):
 */
  __Pyx_INCREF(__pyx_v_other);
  __pyx_t_1 = __pyx_v_other;
  __pyx_t_3 = PyFloat_Check(__pyx_t_1); 
  if (!__pyx_t_3) {
    __pyx_t_2 = PyInt_Check(__pyx_t_1); 
    __pyx_t_6 = __pyx_t_2;
  } else {
    __pyx_t_6 = __pyx_t_3;
  }
  if (!__pyx_t_6) {
    __pyx_t_3 = PyLong_Check(__pyx_t_1); 
    __pyx_t_2 = __pyx_t_3;
  } else {
    __pyx_t_2 = __pyx_t_6;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "casuarius.pyx":557
 *             self, other = other, self
 *         if isinstance(other, (float, int, long)):
 *             res = (1.0 / float(other)) * self             # <<<<<<<<<<<<<<
 *         elif isinstance(other, (Term, ConstraintVariable, LinearExpression)):
 *             self.nonlinear('[ %s ] / [ %s ]' % (self, other))
 */
    __pyx_t_7 = __Pyx_PyObject_AsDouble(__pyx_v_other); if (unlikely(__pyx_t_7 == ((double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 557; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (unlikely(__pyx_t_7 == 0)) {
      PyErr_Format(PyExc_ZeroDivisionError, "float division");
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 557; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_1 = PyFloat_FromDouble((1.0 / __pyx_t_7)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 557; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_8 = PyNumber_Multiply(__pyx_t_1, __pyx_v_self); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 557; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_res = __pyx_t_8;
    __pyx_t_8 = 0;
    goto __pyx_L4;
  }

  /* "casuarius.pyx":558
 *         if isinstance(other, (float, int, long)):
 *             res = (1.0 / float(other)) * self
 *         elif isinstance(other, (Term, ConstraintVariable, LinearExpression)):             # <<<<<<<<<<<<<<
 *             self.nonlinear('[ %s ] / [ %s ]' % (self, other))
 *         else:
 */
  __Pyx_INCREF(__pyx_v_other);
  __pyx_t_8 = __pyx_v_other;
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_t_8, ((PyObject*)__pyx_ptype_9casuarius_Term)); 
  if (!__pyx_t_2) {
    __pyx_t_6 = __Pyx_TypeCheck(__pyx_t_8, ((PyObject*)__pyx_ptype_9casuarius_ConstraintVariable)); 
    __pyx_t_3 = __pyx_t_6;
  } else {
    __pyx_t_3 = __pyx_t_2;
  }
  if (!__pyx_t_3) {
    __pyx_t_2 = __Pyx_TypeCheck(__pyx_t_8, ((PyObject*)__pyx_ptype_9casuarius_LinearExpression)); 
    __pyx_t_6 = __pyx_t_2;
  } else {
    __pyx_t_6 = __pyx_t_3;
  }
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  if (__pyx_t_6) {

    /* "casuarius.pyx":559
 *             res = (1.0 / float(other)) * self
 *         elif isinstance(other, (Term, ConstraintVariable, LinearExpression)):
 *             self.nonlinear('[ %s ] / [ %s ]' % (self, other))             # <<<<<<<<<<<<<<
 *         else:
 *             return NotImplemented
 */
    __pyx_t_8 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__nonlinear); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 559; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 559; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v_self);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_self);
    __Pyx_GIVEREF(__pyx_v_self);
    __Pyx_INCREF(__pyx_v_other);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_other);
    __Pyx_GIVEREF(__pyx_v_other);
    __pyx_t_9 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_31), ((PyObject *)__pyx_t_1)); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 559; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_9));
    __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 559; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_t_9));
    __Pyx_GIVEREF(((PyObject *)__pyx_t_9));
    __pyx_t_9 = 0;
    __pyx_t_9 = PyObject_Call(__pyx_t_8, ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 559; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    goto __pyx_L4;
  }
  /*else*/ {

    /* "casuarius.pyx":561
 *             self.nonlinear('[ %s ] / [ %s ]' % (self, other))
 *         else:
 *             return NotImplemented             # <<<<<<<<<<<<<<
 *         return res
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_builtin_NotImplemented);
    __pyx_r = __pyx_builtin_NotImplemented;
    goto __pyx_L0;
  }
  __pyx_L4:;

  /* "casuarius.pyx":562
 *         else:
 *             return NotImplemented
 *         return res             # <<<<<<<<<<<<<<
 * 
 *     cdef P_LinearExpression as_cl_linear_expression(self):
 */
  __Pyx_XDECREF(__pyx_r);
  if (unlikely(!__pyx_v_res)) { __Pyx_RaiseUnboundLocalError("res"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 562; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
  __Pyx_INCREF(__pyx_v_res);
  __pyx_r = __pyx_v_res;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("casuarius.LinearExpression.__div__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_res);
  __Pyx_XDECREF(__pyx_v_self);
  __Pyx_XDECREF(__pyx_v_other);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
#endif /*!(#if PY_MAJOR_VERSION < 3)*/

/* "casuarius.pyx":564
 *         return res
 * 
 *     cdef P_LinearExpression as_cl_linear_expression(self):             # <<<<<<<<<<<<<<
 *         """ Convert to a ClLinearExpression.
 *         """
 */

static P_LinearExpression __pyx_f_9casuarius_16LinearExpression_as_cl_linear_expression(struct __pyx_obj_9casuarius_LinearExpression *__pyx_v_self) {
  struct __pyx_obj_9casuarius_Term *__pyx_v_term = 0;
  P_LinearExpression __pyx_v_expr;
  P_LinearExpression __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("as_cl_linear_expression", 0);

  /* "casuarius.pyx":570
 *         cdef P_LinearExpression expr
 * 
 *         expr = newLinearExpression(self.constant)             # <<<<<<<<<<<<<<
 *         for term in self.terms:
 *             expr.AddVariable(deref(term.var.variable), term.coeff)
 */
  __pyx_v_expr = newLinearExpression(__pyx_v_self->constant);

  /* "casuarius.pyx":571
 * 
 *         expr = newLinearExpression(self.constant)
 *         for term in self.terms:             # <<<<<<<<<<<<<<
 *             expr.AddVariable(deref(term.var.variable), term.coeff)
 *         return expr
 */
  if (unlikely(((PyObject *)__pyx_v_self->terms) == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 571; __pyx_clineno = __LINE__; goto __pyx_L1_error;} 
  }
  __pyx_t_1 = ((PyObject *)__pyx_v_self->terms); __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
  for (;;) {
    if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
    __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++;
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_9casuarius_Term))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 571; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_XDECREF(((PyObject *)__pyx_v_term));
    __pyx_v_term = ((struct __pyx_obj_9casuarius_Term *)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "casuarius.pyx":572
 *         expr = newLinearExpression(self.constant)
 *         for term in self.terms:
 *             expr.AddVariable(deref(term.var.variable), term.coeff)             # <<<<<<<<<<<<<<
 *         return expr
 * 
 */
    __pyx_v_expr->AddVariable((*__pyx_v_term->var->variable), __pyx_v_term->coeff);
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "casuarius.pyx":573
 *         for term in self.terms:
 *             expr.AddVariable(deref(term.var.variable), term.coeff)
 *         return expr             # <<<<<<<<<<<<<<
 * 
 * cdef LinearExpression as_linear_expression(obj):
 */
  __pyx_r = __pyx_v_expr;
  goto __pyx_L0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_WriteUnraisable("casuarius.LinearExpression.as_cl_linear_expression", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_term);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_16LinearExpression_5terms_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9casuarius_16LinearExpression_5terms_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_16LinearExpression_5terms___get__(((struct __pyx_obj_9casuarius_LinearExpression *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":487
 * 
 * cdef class LinearExpression(LinearSymbolic):
 *     cdef public tuple terms             # <<<<<<<<<<<<<<
 *     cdef public double constant
 * 
 */

static PyObject *__pyx_pf_9casuarius_16LinearExpression_5terms___get__(struct __pyx_obj_9casuarius_LinearExpression *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->terms));
  __pyx_r = ((PyObject *)__pyx_v_self->terms);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9casuarius_16LinearExpression_5terms_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9casuarius_16LinearExpression_5terms_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_16LinearExpression_5terms_2__set__(((struct __pyx_obj_9casuarius_LinearExpression *)__pyx_v_self), ((PyObject *)__pyx_v_value));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9casuarius_16LinearExpression_5terms_2__set__(struct __pyx_obj_9casuarius_LinearExpression *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyTuple_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected tuple, got %.200s", Py_TYPE(__pyx_v_value)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 487; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->terms);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->terms));
  __pyx_v_self->terms = ((PyObject*)__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("casuarius.LinearExpression.terms.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9casuarius_16LinearExpression_5terms_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9casuarius_16LinearExpression_5terms_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_16LinearExpression_5terms_4__del__(((struct __pyx_obj_9casuarius_LinearExpression *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9casuarius_16LinearExpression_5terms_4__del__(struct __pyx_obj_9casuarius_LinearExpression *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->terms);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->terms));
  __pyx_v_self->terms = ((PyObject*)Py_None);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_16LinearExpression_8constant_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9casuarius_16LinearExpression_8constant_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_16LinearExpression_8constant___get__(((struct __pyx_obj_9casuarius_LinearExpression *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":488
 * cdef class LinearExpression(LinearSymbolic):
 *     cdef public tuple terms
 *     cdef public double constant             # <<<<<<<<<<<<<<
 * 
 *     def reduce_terms(self, terms):
 */

static PyObject *__pyx_pf_9casuarius_16LinearExpression_8constant___get__(struct __pyx_obj_9casuarius_LinearExpression *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->constant); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 488; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("casuarius.LinearExpression.constant.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9casuarius_16LinearExpression_8constant_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9casuarius_16LinearExpression_8constant_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_16LinearExpression_8constant_2__set__(((struct __pyx_obj_9casuarius_LinearExpression *)__pyx_v_self), ((PyObject *)__pyx_v_value));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9casuarius_16LinearExpression_8constant_2__set__(struct __pyx_obj_9casuarius_LinearExpression *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 488; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->constant = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("casuarius.LinearExpression.constant.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":575
 *         return expr
 * 
 * cdef LinearExpression as_linear_expression(obj):             # <<<<<<<<<<<<<<
 *     """ Cast any appropriate object to a LinearExpression.
 *     """
 */

static struct __pyx_obj_9casuarius_LinearExpression *__pyx_f_9casuarius_as_linear_expression(PyObject *__pyx_v_obj) {
  struct __pyx_obj_9casuarius_LinearExpression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  double __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("as_linear_expression", 0);
  __Pyx_INCREF(__pyx_v_obj);

  /* "casuarius.pyx":578
 *     """ Cast any appropriate object to a LinearExpression.
 *     """
 *     if isinstance(obj, LinearExpression):             # <<<<<<<<<<<<<<
 *         return obj
 *     elif isinstance(obj, (float, int, long)):
 */
  __pyx_t_1 = ((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearExpression));
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_obj, __pyx_t_1); 
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "casuarius.pyx":579
 *     """
 *     if isinstance(obj, LinearExpression):
 *         return obj             # <<<<<<<<<<<<<<
 *     elif isinstance(obj, (float, int, long)):
 *         obj = float(obj)
 */
    __Pyx_XDECREF(((PyObject *)__pyx_r));
    if (!(likely(((__pyx_v_obj) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_obj, __pyx_ptype_9casuarius_LinearExpression))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 579; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_INCREF(__pyx_v_obj);
    __pyx_r = ((struct __pyx_obj_9casuarius_LinearExpression *)__pyx_v_obj);
    goto __pyx_L0;
    goto __pyx_L3;
  }

  /* "casuarius.pyx":580
 *     if isinstance(obj, LinearExpression):
 *         return obj
 *     elif isinstance(obj, (float, int, long)):             # <<<<<<<<<<<<<<
 *         obj = float(obj)
 *         return LinearExpression((), obj)
 */
  __Pyx_INCREF(__pyx_v_obj);
  __pyx_t_1 = __pyx_v_obj;
  __pyx_t_2 = PyFloat_Check(__pyx_t_1); 
  if (!__pyx_t_2) {
    __pyx_t_3 = PyInt_Check(__pyx_t_1); 
    __pyx_t_4 = __pyx_t_3;
  } else {
    __pyx_t_4 = __pyx_t_2;
  }
  if (!__pyx_t_4) {
    __pyx_t_2 = PyLong_Check(__pyx_t_1); 
    __pyx_t_3 = __pyx_t_2;
  } else {
    __pyx_t_3 = __pyx_t_4;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_3) {

    /* "casuarius.pyx":581
 *         return obj
 *     elif isinstance(obj, (float, int, long)):
 *         obj = float(obj)             # <<<<<<<<<<<<<<
 *         return LinearExpression((), obj)
 *     elif isinstance(obj, ConstraintVariable):
 */
    __pyx_t_5 = __Pyx_PyObject_AsDouble(__pyx_v_obj); if (unlikely(__pyx_t_5 == ((double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 581; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_1 = PyFloat_FromDouble(__pyx_t_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 581; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_v_obj);
    __pyx_v_obj = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "casuarius.pyx":582
 *     elif isinstance(obj, (float, int, long)):
 *         obj = float(obj)
 *         return LinearExpression((), obj)             # <<<<<<<<<<<<<<
 *     elif isinstance(obj, ConstraintVariable):
 *         return LinearExpression((Term(obj),))
 */
    __Pyx_XDECREF(((PyObject *)__pyx_r));
    __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 582; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)__pyx_empty_tuple));
    PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_empty_tuple));
    __Pyx_GIVEREF(((PyObject *)__pyx_empty_tuple));
    __Pyx_INCREF(__pyx_v_obj);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_obj);
    __Pyx_GIVEREF(__pyx_v_obj);
    __pyx_t_6 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearExpression)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 582; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
    __pyx_r = ((struct __pyx_obj_9casuarius_LinearExpression *)__pyx_t_6);
    __pyx_t_6 = 0;
    goto __pyx_L0;
    goto __pyx_L3;
  }

  /* "casuarius.pyx":583
 *         obj = float(obj)
 *         return LinearExpression((), obj)
 *     elif isinstance(obj, ConstraintVariable):             # <<<<<<<<<<<<<<
 *         return LinearExpression((Term(obj),))
 *     elif isinstance(obj, Term):
 */
  __pyx_t_6 = ((PyObject *)((PyObject*)__pyx_ptype_9casuarius_ConstraintVariable));
  __Pyx_INCREF(__pyx_t_6);
  __pyx_t_3 = __Pyx_TypeCheck(__pyx_v_obj, __pyx_t_6); 
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  if (__pyx_t_3) {

    /* "casuarius.pyx":584
 *         return LinearExpression((), obj)
 *     elif isinstance(obj, ConstraintVariable):
 *         return LinearExpression((Term(obj),))             # <<<<<<<<<<<<<<
 *     elif isinstance(obj, Term):
 *         return LinearExpression((obj,))
 */
    __Pyx_XDECREF(((PyObject *)__pyx_r));
    __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 584; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(__pyx_v_obj);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_v_obj);
    __Pyx_GIVEREF(__pyx_v_obj);
    __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_Term)), ((PyObject *)__pyx_t_6), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 584; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(((PyObject *)__pyx_t_6)); __pyx_t_6 = 0;
    __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 584; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 584; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_t_6));
    __Pyx_GIVEREF(((PyObject *)__pyx_t_6));
    __pyx_t_6 = 0;
    __pyx_t_6 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearExpression)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 584; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
    __pyx_r = ((struct __pyx_obj_9casuarius_LinearExpression *)__pyx_t_6);
    __pyx_t_6 = 0;
    goto __pyx_L0;
    goto __pyx_L3;
  }

  /* "casuarius.pyx":585
 *     elif isinstance(obj, ConstraintVariable):
 *         return LinearExpression((Term(obj),))
 *     elif isinstance(obj, Term):             # <<<<<<<<<<<<<<
 *         return LinearExpression((obj,))
 *     else:
 */
  __pyx_t_6 = ((PyObject *)((PyObject*)__pyx_ptype_9casuarius_Term));
  __Pyx_INCREF(__pyx_t_6);
  __pyx_t_3 = __Pyx_TypeCheck(__pyx_v_obj, __pyx_t_6); 
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  if (__pyx_t_3) {

    /* "casuarius.pyx":586
 *         return LinearExpression((Term(obj),))
 *     elif isinstance(obj, Term):
 *         return LinearExpression((obj,))             # <<<<<<<<<<<<<<
 *     else:
 *         raise TypeError("Cannot cast {0!r}, a {1!r}, to LinearExpression.".format(obj, type(obj)))
 */
    __Pyx_XDECREF(((PyObject *)__pyx_r));
    __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 586; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(__pyx_v_obj);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_v_obj);
    __Pyx_GIVEREF(__pyx_v_obj);
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 586; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_t_6));
    __Pyx_GIVEREF(((PyObject *)__pyx_t_6));
    __pyx_t_6 = 0;
    __pyx_t_6 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearExpression)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 586; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
    __pyx_r = ((struct __pyx_obj_9casuarius_LinearExpression *)__pyx_t_6);
    __pyx_t_6 = 0;
    goto __pyx_L0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "casuarius.pyx":588
 *         return LinearExpression((obj,))
 *     else:
 *         raise TypeError("Cannot cast {0!r}, a {1!r}, to LinearExpression.".format(obj, type(obj)))             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_6 = PyObject_GetAttr(((PyObject *)__pyx_kp_s_42), __pyx_n_s__format); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 588; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 588; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v_obj);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_obj);
    __Pyx_GIVEREF(__pyx_v_obj);
    __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_obj)));
    PyTuple_SET_ITEM(__pyx_t_1, 1, ((PyObject *)Py_TYPE(__pyx_v_obj)));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_obj)));
    __pyx_t_7 = PyObject_Call(__pyx_t_6, ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 588; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 588; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_7);
    __pyx_t_7 = 0;
    __pyx_t_7 = PyObject_Call(__pyx_builtin_TypeError, ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 588; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
    __Pyx_Raise(__pyx_t_7, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 588; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_L3:;

  __pyx_r = ((struct __pyx_obj_9casuarius_LinearExpression *)Py_None); __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("casuarius.as_linear_expression", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_obj);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9casuarius_16LinearConstraint_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9casuarius_16LinearConstraint_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_lhs = 0;
  PyObject *__pyx_v_rhs = 0;
  CYTHON_UNUSED PyObject *__pyx_v_args = 0;
  CYTHON_UNUSED PyObject *__pyx_v_kwds = 0;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__lhs,&__pyx_n_s__rhs,0};
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  __pyx_v_kwds = PyDict_New(); if (unlikely(!__pyx_v_kwds)) return -1;
  __Pyx_GOTREF(__pyx_v_kwds);
  if (PyTuple_GET_SIZE(__pyx_args) > 2) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 2, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_DECREF(__pyx_v_kwds); __pyx_v_kwds = 0;
      __Pyx_RefNannyFinishContext();
      return -1;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__lhs);
        if (likely(values[0])) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__rhs);
        if (likely(values[1])) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 599; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t used_pos_args = (pos_args < 2) ? pos_args : 2;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, __pyx_v_kwds, values, used_pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 599; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_lhs = values[0];
    __pyx_v_rhs = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 599; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_DECREF(__pyx_v_kwds); __pyx_v_kwds = 0;
  __Pyx_AddTraceback("casuarius.LinearConstraint.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9casuarius_16LinearConstraint___cinit__(((struct __pyx_obj_9casuarius_LinearConstraint *)__pyx_v_self), __pyx_v_lhs, __pyx_v_rhs, __pyx_v_args, __pyx_v_kwds);
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_XDECREF(__pyx_v_kwds);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":599
 *     cdef P_Constraint *cl_linear_constraint
 * 
 *     def __cinit__(self, lhs, rhs, *args, **kwds):             # <<<<<<<<<<<<<<
 *         self.lhs = as_linear_expression(lhs)
 *         self.rhs = as_linear_expression(rhs)
 */

static int __pyx_pf_9casuarius_16LinearConstraint___cinit__(struct __pyx_obj_9casuarius_LinearConstraint *__pyx_v_self, PyObject *__pyx_v_lhs, PyObject *__pyx_v_rhs, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "casuarius.pyx":600
 * 
 *     def __cinit__(self, lhs, rhs, *args, **kwds):
 *         self.lhs = as_linear_expression(lhs)             # <<<<<<<<<<<<<<
 *         self.rhs = as_linear_expression(rhs)
 * 
 */
  __pyx_t_1 = ((PyObject *)__pyx_f_9casuarius_as_linear_expression(__pyx_v_lhs)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 600; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->lhs);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->lhs));
  __pyx_v_self->lhs = ((struct __pyx_obj_9casuarius_LinearExpression *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "casuarius.pyx":601
 *     def __cinit__(self, lhs, rhs, *args, **kwds):
 *         self.lhs = as_linear_expression(lhs)
 *         self.rhs = as_linear_expression(rhs)             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, lhs, rhs, Strength strength=required, double weight=1.0):
 */
  __pyx_t_1 = ((PyObject *)__pyx_f_9casuarius_as_linear_expression(__pyx_v_rhs)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 601; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->rhs);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->rhs));
  __pyx_v_self->rhs = ((struct __pyx_obj_9casuarius_LinearExpression *)__pyx_t_1);
  __pyx_t_1 = 0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("casuarius.LinearConstraint.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9casuarius_16LinearConstraint_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9casuarius_16LinearConstraint_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED PyObject *__pyx_v_lhs = 0;
  CYTHON_UNUSED PyObject *__pyx_v_rhs = 0;
  struct __pyx_obj_9casuarius_Strength *__pyx_v_strength = 0;
  double __pyx_v_weight;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__lhs,&__pyx_n_s__rhs,&__pyx_n_s__strength,&__pyx_n_s__weight,0};
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    PyObject* values[4] = {0,0,0,0};
    values[2] = (PyObject *)__pyx_k_43;
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__lhs);
        if (likely(values[0])) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__rhs);
        if (likely(values[1])) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 0, 2, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 603; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__strength);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__weight);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 603; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      if (values[3]) {
      } else {

        /* "casuarius.pyx":603
 *         self.rhs = as_linear_expression(rhs)
 * 
 *     def __init__(self, lhs, rhs, Strength strength=required, double weight=1.0):             # <<<<<<<<<<<<<<
 *         self._strength = strength
 *         self._weight = weight
 */
        __pyx_v_weight = ((double)1.0);
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_lhs = values[0];
    __pyx_v_rhs = values[1];
    __pyx_v_strength = ((struct __pyx_obj_9casuarius_Strength *)values[2]);
    if (values[3]) {
      __pyx_v_weight = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_weight == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 603; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_weight = ((double)1.0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 2, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 603; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("casuarius.LinearConstraint.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_strength), __pyx_ptype_9casuarius_Strength, 1, "strength", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 603; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_9casuarius_16LinearConstraint_2__init__(((struct __pyx_obj_9casuarius_LinearConstraint *)__pyx_v_self), __pyx_v_lhs, __pyx_v_rhs, __pyx_v_strength, __pyx_v_weight);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9casuarius_16LinearConstraint_2__init__(struct __pyx_obj_9casuarius_LinearConstraint *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_lhs, CYTHON_UNUSED PyObject *__pyx_v_rhs, struct __pyx_obj_9casuarius_Strength *__pyx_v_strength, double __pyx_v_weight) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "casuarius.pyx":604
 * 
 *     def __init__(self, lhs, rhs, Strength strength=required, double weight=1.0):
 *         self._strength = strength             # <<<<<<<<<<<<<<
 *         self._weight = weight
 *         self.cl_linear_constraint = self.as_cl_linear_constraint()
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_strength));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_strength));
  __Pyx_GOTREF(__pyx_v_self->_strength);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_strength));
  __pyx_v_self->_strength = __pyx_v_strength;

  /* "casuarius.pyx":605
 *     def __init__(self, lhs, rhs, Strength strength=required, double weight=1.0):
 *         self._strength = strength
 *         self._weight = weight             # <<<<<<<<<<<<<<
 *         self.cl_linear_constraint = self.as_cl_linear_constraint()
 * 
 */
  __pyx_v_self->_weight = __pyx_v_weight;

  /* "casuarius.pyx":606
 *         self._strength = strength
 *         self._weight = weight
 *         self.cl_linear_constraint = self.as_cl_linear_constraint()             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->cl_linear_constraint = ((struct __pyx_vtabstruct_9casuarius_LinearConstraint *)__pyx_v_self->__pyx_vtab)->as_cl_linear_constraint(__pyx_v_self);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_9casuarius_16LinearConstraint_5__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_9casuarius_16LinearConstraint_5__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_9casuarius_16LinearConstraint_4__dealloc__(((struct __pyx_obj_9casuarius_LinearConstraint *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "casuarius.pyx":608
 *         self.cl_linear_constraint = self.as_cl_linear_constraint()
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         delete_P_Constraint(self.cl_linear_constraint)
 * 
 */

static void __pyx_pf_9casuarius_16LinearConstraint_4__dealloc__(struct __pyx_obj_9casuarius_LinearConstraint *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "casuarius.pyx":609
 * 
 *     def __dealloc__(self):
 *         delete_P_Constraint(self.cl_linear_constraint)             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  delete_P_Constraint(__pyx_v_self->cl_linear_constraint);

  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_16LinearConstraint_7__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9casuarius_16LinearConstraint_7__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_16LinearConstraint_6__repr__(((struct __pyx_obj_9casuarius_LinearConstraint *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":611
 *         delete_P_Constraint(self.cl_linear_constraint)
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return '<%s: (%s %s %s) | %s | %s>' % (type(self).__name__, self.lhs,
 *             self.op, self.rhs, self.strength, self.weight)
 */

static PyObject *__pyx_pf_9casuarius_16LinearConstraint_6__repr__(struct __pyx_obj_9casuarius_LinearConstraint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "casuarius.pyx":612
 * 
 *     def __repr__(self):
 *         return '<%s: (%s %s %s) | %s | %s>' % (type(self).__name__, self.lhs,             # <<<<<<<<<<<<<<
 *             self.op, self.rhs, self.strength, self.weight)
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))), __pyx_n_s____name__); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 612; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);

  /* "casuarius.pyx":613
 *     def __repr__(self):
 *         return '<%s: (%s %s %s) | %s | %s>' % (type(self).__name__, self.lhs,
 *             self.op, self.rhs, self.strength, self.weight)             # <<<<<<<<<<<<<<
 * 
 *     def __str__(self):
 */
  __pyx_t_2 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s__strength); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 613; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s__weight); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 613; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 612; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->lhs));
  PyTuple_SET_ITEM(__pyx_t_4, 1, ((PyObject *)__pyx_v_self->lhs));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->lhs));
  __Pyx_INCREF(((PyObject *)__pyx_v_self->op));
  PyTuple_SET_ITEM(__pyx_t_4, 2, ((PyObject *)__pyx_v_self->op));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->op));
  __Pyx_INCREF(((PyObject *)__pyx_v_self->rhs));
  PyTuple_SET_ITEM(__pyx_t_4, 3, ((PyObject *)__pyx_v_self->rhs));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->rhs));
  PyTuple_SET_ITEM(__pyx_t_4, 4, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 5, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_44), ((PyObject *)__pyx_t_4)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 612; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_3));
  __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
  __pyx_r = ((PyObject *)__pyx_t_3);
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("casuarius.LinearConstraint.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_16LinearConstraint_9__str__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9casuarius_16LinearConstraint_9__str__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__str__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_16LinearConstraint_8__str__(((struct __pyx_obj_9casuarius_LinearConstraint *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":615
 *             self.op, self.rhs, self.strength, self.weight)
 * 
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         return '%s %s %s' % (self.lhs, self.op, self.rhs)
 * 
 */

static PyObject *__pyx_pf_9casuarius_16LinearConstraint_8__str__(struct __pyx_obj_9casuarius_LinearConstraint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__str__", 0);

  /* "casuarius.pyx":616
 * 
 *     def __str__(self):
 *         return '%s %s %s' % (self.lhs, self.op, self.rhs)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 616; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->lhs));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_self->lhs));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->lhs));
  __Pyx_INCREF(((PyObject *)__pyx_v_self->op));
  PyTuple_SET_ITEM(__pyx_t_1, 1, ((PyObject *)__pyx_v_self->op));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->op));
  __Pyx_INCREF(((PyObject *)__pyx_v_self->rhs));
  PyTuple_SET_ITEM(__pyx_t_1, 2, ((PyObject *)__pyx_v_self->rhs));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->rhs));
  __pyx_t_2 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_45), ((PyObject *)__pyx_t_1)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 616; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_r = ((PyObject *)__pyx_t_2);
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("casuarius.LinearConstraint.__str__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_16LinearConstraint_8strength_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9casuarius_16LinearConstraint_8strength_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_16LinearConstraint_8strength___get__(((struct __pyx_obj_9casuarius_LinearConstraint *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":620
 * 
 *     property strength:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self._strength
 *         def __set__(self, Strength strength):
 */

static PyObject *__pyx_pf_9casuarius_16LinearConstraint_8strength___get__(struct __pyx_obj_9casuarius_LinearConstraint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "casuarius.pyx":621
 *     property strength:
 *         def __get__(self):
 *             return self._strength             # <<<<<<<<<<<<<<
 *         def __set__(self, Strength strength):
 *             self._strength = strength
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->_strength));
  __pyx_r = ((PyObject *)__pyx_v_self->_strength);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9casuarius_16LinearConstraint_8strength_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_strength); /*proto*/
static int __pyx_pw_9casuarius_16LinearConstraint_8strength_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_strength) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_strength), __pyx_ptype_9casuarius_Strength, 1, "strength", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 622; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_9casuarius_16LinearConstraint_8strength_2__set__(((struct __pyx_obj_9casuarius_LinearConstraint *)__pyx_v_self), ((struct __pyx_obj_9casuarius_Strength *)__pyx_v_strength));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":622
 *         def __get__(self):
 *             return self._strength
 *         def __set__(self, Strength strength):             # <<<<<<<<<<<<<<
 *             self._strength = strength
 *             deref(self.cl_linear_constraint).ChangeStrength(deref(strength.strength))
 */

static int __pyx_pf_9casuarius_16LinearConstraint_8strength_2__set__(struct __pyx_obj_9casuarius_LinearConstraint *__pyx_v_self, struct __pyx_obj_9casuarius_Strength *__pyx_v_strength) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "casuarius.pyx":623
 *             return self._strength
 *         def __set__(self, Strength strength):
 *             self._strength = strength             # <<<<<<<<<<<<<<
 *             deref(self.cl_linear_constraint).ChangeStrength(deref(strength.strength))
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_strength));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_strength));
  __Pyx_GOTREF(__pyx_v_self->_strength);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_strength));
  __pyx_v_self->_strength = __pyx_v_strength;

  /* "casuarius.pyx":624
 *         def __set__(self, Strength strength):
 *             self._strength = strength
 *             deref(self.cl_linear_constraint).ChangeStrength(deref(strength.strength))             # <<<<<<<<<<<<<<
 * 
 *     property weight:
 */
  try {(*__pyx_v_self->cl_linear_constraint)->ChangeStrength((*__pyx_v_strength->strength));} catch(...) {__pyx_f_9casuarius_raise_cassowary_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception."); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 624; __pyx_clineno = __LINE__; goto __pyx_L1_error;}}

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("casuarius.LinearConstraint.strength.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_16LinearConstraint_6weight_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9casuarius_16LinearConstraint_6weight_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_16LinearConstraint_6weight___get__(((struct __pyx_obj_9casuarius_LinearConstraint *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":627
 * 
 *     property weight:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self._weight
 *         def __set__(self, double weight):
 */

static PyObject *__pyx_pf_9casuarius_16LinearConstraint_6weight___get__(struct __pyx_obj_9casuarius_LinearConstraint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "casuarius.pyx":628
 *     property weight:
 *         def __get__(self):
 *             return self._weight             # <<<<<<<<<<<<<<
 *         def __set__(self, double weight):
 *             self._weight = weight
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->_weight); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 628; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("casuarius.LinearConstraint.weight.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9casuarius_16LinearConstraint_6weight_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_weight); /*proto*/
static int __pyx_pw_9casuarius_16LinearConstraint_6weight_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_weight) {
  double __pyx_v_weight;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  assert(__pyx_arg_weight); {
    __pyx_v_weight = __pyx_PyFloat_AsDouble(__pyx_arg_weight); if (unlikely((__pyx_v_weight == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 629; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("casuarius.LinearConstraint.weight.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9casuarius_16LinearConstraint_6weight_2__set__(((struct __pyx_obj_9casuarius_LinearConstraint *)__pyx_v_self), ((double)__pyx_v_weight));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":629
 *         def __get__(self):
 *             return self._weight
 *         def __set__(self, double weight):             # <<<<<<<<<<<<<<
 *             self._weight = weight
 *             deref(self.cl_linear_constraint).ChangeWeight(weight)
 */

static int __pyx_pf_9casuarius_16LinearConstraint_6weight_2__set__(struct __pyx_obj_9casuarius_LinearConstraint *__pyx_v_self, double __pyx_v_weight) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "casuarius.pyx":630
 *             return self._weight
 *         def __set__(self, double weight):
 *             self._weight = weight             # <<<<<<<<<<<<<<
 *             deref(self.cl_linear_constraint).ChangeWeight(weight)
 * 
 */
  __pyx_v_self->_weight = __pyx_v_weight;

  /* "casuarius.pyx":631
 *         def __set__(self, double weight):
 *             self._weight = weight
 *             deref(self.cl_linear_constraint).ChangeWeight(weight)             # <<<<<<<<<<<<<<
 * 
 *     cpdef bint explains_exception(self, object e):
 */
  try {(*__pyx_v_self->cl_linear_constraint)->ChangeWeight(__pyx_v_weight);} catch(...) {__pyx_f_9casuarius_raise_cassowary_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception."); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 631; __pyx_clineno = __LINE__; goto __pyx_L1_error;}}

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("casuarius.LinearConstraint.weight.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":633
 *             deref(self.cl_linear_constraint).ChangeWeight(weight)
 * 
 *     cpdef bint explains_exception(self, object e):             # <<<<<<<<<<<<<<
 *         """ Returns True if this constraint is in the explanation list
 *         of the exception.
 */

static PyObject *__pyx_pw_9casuarius_16LinearConstraint_11explains_exception(PyObject *__pyx_v_self, PyObject *__pyx_v_e); /*proto*/
static int __pyx_f_9casuarius_16LinearConstraint_explains_exception(struct __pyx_obj_9casuarius_LinearConstraint *__pyx_v_self, PyObject *__pyx_v_e, int __pyx_skip_dispatch) {
  size_t __pyx_v_addr;
  size_t __pyx_v_ptr;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  size_t __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("explains_exception", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overriden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s__explains_exception); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 633; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_9casuarius_16LinearConstraint_11explains_exception)) {
      __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 633; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_INCREF(__pyx_v_e);
      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_e);
      __Pyx_GIVEREF(__pyx_v_e);
      __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 633; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
      __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 633; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_4;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "casuarius.pyx":637
 *         of the exception.
 *         """
 *         if self.cl_linear_constraint == NULL or not isinstance(e, CassowaryError):             # <<<<<<<<<<<<<<
 *             return False
 *         cdef size_t addr = get_P_Constraint_addr(self.cl_linear_constraint)
 */
  __pyx_t_4 = (__pyx_v_self->cl_linear_constraint == NULL);
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__CassowaryError); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 637; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = PyObject_IsInstance(__pyx_v_e, __pyx_t_1); if (unlikely(__pyx_t_5 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 637; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_6 = (!__pyx_t_5);
    __pyx_t_5 = __pyx_t_6;
  } else {
    __pyx_t_5 = __pyx_t_4;
  }
  if (__pyx_t_5) {

    /* "casuarius.pyx":638
 *         """
 *         if self.cl_linear_constraint == NULL or not isinstance(e, CassowaryError):
 *             return False             # <<<<<<<<<<<<<<
 *         cdef size_t addr = get_P_Constraint_addr(self.cl_linear_constraint)
 *         cdef size_t ptr
 */
    __pyx_r = 0;
    goto __pyx_L0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "casuarius.pyx":639
 *         if self.cl_linear_constraint == NULL or not isinstance(e, CassowaryError):
 *             return False
 *         cdef size_t addr = get_P_Constraint_addr(self.cl_linear_constraint)             # <<<<<<<<<<<<<<
 *         cdef size_t ptr
 *         for ptr in e.explanation_constraint_pointers:
 */
  __pyx_v_addr = get_P_Constraint_addr(__pyx_v_self->cl_linear_constraint);

  /* "casuarius.pyx":641
 *         cdef size_t addr = get_P_Constraint_addr(self.cl_linear_constraint)
 *         cdef size_t ptr
 *         for ptr in e.explanation_constraint_pointers:             # <<<<<<<<<<<<<<
 *             if ptr == addr:
 *                 return True
 */
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_e, __pyx_n_s_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 641; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyList_CheckExact(__pyx_t_1) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_3 = __pyx_t_1; __Pyx_INCREF(__pyx_t_3); __pyx_t_7 = 0;
    __pyx_t_8 = NULL;
  } else {
    __pyx_t_7 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 641; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_8 = Py_TYPE(__pyx_t_3)->tp_iternext;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (!__pyx_t_8 && PyList_CheckExact(__pyx_t_3)) {
      if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_3)) break;
      __pyx_t_1 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_7); __Pyx_INCREF(__pyx_t_1); __pyx_t_7++;
    } else if (!__pyx_t_8 && PyTuple_CheckExact(__pyx_t_3)) {
      if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
      __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_7); __Pyx_INCREF(__pyx_t_1); __pyx_t_7++;
    } else {
      __pyx_t_1 = __pyx_t_8(__pyx_t_3);
      if (unlikely(!__pyx_t_1)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 641; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __pyx_t_9 = __Pyx_PyInt_AsSize_t(__pyx_t_1); if (unlikely((__pyx_t_9 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 641; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_ptr = __pyx_t_9;

    /* "casuarius.pyx":642
 *         cdef size_t ptr
 *         for ptr in e.explanation_constraint_pointers:
 *             if ptr == addr:             # <<<<<<<<<<<<<<
 *                 return True
 *         return False
 */
    __pyx_t_5 = (__pyx_v_ptr == __pyx_v_addr);
    if (__pyx_t_5) {

      /* "casuarius.pyx":643
 *         for ptr in e.explanation_constraint_pointers:
 *             if ptr == addr:
 *                 return True             # <<<<<<<<<<<<<<
 *         return False
 * 
 */
      __pyx_r = 1;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      goto __pyx_L0;
      goto __pyx_L6;
    }
    __pyx_L6:;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "casuarius.pyx":644
 *             if ptr == addr:
 *                 return True
 *         return False             # <<<<<<<<<<<<<<
 * 
 *     def __or__(self, other):
 */
  __pyx_r = 0;
  goto __pyx_L0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_WriteUnraisable("casuarius.LinearConstraint.explains_exception", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_16LinearConstraint_11explains_exception(PyObject *__pyx_v_self, PyObject *__pyx_v_e); /*proto*/
static char __pyx_doc_9casuarius_16LinearConstraint_10explains_exception[] = " Returns True if this constraint is in the explanation list\n        of the exception.\n        ";
static PyObject *__pyx_pw_9casuarius_16LinearConstraint_11explains_exception(PyObject *__pyx_v_self, PyObject *__pyx_v_e) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("explains_exception (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_16LinearConstraint_10explains_exception(((struct __pyx_obj_9casuarius_LinearConstraint *)__pyx_v_self), ((PyObject *)__pyx_v_e));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":633
 *             deref(self.cl_linear_constraint).ChangeWeight(weight)
 * 
 *     cpdef bint explains_exception(self, object e):             # <<<<<<<<<<<<<<
 *         """ Returns True if this constraint is in the explanation list
 *         of the exception.
 */

static PyObject *__pyx_pf_9casuarius_16LinearConstraint_10explains_exception(struct __pyx_obj_9casuarius_LinearConstraint *__pyx_v_self, PyObject *__pyx_v_e) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("explains_exception", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(((struct __pyx_vtabstruct_9casuarius_LinearConstraint *)__pyx_v_self->__pyx_vtab)->explains_exception(__pyx_v_self, __pyx_v_e, 1)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 633; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("casuarius.LinearConstraint.explains_exception", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_16LinearConstraint_13__or__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_9casuarius_16LinearConstraint_13__or__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__or__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_16LinearConstraint_12__or__(((PyObject *)__pyx_v_self), ((PyObject *)__pyx_v_other));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":646
 *         return False
 * 
 *     def __or__(self, other):             # <<<<<<<<<<<<<<
 *         cdef Strength strength = self.strength
 *         cdef double weight = self.weight
 */

static PyObject *__pyx_pf_9casuarius_16LinearConstraint_12__or__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  struct __pyx_obj_9casuarius_Strength *__pyx_v_strength = 0;
  double __pyx_v_weight;
  PyObject *__pyx_v_msg = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  double __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__or__", 0);

  /* "casuarius.pyx":647
 * 
 *     def __or__(self, other):
 *         cdef Strength strength = self.strength             # <<<<<<<<<<<<<<
 *         cdef double weight = self.weight
 * 
 */
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__strength); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 647; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_9casuarius_Strength))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 647; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_strength = ((struct __pyx_obj_9casuarius_Strength *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "casuarius.pyx":648
 *     def __or__(self, other):
 *         cdef Strength strength = self.strength
 *         cdef double weight = self.weight             # <<<<<<<<<<<<<<
 * 
 *         if isinstance(other, (float, int, long)):
 */
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__weight); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 648; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 648; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_weight = __pyx_t_2;

  /* "casuarius.pyx":650
 *         cdef double weight = self.weight
 * 
 *         if isinstance(other, (float, int, long)):             # <<<<<<<<<<<<<<
 *             weight = other
 *         elif isinstance(other, basestring):
 */
  __Pyx_INCREF(__pyx_v_other);
  __pyx_t_1 = __pyx_v_other;
  __pyx_t_3 = PyFloat_Check(__pyx_t_1); 
  if (!__pyx_t_3) {
    __pyx_t_4 = PyInt_Check(__pyx_t_1); 
    __pyx_t_5 = __pyx_t_4;
  } else {
    __pyx_t_5 = __pyx_t_3;
  }
  if (!__pyx_t_5) {
    __pyx_t_3 = PyLong_Check(__pyx_t_1); 
    __pyx_t_4 = __pyx_t_3;
  } else {
    __pyx_t_4 = __pyx_t_5;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_4) {

    /* "casuarius.pyx":651
 * 
 *         if isinstance(other, (float, int, long)):
 *             weight = other             # <<<<<<<<<<<<<<
 *         elif isinstance(other, basestring):
 *             if other in STRENGTH_MAP:
 */
    __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_other); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 651; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_weight = __pyx_t_2;
    goto __pyx_L3;
  }

  /* "casuarius.pyx":652
 *         if isinstance(other, (float, int, long)):
 *             weight = other
 *         elif isinstance(other, basestring):             # <<<<<<<<<<<<<<
 *             if other in STRENGTH_MAP:
 *                 strength = STRENGTH_MAP[other]
 */
  __pyx_t_1 = __pyx_builtin_basestring;
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_4 = PyObject_IsInstance(__pyx_v_other, __pyx_t_1); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 652; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_4) {

    /* "casuarius.pyx":653
 *             weight = other
 *         elif isinstance(other, basestring):
 *             if other in STRENGTH_MAP:             # <<<<<<<<<<<<<<
 *                 strength = STRENGTH_MAP[other]
 *             else:
 */
    __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__STRENGTH_MAP); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 653; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = ((PySequence_Contains(__pyx_t_1, __pyx_v_other))); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 653; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__pyx_t_4) {

      /* "casuarius.pyx":654
 *         elif isinstance(other, basestring):
 *             if other in STRENGTH_MAP:
 *                 strength = STRENGTH_MAP[other]             # <<<<<<<<<<<<<<
 *             else:
 *                 msg = "Expected a known strength string or a Strength. Got {!r} instead.".format(other)
 */
      __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__STRENGTH_MAP); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 654; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_6 = PyObject_GetItem(__pyx_t_1, __pyx_v_other); if (!__pyx_t_6) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 654; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (!(likely(((__pyx_t_6) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_6, __pyx_ptype_9casuarius_Strength))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 654; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(((PyObject *)__pyx_v_strength));
      __pyx_v_strength = ((struct __pyx_obj_9casuarius_Strength *)__pyx_t_6);
      __pyx_t_6 = 0;
      goto __pyx_L4;
    }
    /*else*/ {

      /* "casuarius.pyx":656
 *                 strength = STRENGTH_MAP[other]
 *             else:
 *                 msg = "Expected a known strength string or a Strength. Got {!r} instead.".format(other)             # <<<<<<<<<<<<<<
 *                 raise ValueError(msg)
 *         elif isinstance(other, Strength):
 */
      __pyx_t_6 = PyObject_GetAttr(((PyObject *)__pyx_kp_s_46), __pyx_n_s__format); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 656; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 656; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_INCREF(__pyx_v_other);
      PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_other);
      __Pyx_GIVEREF(__pyx_v_other);
      __pyx_t_7 = PyObject_Call(__pyx_t_6, ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 656; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
      __pyx_v_msg = __pyx_t_7;
      __pyx_t_7 = 0;

      /* "casuarius.pyx":657
 *             else:
 *                 msg = "Expected a known strength string or a Strength. Got {!r} instead.".format(other)
 *                 raise ValueError(msg)             # <<<<<<<<<<<<<<
 *         elif isinstance(other, Strength):
 *             strength = other
 */
      __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 657; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_INCREF(__pyx_v_msg);
      PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_v_msg);
      __Pyx_GIVEREF(__pyx_v_msg);
      __pyx_t_1 = PyObject_Call(__pyx_builtin_ValueError, ((PyObject *)__pyx_t_7), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 657; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(((PyObject *)__pyx_t_7)); __pyx_t_7 = 0;
      __Pyx_Raise(__pyx_t_1, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 657; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_L4:;
    goto __pyx_L3;
  }

  /* "casuarius.pyx":658
 *                 msg = "Expected a known strength string or a Strength. Got {!r} instead.".format(other)
 *                 raise ValueError(msg)
 *         elif isinstance(other, Strength):             # <<<<<<<<<<<<<<
 *             strength = other
 *         else:
 */
  __pyx_t_1 = ((PyObject *)((PyObject*)__pyx_ptype_9casuarius_Strength));
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_4 = __Pyx_TypeCheck(__pyx_v_other, __pyx_t_1); 
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_4) {

    /* "casuarius.pyx":659
 *                 raise ValueError(msg)
 *         elif isinstance(other, Strength):
 *             strength = other             # <<<<<<<<<<<<<<
 *         else:
 *             msg = "Expected a known strength string, a Strength or a float weight. Got {!r} instead.".format(other)
 */
    if (!(likely(((__pyx_v_other) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_other, __pyx_ptype_9casuarius_Strength))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 659; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_INCREF(__pyx_v_other);
    __Pyx_DECREF(((PyObject *)__pyx_v_strength));
    __pyx_v_strength = ((struct __pyx_obj_9casuarius_Strength *)__pyx_v_other);
    goto __pyx_L3;
  }
  /*else*/ {

    /* "casuarius.pyx":661
 *             strength = other
 *         else:
 *             msg = "Expected a known strength string, a Strength or a float weight. Got {!r} instead.".format(other)             # <<<<<<<<<<<<<<
 *             raise ValueError(msg)
 *         return type(self)(self.lhs, self.rhs, strength=strength, weight=weight)
 */
    __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_kp_s_47), __pyx_n_s__format); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 661; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 661; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_INCREF(__pyx_v_other);
    PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_v_other);
    __Pyx_GIVEREF(__pyx_v_other);
    __pyx_t_6 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_7), NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 661; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_7)); __pyx_t_7 = 0;
    __pyx_v_msg = __pyx_t_6;
    __pyx_t_6 = 0;

    /* "casuarius.pyx":662
 *         else:
 *             msg = "Expected a known strength string, a Strength or a float weight. Got {!r} instead.".format(other)
 *             raise ValueError(msg)             # <<<<<<<<<<<<<<
 *         return type(self)(self.lhs, self.rhs, strength=strength, weight=weight)
 * 
 */
    __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 662; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(__pyx_v_msg);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_v_msg);
    __Pyx_GIVEREF(__pyx_v_msg);
    __pyx_t_7 = PyObject_Call(__pyx_builtin_ValueError, ((PyObject *)__pyx_t_6), NULL); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 662; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(((PyObject *)__pyx_t_6)); __pyx_t_6 = 0;
    __Pyx_Raise(__pyx_t_7, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 662; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_L3:;

  /* "casuarius.pyx":663
 *             msg = "Expected a known strength string, a Strength or a float weight. Got {!r} instead.".format(other)
 *             raise ValueError(msg)
 *         return type(self)(self.lhs, self.rhs, strength=strength, weight=weight)             # <<<<<<<<<<<<<<
 * 
 *     def __ror__(self, Strength other):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_7 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__lhs); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 663; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_6 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__rhs); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 663; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 663; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_7);
  __Pyx_GIVEREF(__pyx_t_7);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_6);
  __pyx_t_7 = 0;
  __pyx_t_6 = 0;
  __pyx_t_6 = PyDict_New(); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 663; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_6));
  if (PyDict_SetItem(__pyx_t_6, ((PyObject *)__pyx_n_s__strength), ((PyObject *)__pyx_v_strength)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 663; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_7 = PyFloat_FromDouble(__pyx_v_weight); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 663; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_7);
  if (PyDict_SetItem(__pyx_t_6, ((PyObject *)__pyx_n_s__weight), __pyx_t_7) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 663; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = PyObject_Call(((PyObject *)Py_TYPE(__pyx_v_self)), ((PyObject *)__pyx_t_1), ((PyObject *)__pyx_t_6)); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 663; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_6)); __pyx_t_6 = 0;
  __pyx_r = __pyx_t_7;
  __pyx_t_7 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("casuarius.LinearConstraint.__or__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_strength);
  __Pyx_XDECREF(__pyx_v_msg);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_16LinearConstraint_15__ror__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_9casuarius_16LinearConstraint_15__ror__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__ror__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_9casuarius_Strength, 1, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 665; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_9casuarius_16LinearConstraint_14__ror__(((struct __pyx_obj_9casuarius_LinearConstraint *)__pyx_v_self), ((struct __pyx_obj_9casuarius_Strength *)__pyx_v_other));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":665
 *         return type(self)(self.lhs, self.rhs, strength=strength, weight=weight)
 * 
 *     def __ror__(self, Strength other):             # <<<<<<<<<<<<<<
 *         return self.__or__(other)
 * 
 */

static PyObject *__pyx_pf_9casuarius_16LinearConstraint_14__ror__(struct __pyx_obj_9casuarius_LinearConstraint *__pyx_v_self, struct __pyx_obj_9casuarius_Strength *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__ror__", 0);

  /* "casuarius.pyx":666
 * 
 *     def __ror__(self, Strength other):
 *         return self.__or__(other)             # <<<<<<<<<<<<<<
 * 
 *     def __hash__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s____or__); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 666; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 666; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_other));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_other));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_other));
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 666; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("casuarius.LinearConstraint.__ror__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static Py_hash_t __pyx_pw_9casuarius_16LinearConstraint_17__hash__(PyObject *__pyx_v_self); /*proto*/
static Py_hash_t __pyx_pw_9casuarius_16LinearConstraint_17__hash__(PyObject *__pyx_v_self) {
  Py_hash_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__hash__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_16LinearConstraint_16__hash__(((struct __pyx_obj_9casuarius_LinearConstraint *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":668
 *         return self.__or__(other)
 * 
 *     def __hash__(self):             # <<<<<<<<<<<<<<
 *         return object.__hash__(self)
 * 
 */

static Py_hash_t __pyx_pf_9casuarius_16LinearConstraint_16__hash__(struct __pyx_obj_9casuarius_LinearConstraint *__pyx_v_self) {
  Py_hash_t __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_hash_t __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__hash__", 0);

  /* "casuarius.pyx":669
 * 
 *     def __hash__(self):
 *         return object.__hash__(self)             # <<<<<<<<<<<<<<
 * 
 *     cdef P_Constraint *as_cl_linear_constraint(self):
 */
  __pyx_t_1 = PyObject_GetAttr(__pyx_builtin_object, __pyx_n_s____hash__); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 669; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 669; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 669; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyInt_AsHash_t(__pyx_t_3); if (unlikely((__pyx_t_4 == (Py_hash_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 669; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  goto __pyx_L0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("casuarius.LinearConstraint.__hash__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  if (unlikely(__pyx_r == -1) && !PyErr_Occurred()) __pyx_r = -2;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":671
 *         return object.__hash__(self)
 * 
 *     cdef P_Constraint *as_cl_linear_constraint(self):             # <<<<<<<<<<<<<<
 *         return NULL
 * 
 */

static P_Constraint *__pyx_f_9casuarius_16LinearConstraint_as_cl_linear_constraint(CYTHON_UNUSED struct __pyx_obj_9casuarius_LinearConstraint *__pyx_v_self) {
  P_Constraint *__pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("as_cl_linear_constraint", 0);

  /* "casuarius.pyx":672
 * 
 *     cdef P_Constraint *as_cl_linear_constraint(self):
 *         return NULL             # <<<<<<<<<<<<<<
 * 
 * cdef class LEConstraint(LinearConstraint):
 */
  __pyx_r = NULL;
  goto __pyx_L0;

  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_16LinearConstraint_3lhs_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9casuarius_16LinearConstraint_3lhs_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_16LinearConstraint_3lhs___get__(((struct __pyx_obj_9casuarius_LinearConstraint *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":592
 * 
 * cdef class LinearConstraint:
 *     cdef readonly LinearExpression lhs             # <<<<<<<<<<<<<<
 *     cdef readonly LinearExpression rhs
 *     cdef Strength _strength
 */

static PyObject *__pyx_pf_9casuarius_16LinearConstraint_3lhs___get__(struct __pyx_obj_9casuarius_LinearConstraint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->lhs));
  __pyx_r = ((PyObject *)__pyx_v_self->lhs);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_16LinearConstraint_3rhs_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9casuarius_16LinearConstraint_3rhs_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_16LinearConstraint_3rhs___get__(((struct __pyx_obj_9casuarius_LinearConstraint *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":593
 * cdef class LinearConstraint:
 *     cdef readonly LinearExpression lhs
 *     cdef readonly LinearExpression rhs             # <<<<<<<<<<<<<<
 *     cdef Strength _strength
 *     cdef double _weight
 */

static PyObject *__pyx_pf_9casuarius_16LinearConstraint_3rhs___get__(struct __pyx_obj_9casuarius_LinearConstraint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->rhs));
  __pyx_r = ((PyObject *)__pyx_v_self->rhs);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_16LinearConstraint_2op_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9casuarius_16LinearConstraint_2op_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_16LinearConstraint_2op___get__(((struct __pyx_obj_9casuarius_LinearConstraint *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":596
 *     cdef Strength _strength
 *     cdef double _weight
 *     cdef readonly bytes op             # <<<<<<<<<<<<<<
 *     cdef P_Constraint *cl_linear_constraint
 * 
 */

static PyObject *__pyx_pf_9casuarius_16LinearConstraint_2op___get__(struct __pyx_obj_9casuarius_LinearConstraint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->op));
  __pyx_r = ((PyObject *)__pyx_v_self->op);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9casuarius_12LEConstraint_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9casuarius_12LEConstraint_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_lhs = 0;
  PyObject *__pyx_v_rhs = 0;
  struct __pyx_obj_9casuarius_Strength *__pyx_v_strength = 0;
  double __pyx_v_weight;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__lhs,&__pyx_n_s__rhs,&__pyx_n_s__strength,&__pyx_n_s__weight,0};
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    PyObject* values[4] = {0,0,0,0};
    values[2] = (PyObject *)__pyx_k_48;
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__lhs);
        if (likely(values[0])) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__rhs);
        if (likely(values[1])) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 0, 2, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 676; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__strength);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__weight);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 676; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      if (values[3]) {
      } else {

        /* "casuarius.pyx":676
 * cdef class LEConstraint(LinearConstraint):
 * 
 *     def __init__(self, lhs, rhs, Strength strength=required, double weight=1.0):             # <<<<<<<<<<<<<<
 *         LinearConstraint.__init__(self, lhs, rhs, strength, weight)
 *         self.op = b'<='
 */
        __pyx_v_weight = ((double)1.0);
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_lhs = values[0];
    __pyx_v_rhs = values[1];
    __pyx_v_strength = ((struct __pyx_obj_9casuarius_Strength *)values[2]);
    if (values[3]) {
      __pyx_v_weight = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_weight == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 676; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_weight = ((double)1.0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 2, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 676; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("casuarius.LEConstraint.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_strength), __pyx_ptype_9casuarius_Strength, 1, "strength", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 676; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_9casuarius_12LEConstraint___init__(((struct __pyx_obj_9casuarius_LEConstraint *)__pyx_v_self), __pyx_v_lhs, __pyx_v_rhs, __pyx_v_strength, __pyx_v_weight);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9casuarius_12LEConstraint___init__(struct __pyx_obj_9casuarius_LEConstraint *__pyx_v_self, PyObject *__pyx_v_lhs, PyObject *__pyx_v_rhs, struct __pyx_obj_9casuarius_Strength *__pyx_v_strength, double __pyx_v_weight) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "casuarius.pyx":677
 * 
 *     def __init__(self, lhs, rhs, Strength strength=required, double weight=1.0):
 *         LinearConstraint.__init__(self, lhs, rhs, strength, weight)             # <<<<<<<<<<<<<<
 *         self.op = b'<='
 * 
 */
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearConstraint)), __pyx_n_s____init__); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 677; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_weight); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 677; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(5); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 677; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  __Pyx_INCREF(__pyx_v_lhs);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_v_lhs);
  __Pyx_GIVEREF(__pyx_v_lhs);
  __Pyx_INCREF(__pyx_v_rhs);
  PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_v_rhs);
  __Pyx_GIVEREF(__pyx_v_rhs);
  __Pyx_INCREF(((PyObject *)__pyx_v_strength));
  PyTuple_SET_ITEM(__pyx_t_3, 3, ((PyObject *)__pyx_v_strength));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_strength));
  PyTuple_SET_ITEM(__pyx_t_3, 4, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 677; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "casuarius.pyx":678
 *     def __init__(self, lhs, rhs, Strength strength=required, double weight=1.0):
 *         LinearConstraint.__init__(self, lhs, rhs, strength, weight)
 *         self.op = b'<='             # <<<<<<<<<<<<<<
 * 
 *     cdef P_Constraint *as_cl_linear_constraint(self):
 */
  __Pyx_INCREF(((PyObject *)__pyx_kp_b_49));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_b_49));
  __Pyx_GOTREF(__pyx_v_self->__pyx_base.op);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->__pyx_base.op));
  __pyx_v_self->__pyx_base.op = __pyx_kp_b_49;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("casuarius.LEConstraint.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":680
 *         self.op = b'<='
 * 
 *     cdef P_Constraint *as_cl_linear_constraint(self):             # <<<<<<<<<<<<<<
 *         cdef P_Constraint *inequality
 *         cdef P_LinearExpression lhs_le
 */

static P_Constraint *__pyx_f_9casuarius_12LEConstraint_as_cl_linear_constraint(struct __pyx_obj_9casuarius_LEConstraint *__pyx_v_self) {
  P_Constraint *__pyx_v_inequality;
  P_Constraint *__pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("as_cl_linear_constraint", 0);

  /* "casuarius.pyx":685
 *         cdef P_LinearExpression rhs_le
 * 
 *         inequality = newLinearInequality(self.lhs.as_cl_linear_expression(), cnLEQ, self.rhs.as_cl_linear_expression(), deref(self._strength.strength), self._weight)             # <<<<<<<<<<<<<<
 *         return inequality
 * 
 */
  __pyx_v_inequality = newLinearInequality(((struct __pyx_vtabstruct_9casuarius_LinearExpression *)__pyx_v_self->__pyx_base.lhs->__pyx_base.__pyx_vtab)->as_cl_linear_expression(__pyx_v_self->__pyx_base.lhs), cnLEQ, ((struct __pyx_vtabstruct_9casuarius_LinearExpression *)__pyx_v_self->__pyx_base.rhs->__pyx_base.__pyx_vtab)->as_cl_linear_expression(__pyx_v_self->__pyx_base.rhs), (*__pyx_v_self->__pyx_base._strength->strength), __pyx_v_self->__pyx_base._weight);

  /* "casuarius.pyx":686
 * 
 *         inequality = newLinearInequality(self.lhs.as_cl_linear_expression(), cnLEQ, self.rhs.as_cl_linear_expression(), deref(self._strength.strength), self._weight)
 *         return inequality             # <<<<<<<<<<<<<<
 * 
 *     property error:
 */
  __pyx_r = __pyx_v_inequality;
  goto __pyx_L0;

  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_12LEConstraint_5error_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9casuarius_12LEConstraint_5error_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_12LEConstraint_5error___get__(((struct __pyx_obj_9casuarius_LEConstraint *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":689
 * 
 *     property error:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return max(self.lhs.value - self.rhs.value, 0.0)
 * 
 */

static PyObject *__pyx_pf_9casuarius_12LEConstraint_5error___get__(struct __pyx_obj_9casuarius_LEConstraint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "casuarius.pyx":690
 *     property error:
 *         def __get__(self):
 *             return max(self.lhs.value - self.rhs.value, 0.0)             # <<<<<<<<<<<<<<
 * 
 * cdef class GEConstraint(LinearConstraint):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = 0.0;
  __pyx_t_2 = PyObject_GetAttr(((PyObject *)__pyx_v_self->__pyx_base.lhs), __pyx_n_s__value); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 690; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_GetAttr(((PyObject *)__pyx_v_self->__pyx_base.rhs), __pyx_n_s__value); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 690; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyNumber_Subtract(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 690; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 690; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = PyObject_RichCompare(__pyx_t_2, __pyx_t_4, Py_GT); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 690; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 690; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__pyx_t_6) {
    __pyx_t_5 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 690; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __pyx_t_5;
    __pyx_t_5 = 0;
  } else {
    __Pyx_INCREF(__pyx_t_4);
    __pyx_t_3 = __pyx_t_4;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_INCREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("casuarius.LEConstraint.error.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9casuarius_12GEConstraint_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9casuarius_12GEConstraint_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_lhs = 0;
  PyObject *__pyx_v_rhs = 0;
  struct __pyx_obj_9casuarius_Strength *__pyx_v_strength = 0;
  double __pyx_v_weight;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__lhs,&__pyx_n_s__rhs,&__pyx_n_s__strength,&__pyx_n_s__weight,0};
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    PyObject* values[4] = {0,0,0,0};
    values[2] = (PyObject *)__pyx_k_50;
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__lhs);
        if (likely(values[0])) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__rhs);
        if (likely(values[1])) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 0, 2, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 694; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__strength);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__weight);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 694; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      if (values[3]) {
      } else {

        /* "casuarius.pyx":694
 * cdef class GEConstraint(LinearConstraint):
 * 
 *     def __init__(self, lhs, rhs, Strength strength=required, double weight=1.0):             # <<<<<<<<<<<<<<
 *         LinearConstraint.__init__(self, lhs, rhs, strength, weight)
 *         self.op = b'>='
 */
        __pyx_v_weight = ((double)1.0);
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_lhs = values[0];
    __pyx_v_rhs = values[1];
    __pyx_v_strength = ((struct __pyx_obj_9casuarius_Strength *)values[2]);
    if (values[3]) {
      __pyx_v_weight = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_weight == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 694; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_weight = ((double)1.0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 2, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 694; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("casuarius.GEConstraint.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_strength), __pyx_ptype_9casuarius_Strength, 1, "strength", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 694; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_9casuarius_12GEConstraint___init__(((struct __pyx_obj_9casuarius_GEConstraint *)__pyx_v_self), __pyx_v_lhs, __pyx_v_rhs, __pyx_v_strength, __pyx_v_weight);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9casuarius_12GEConstraint___init__(struct __pyx_obj_9casuarius_GEConstraint *__pyx_v_self, PyObject *__pyx_v_lhs, PyObject *__pyx_v_rhs, struct __pyx_obj_9casuarius_Strength *__pyx_v_strength, double __pyx_v_weight) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "casuarius.pyx":695
 * 
 *     def __init__(self, lhs, rhs, Strength strength=required, double weight=1.0):
 *         LinearConstraint.__init__(self, lhs, rhs, strength, weight)             # <<<<<<<<<<<<<<
 *         self.op = b'>='
 * 
 */
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearConstraint)), __pyx_n_s____init__); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 695; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_weight); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 695; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(5); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 695; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  __Pyx_INCREF(__pyx_v_lhs);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_v_lhs);
  __Pyx_GIVEREF(__pyx_v_lhs);
  __Pyx_INCREF(__pyx_v_rhs);
  PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_v_rhs);
  __Pyx_GIVEREF(__pyx_v_rhs);
  __Pyx_INCREF(((PyObject *)__pyx_v_strength));
  PyTuple_SET_ITEM(__pyx_t_3, 3, ((PyObject *)__pyx_v_strength));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_strength));
  PyTuple_SET_ITEM(__pyx_t_3, 4, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 695; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "casuarius.pyx":696
 *     def __init__(self, lhs, rhs, Strength strength=required, double weight=1.0):
 *         LinearConstraint.__init__(self, lhs, rhs, strength, weight)
 *         self.op = b'>='             # <<<<<<<<<<<<<<
 * 
 *     cdef P_Constraint *as_cl_linear_constraint(self):
 */
  __Pyx_INCREF(((PyObject *)__pyx_kp_b_51));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_b_51));
  __Pyx_GOTREF(__pyx_v_self->__pyx_base.op);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->__pyx_base.op));
  __pyx_v_self->__pyx_base.op = __pyx_kp_b_51;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("casuarius.GEConstraint.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":698
 *         self.op = b'>='
 * 
 *     cdef P_Constraint *as_cl_linear_constraint(self):             # <<<<<<<<<<<<<<
 *         cdef P_Constraint *inequality
 *         cdef P_LinearExpression lhs_le
 */

static P_Constraint *__pyx_f_9casuarius_12GEConstraint_as_cl_linear_constraint(struct __pyx_obj_9casuarius_GEConstraint *__pyx_v_self) {
  P_Constraint *__pyx_v_inequality;
  P_Constraint *__pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("as_cl_linear_constraint", 0);

  /* "casuarius.pyx":703
 *         cdef P_LinearExpression rhs_le
 * 
 *         inequality = newLinearInequality(self.lhs.as_cl_linear_expression(), cnGEQ, self.rhs.as_cl_linear_expression(), deref(self._strength.strength), self._weight)             # <<<<<<<<<<<<<<
 *         return inequality
 * 
 */
  __pyx_v_inequality = newLinearInequality(((struct __pyx_vtabstruct_9casuarius_LinearExpression *)__pyx_v_self->__pyx_base.lhs->__pyx_base.__pyx_vtab)->as_cl_linear_expression(__pyx_v_self->__pyx_base.lhs), cnGEQ, ((struct __pyx_vtabstruct_9casuarius_LinearExpression *)__pyx_v_self->__pyx_base.rhs->__pyx_base.__pyx_vtab)->as_cl_linear_expression(__pyx_v_self->__pyx_base.rhs), (*__pyx_v_self->__pyx_base._strength->strength), __pyx_v_self->__pyx_base._weight);

  /* "casuarius.pyx":704
 * 
 *         inequality = newLinearInequality(self.lhs.as_cl_linear_expression(), cnGEQ, self.rhs.as_cl_linear_expression(), deref(self._strength.strength), self._weight)
 *         return inequality             # <<<<<<<<<<<<<<
 * 
 *     property error:
 */
  __pyx_r = __pyx_v_inequality;
  goto __pyx_L0;

  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_12GEConstraint_5error_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9casuarius_12GEConstraint_5error_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_12GEConstraint_5error___get__(((struct __pyx_obj_9casuarius_GEConstraint *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":707
 * 
 *     property error:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return max(self.rhs.value - self.lhs.value, 0.0)
 * 
 */

static PyObject *__pyx_pf_9casuarius_12GEConstraint_5error___get__(struct __pyx_obj_9casuarius_GEConstraint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "casuarius.pyx":708
 *     property error:
 *         def __get__(self):
 *             return max(self.rhs.value - self.lhs.value, 0.0)             # <<<<<<<<<<<<<<
 * 
 * cdef class EQConstraint(LinearConstraint):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = 0.0;
  __pyx_t_2 = PyObject_GetAttr(((PyObject *)__pyx_v_self->__pyx_base.rhs), __pyx_n_s__value); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 708; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_GetAttr(((PyObject *)__pyx_v_self->__pyx_base.lhs), __pyx_n_s__value); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 708; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyNumber_Subtract(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 708; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 708; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = PyObject_RichCompare(__pyx_t_2, __pyx_t_4, Py_GT); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 708; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 708; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__pyx_t_6) {
    __pyx_t_5 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 708; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __pyx_t_5;
    __pyx_t_5 = 0;
  } else {
    __Pyx_INCREF(__pyx_t_4);
    __pyx_t_3 = __pyx_t_4;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_INCREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("casuarius.GEConstraint.error.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9casuarius_12EQConstraint_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9casuarius_12EQConstraint_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_lhs = 0;
  PyObject *__pyx_v_rhs = 0;
  struct __pyx_obj_9casuarius_Strength *__pyx_v_strength = 0;
  double __pyx_v_weight;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__lhs,&__pyx_n_s__rhs,&__pyx_n_s__strength,&__pyx_n_s__weight,0};
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    PyObject* values[4] = {0,0,0,0};
    values[2] = (PyObject *)__pyx_k_52;
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__lhs);
        if (likely(values[0])) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__rhs);
        if (likely(values[1])) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 0, 2, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 712; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__strength);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__weight);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 712; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      if (values[3]) {
      } else {

        /* "casuarius.pyx":712
 * cdef class EQConstraint(LinearConstraint):
 * 
 *     def __init__(self, lhs, rhs, Strength strength=required, double weight=1.0):             # <<<<<<<<<<<<<<
 *         LinearConstraint.__init__(self, lhs, rhs, strength, weight)
 *         self.op = b'=='
 */
        __pyx_v_weight = ((double)1.0);
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_lhs = values[0];
    __pyx_v_rhs = values[1];
    __pyx_v_strength = ((struct __pyx_obj_9casuarius_Strength *)values[2]);
    if (values[3]) {
      __pyx_v_weight = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_weight == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 712; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_weight = ((double)1.0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 2, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 712; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("casuarius.EQConstraint.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_strength), __pyx_ptype_9casuarius_Strength, 1, "strength", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 712; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_9casuarius_12EQConstraint___init__(((struct __pyx_obj_9casuarius_EQConstraint *)__pyx_v_self), __pyx_v_lhs, __pyx_v_rhs, __pyx_v_strength, __pyx_v_weight);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9casuarius_12EQConstraint___init__(struct __pyx_obj_9casuarius_EQConstraint *__pyx_v_self, PyObject *__pyx_v_lhs, PyObject *__pyx_v_rhs, struct __pyx_obj_9casuarius_Strength *__pyx_v_strength, double __pyx_v_weight) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "casuarius.pyx":713
 * 
 *     def __init__(self, lhs, rhs, Strength strength=required, double weight=1.0):
 *         LinearConstraint.__init__(self, lhs, rhs, strength, weight)             # <<<<<<<<<<<<<<
 *         self.op = b'=='
 * 
 */
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_LinearConstraint)), __pyx_n_s____init__); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 713; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_weight); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 713; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(5); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 713; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  __Pyx_INCREF(__pyx_v_lhs);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_v_lhs);
  __Pyx_GIVEREF(__pyx_v_lhs);
  __Pyx_INCREF(__pyx_v_rhs);
  PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_v_rhs);
  __Pyx_GIVEREF(__pyx_v_rhs);
  __Pyx_INCREF(((PyObject *)__pyx_v_strength));
  PyTuple_SET_ITEM(__pyx_t_3, 3, ((PyObject *)__pyx_v_strength));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_strength));
  PyTuple_SET_ITEM(__pyx_t_3, 4, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 713; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "casuarius.pyx":714
 *     def __init__(self, lhs, rhs, Strength strength=required, double weight=1.0):
 *         LinearConstraint.__init__(self, lhs, rhs, strength, weight)
 *         self.op = b'=='             # <<<<<<<<<<<<<<
 * 
 *     cdef P_Constraint *as_cl_linear_constraint(self):
 */
  __Pyx_INCREF(((PyObject *)__pyx_kp_b_53));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_b_53));
  __Pyx_GOTREF(__pyx_v_self->__pyx_base.op);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->__pyx_base.op));
  __pyx_v_self->__pyx_base.op = __pyx_kp_b_53;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("casuarius.EQConstraint.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":716
 *         self.op = b'=='
 * 
 *     cdef P_Constraint *as_cl_linear_constraint(self):             # <<<<<<<<<<<<<<
 *         cdef P_Constraint *equation
 *         cdef P_LinearExpression lhs_le
 */

static P_Constraint *__pyx_f_9casuarius_12EQConstraint_as_cl_linear_constraint(struct __pyx_obj_9casuarius_EQConstraint *__pyx_v_self) {
  P_Constraint *__pyx_v_equation;
  P_Constraint *__pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("as_cl_linear_constraint", 0);

  /* "casuarius.pyx":721
 *         cdef P_LinearExpression rhs_le
 * 
 *         equation = newLinearEquation(self.lhs.as_cl_linear_expression(), self.rhs.as_cl_linear_expression(), deref(self._strength.strength), self._weight)             # <<<<<<<<<<<<<<
 *         return equation
 * 
 */
  __pyx_v_equation = newLinearEquation(((struct __pyx_vtabstruct_9casuarius_LinearExpression *)__pyx_v_self->__pyx_base.lhs->__pyx_base.__pyx_vtab)->as_cl_linear_expression(__pyx_v_self->__pyx_base.lhs), ((struct __pyx_vtabstruct_9casuarius_LinearExpression *)__pyx_v_self->__pyx_base.rhs->__pyx_base.__pyx_vtab)->as_cl_linear_expression(__pyx_v_self->__pyx_base.rhs), (*__pyx_v_self->__pyx_base._strength->strength), __pyx_v_self->__pyx_base._weight);

  /* "casuarius.pyx":722
 * 
 *         equation = newLinearEquation(self.lhs.as_cl_linear_expression(), self.rhs.as_cl_linear_expression(), deref(self._strength.strength), self._weight)
 *         return equation             # <<<<<<<<<<<<<<
 * 
 *     property error:
 */
  __pyx_r = __pyx_v_equation;
  goto __pyx_L0;

  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_12EQConstraint_5error_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9casuarius_12EQConstraint_5error_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_12EQConstraint_5error___get__(((struct __pyx_obj_9casuarius_EQConstraint *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":725
 * 
 *     property error:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return abs(self.rhs.value - self.lhs.value)
 * 
 */

static PyObject *__pyx_pf_9casuarius_12EQConstraint_5error___get__(struct __pyx_obj_9casuarius_EQConstraint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "casuarius.pyx":726
 *     property error:
 *         def __get__(self):
 *             return abs(self.rhs.value - self.lhs.value)             # <<<<<<<<<<<<<<
 * 
 * cdef class Solver:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self->__pyx_base.rhs), __pyx_n_s__value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 726; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_GetAttr(((PyObject *)__pyx_v_self->__pyx_base.lhs), __pyx_n_s__value); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 726; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyNumber_Subtract(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 726; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Absolute(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 726; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("casuarius.EQConstraint.error.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9casuarius_6Solver_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9casuarius_6Solver_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_autosolve;
  int __pyx_v_explaining;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__autosolve,&__pyx_n_s__explaining,0};
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__autosolve);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__explaining);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 733; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      if (values[0]) {
      } else {

        /* "casuarius.pyx":733
 *     cdef bint _explaining
 * 
 *     def __cinit__(self, bint autosolve=False, bint explaining=True):             # <<<<<<<<<<<<<<
 *         self.solver = new ClSimplexSolver()
 *         self.autosolve = autosolve
 */
        __pyx_v_autosolve = ((int)0);
      }
      if (values[1]) {
      } else {
        __pyx_v_explaining = ((int)1);
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_autosolve = __Pyx_PyObject_IsTrue(values[0]); if (unlikely((__pyx_v_autosolve == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 733; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_autosolve = ((int)0);
    }
    if (values[1]) {
      __pyx_v_explaining = __Pyx_PyObject_IsTrue(values[1]); if (unlikely((__pyx_v_explaining == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 733; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_explaining = ((int)1);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 733; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("casuarius.Solver.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9casuarius_6Solver___cinit__(((struct __pyx_obj_9casuarius_Solver *)__pyx_v_self), __pyx_v_autosolve, __pyx_v_explaining);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9casuarius_6Solver___cinit__(struct __pyx_obj_9casuarius_Solver *__pyx_v_self, int __pyx_v_autosolve, int __pyx_v_explaining) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "casuarius.pyx":734
 * 
 *     def __cinit__(self, bint autosolve=False, bint explaining=True):
 *         self.solver = new ClSimplexSolver()             # <<<<<<<<<<<<<<
 *         self.autosolve = autosolve
 *         self.explaining = explaining
 */
  __pyx_v_self->solver = new SimplexSolver();

  /* "casuarius.pyx":735
 *     def __cinit__(self, bint autosolve=False, bint explaining=True):
 *         self.solver = new ClSimplexSolver()
 *         self.autosolve = autosolve             # <<<<<<<<<<<<<<
 *         self.explaining = explaining
 * 
 */
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_autosolve); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetAttr(((PyObject *)__pyx_v_self), __pyx_n_s__autosolve, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "casuarius.pyx":736
 *         self.solver = new ClSimplexSolver()
 *         self.autosolve = autosolve
 *         self.explaining = explaining             # <<<<<<<<<<<<<<
 * 
 *     property autosolve:
 */
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_explaining); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 736; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetAttr(((PyObject *)__pyx_v_self), __pyx_n_s__explaining, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 736; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("casuarius.Solver.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_6Solver_9autosolve_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9casuarius_6Solver_9autosolve_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_6Solver_9autosolve___get__(((struct __pyx_obj_9casuarius_Solver *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":739
 * 
 *     property autosolve:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self._autosolve
 * 
 */

static PyObject *__pyx_pf_9casuarius_6Solver_9autosolve___get__(struct __pyx_obj_9casuarius_Solver *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "casuarius.pyx":740
 *     property autosolve:
 *         def __get__(self):
 *             return self._autosolve             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, bint autosolve):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->_autosolve); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 740; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("casuarius.Solver.autosolve.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9casuarius_6Solver_9autosolve_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_autosolve); /*proto*/
static int __pyx_pw_9casuarius_6Solver_9autosolve_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_autosolve) {
  int __pyx_v_autosolve;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  assert(__pyx_arg_autosolve); {
    __pyx_v_autosolve = __Pyx_PyObject_IsTrue(__pyx_arg_autosolve); if (unlikely((__pyx_v_autosolve == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 742; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("casuarius.Solver.autosolve.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9casuarius_6Solver_9autosolve_2__set__(((struct __pyx_obj_9casuarius_Solver *)__pyx_v_self), ((int)__pyx_v_autosolve));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":742
 *             return self._autosolve
 * 
 *         def __set__(self, bint autosolve):             # <<<<<<<<<<<<<<
 *             self._autosolve = autosolve
 *             self.solver.SetAutosolve(autosolve)
 */

static int __pyx_pf_9casuarius_6Solver_9autosolve_2__set__(struct __pyx_obj_9casuarius_Solver *__pyx_v_self, int __pyx_v_autosolve) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "casuarius.pyx":743
 * 
 *         def __set__(self, bint autosolve):
 *             self._autosolve = autosolve             # <<<<<<<<<<<<<<
 *             self.solver.SetAutosolve(autosolve)
 * 
 */
  __pyx_v_self->_autosolve = __pyx_v_autosolve;

  /* "casuarius.pyx":744
 *         def __set__(self, bint autosolve):
 *             self._autosolve = autosolve
 *             self.solver.SetAutosolve(autosolve)             # <<<<<<<<<<<<<<
 * 
 *     property explaining:
 */
  try {__pyx_v_self->solver->SetAutosolve(__pyx_v_autosolve);} catch(...) {__pyx_f_9casuarius_raise_cassowary_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception."); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 744; __pyx_clineno = __LINE__; goto __pyx_L1_error;}}

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("casuarius.Solver.autosolve.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_6Solver_10explaining_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9casuarius_6Solver_10explaining_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_6Solver_10explaining___get__(((struct __pyx_obj_9casuarius_Solver *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":747
 * 
 *     property explaining:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self._explaining
 * 
 */

static PyObject *__pyx_pf_9casuarius_6Solver_10explaining___get__(struct __pyx_obj_9casuarius_Solver *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "casuarius.pyx":748
 *     property explaining:
 *         def __get__(self):
 *             return self._explaining             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, bint explaining):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->_explaining); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 748; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("casuarius.Solver.explaining.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9casuarius_6Solver_10explaining_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_explaining); /*proto*/
static int __pyx_pw_9casuarius_6Solver_10explaining_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_explaining) {
  int __pyx_v_explaining;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  assert(__pyx_arg_explaining); {
    __pyx_v_explaining = __Pyx_PyObject_IsTrue(__pyx_arg_explaining); if (unlikely((__pyx_v_explaining == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 750; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("casuarius.Solver.explaining.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9casuarius_6Solver_10explaining_2__set__(((struct __pyx_obj_9casuarius_Solver *)__pyx_v_self), ((int)__pyx_v_explaining));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":750
 *             return self._explaining
 * 
 *         def __set__(self, bint explaining):             # <<<<<<<<<<<<<<
 *             self._explaining = explaining
 *             self.solver.SetExplaining(explaining)
 */

static int __pyx_pf_9casuarius_6Solver_10explaining_2__set__(struct __pyx_obj_9casuarius_Solver *__pyx_v_self, int __pyx_v_explaining) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "casuarius.pyx":751
 * 
 *         def __set__(self, bint explaining):
 *             self._explaining = explaining             # <<<<<<<<<<<<<<
 *             self.solver.SetExplaining(explaining)
 * 
 */
  __pyx_v_self->_explaining = __pyx_v_explaining;

  /* "casuarius.pyx":752
 *         def __set__(self, bint explaining):
 *             self._explaining = explaining
 *             self.solver.SetExplaining(explaining)             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->solver->SetExplaining(__pyx_v_explaining);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_9casuarius_6Solver_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_9casuarius_6Solver_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_9casuarius_6Solver_2__dealloc__(((struct __pyx_obj_9casuarius_Solver *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "casuarius.pyx":754
 *             self.solver.SetExplaining(explaining)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.solver
 * 
 */

static void __pyx_pf_9casuarius_6Solver_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_9casuarius_Solver *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "casuarius.pyx":755
 * 
 *     def __dealloc__(self):
 *         del self.solver             # <<<<<<<<<<<<<<
 * 
 *     def __str__(self):
 */
  delete __pyx_v_self->solver;

  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_6Solver_5__str__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9casuarius_6Solver_5__str__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__str__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_6Solver_4__str__(((struct __pyx_obj_9casuarius_Solver *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":757
 *         del self.solver
 * 
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         return solver_str(self.solver).c_str()
 * 
 */

static PyObject *__pyx_pf_9casuarius_6Solver_4__str__(struct __pyx_obj_9casuarius_Solver *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__str__", 0);

  /* "casuarius.pyx":758
 * 
 *     def __str__(self):
 *         return solver_str(self.solver).c_str()             # <<<<<<<<<<<<<<
 * 
 *     def add_constraint(self, LinearConstraint constraint):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyBytes_FromString(solver_str(__pyx_v_self->solver).c_str()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 758; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_r = ((PyObject *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("casuarius.Solver.__str__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_6Solver_7add_constraint(PyObject *__pyx_v_self, PyObject *__pyx_v_constraint); /*proto*/
static PyObject *__pyx_pw_9casuarius_6Solver_7add_constraint(PyObject *__pyx_v_self, PyObject *__pyx_v_constraint) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("add_constraint (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_constraint), __pyx_ptype_9casuarius_LinearConstraint, 1, "constraint", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 760; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_9casuarius_6Solver_6add_constraint(((struct __pyx_obj_9casuarius_Solver *)__pyx_v_self), ((struct __pyx_obj_9casuarius_LinearConstraint *)__pyx_v_constraint));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":760
 *         return solver_str(self.solver).c_str()
 * 
 *     def add_constraint(self, LinearConstraint constraint):             # <<<<<<<<<<<<<<
 *         self.solver.AddConstraint(deref(constraint.cl_linear_constraint))
 * 
 */

static PyObject *__pyx_pf_9casuarius_6Solver_6add_constraint(struct __pyx_obj_9casuarius_Solver *__pyx_v_self, struct __pyx_obj_9casuarius_LinearConstraint *__pyx_v_constraint) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("add_constraint", 0);

  /* "casuarius.pyx":761
 * 
 *     def add_constraint(self, LinearConstraint constraint):
 *         self.solver.AddConstraint(deref(constraint.cl_linear_constraint))             # <<<<<<<<<<<<<<
 * 
 *     def remove_constraint(self, LinearConstraint constraint):
 */
  try {__pyx_v_self->solver->AddConstraint((*__pyx_v_constraint->cl_linear_constraint));} catch(...) {__pyx_f_9casuarius_raise_cassowary_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception."); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 761; __pyx_clineno = __LINE__; goto __pyx_L1_error;}}

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("casuarius.Solver.add_constraint", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_6Solver_9remove_constraint(PyObject *__pyx_v_self, PyObject *__pyx_v_constraint); /*proto*/
static PyObject *__pyx_pw_9casuarius_6Solver_9remove_constraint(PyObject *__pyx_v_self, PyObject *__pyx_v_constraint) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("remove_constraint (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_constraint), __pyx_ptype_9casuarius_LinearConstraint, 1, "constraint", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 763; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_9casuarius_6Solver_8remove_constraint(((struct __pyx_obj_9casuarius_Solver *)__pyx_v_self), ((struct __pyx_obj_9casuarius_LinearConstraint *)__pyx_v_constraint));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":763
 *         self.solver.AddConstraint(deref(constraint.cl_linear_constraint))
 * 
 *     def remove_constraint(self, LinearConstraint constraint):             # <<<<<<<<<<<<<<
 *         self.solver.RemoveConstraint(deref(constraint.cl_linear_constraint))
 * 
 */

static PyObject *__pyx_pf_9casuarius_6Solver_8remove_constraint(struct __pyx_obj_9casuarius_Solver *__pyx_v_self, struct __pyx_obj_9casuarius_LinearConstraint *__pyx_v_constraint) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("remove_constraint", 0);

  /* "casuarius.pyx":764
 * 
 *     def remove_constraint(self, LinearConstraint constraint):
 *         self.solver.RemoveConstraint(deref(constraint.cl_linear_constraint))             # <<<<<<<<<<<<<<
 * 
 *     def suggest_values(self, var_vals, Strength default_strength=strong, double default_weight=1.0):
 */
  try {__pyx_v_self->solver->RemoveConstraint((*__pyx_v_constraint->cl_linear_constraint));} catch(...) {__pyx_f_9casuarius_raise_cassowary_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception."); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 764; __pyx_clineno = __LINE__; goto __pyx_L1_error;}}

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("casuarius.Solver.remove_constraint", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_6Solver_11suggest_values(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_9casuarius_6Solver_11suggest_values(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_var_vals = 0;
  struct __pyx_obj_9casuarius_Strength *__pyx_v_default_strength = 0;
  double __pyx_v_default_weight;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__var_vals,&__pyx_n_s__default_strength,&__pyx_n_s__default_weight,0};
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("suggest_values (wrapper)", 0);
  {
    PyObject* values[3] = {0,0,0};
    values[1] = (PyObject *)__pyx_k_54;
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__var_vals);
        if (likely(values[0])) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__default_strength);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__default_weight);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "suggest_values") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 766; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      if (values[2]) {
      } else {

        /* "casuarius.pyx":766
 *         self.solver.RemoveConstraint(deref(constraint.cl_linear_constraint))
 * 
 *     def suggest_values(self, var_vals, Strength default_strength=strong, double default_weight=1.0):             # <<<<<<<<<<<<<<
 *         return SolverEditContext(self, var_vals, default_strength, default_weight)
 * 
 */
        __pyx_v_default_weight = ((double)1.0);
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_var_vals = values[0];
    __pyx_v_default_strength = ((struct __pyx_obj_9casuarius_Strength *)values[1]);
    if (values[2]) {
      __pyx_v_default_weight = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_default_weight == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 766; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_default_weight = ((double)1.0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("suggest_values", 0, 1, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 766; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("casuarius.Solver.suggest_values", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_default_strength), __pyx_ptype_9casuarius_Strength, 1, "default_strength", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 766; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_9casuarius_6Solver_10suggest_values(((struct __pyx_obj_9casuarius_Solver *)__pyx_v_self), __pyx_v_var_vals, __pyx_v_default_strength, __pyx_v_default_weight);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9casuarius_6Solver_10suggest_values(struct __pyx_obj_9casuarius_Solver *__pyx_v_self, PyObject *__pyx_v_var_vals, struct __pyx_obj_9casuarius_Strength *__pyx_v_default_strength, double __pyx_v_default_weight) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("suggest_values", 0);

  /* "casuarius.pyx":767
 * 
 *     def suggest_values(self, var_vals, Strength default_strength=strong, double default_weight=1.0):
 *         return SolverEditContext(self, var_vals, default_strength, default_weight)             # <<<<<<<<<<<<<<
 * 
 *     cdef object _begin_edit_suggest_values(self, var_vals, Strength default_strength=strong, double default_weight=1.0):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_default_weight); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 767; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 767; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  __Pyx_INCREF(__pyx_v_var_vals);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_var_vals);
  __Pyx_GIVEREF(__pyx_v_var_vals);
  __Pyx_INCREF(((PyObject *)__pyx_v_default_strength));
  PyTuple_SET_ITEM(__pyx_t_2, 2, ((PyObject *)__pyx_v_default_strength));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_default_strength));
  PyTuple_SET_ITEM(__pyx_t_2, 3, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_SolverEditContext)), ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 767; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("casuarius.Solver.suggest_values", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":769
 *         return SolverEditContext(self, var_vals, default_strength, default_weight)
 * 
 *     cdef object _begin_edit_suggest_values(self, var_vals, Strength default_strength=strong, double default_weight=1.0):             # <<<<<<<<<<<<<<
 *         cdef ConstraintVariable variable
 *         cdef double value
 */

static PyObject *__pyx_f_9casuarius_6Solver__begin_edit_suggest_values(struct __pyx_obj_9casuarius_Solver *__pyx_v_self, PyObject *__pyx_v_var_vals, struct __pyx_opt_args_9casuarius_6Solver__begin_edit_suggest_values *__pyx_optional_args) {
  struct __pyx_obj_9casuarius_Strength *__pyx_v_default_strength = __pyx_k_55;
  double __pyx_v_default_weight = ((double)1.0);
  struct __pyx_obj_9casuarius_ConstraintVariable *__pyx_v_variable = 0;
  double __pyx_v_value;
  struct __pyx_obj_9casuarius_Strength *__pyx_v_strength = 0;
  double __pyx_v_weight;
  PyObject *__pyx_v_item = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *(*__pyx_t_9)(PyObject *);
  double __pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  double __pyx_t_13;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_begin_edit_suggest_values", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_default_strength = __pyx_optional_args->default_strength;
      if (__pyx_optional_args->__pyx_n > 1) {
        __pyx_v_default_weight = __pyx_optional_args->default_weight;
      }
    }
  }

  /* "casuarius.pyx":775
 *         cdef double weight
 * 
 *         for item in var_vals:             # <<<<<<<<<<<<<<
 *             strength = default_strength
 *             weight = default_weight
 */
  if (PyList_CheckExact(__pyx_v_var_vals) || PyTuple_CheckExact(__pyx_v_var_vals)) {
    __pyx_t_1 = __pyx_v_var_vals; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_var_vals); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 775; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext;
  }
  for (;;) {
    if (!__pyx_t_3 && PyList_CheckExact(__pyx_t_1)) {
      if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
      __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++;
    } else if (!__pyx_t_3 && PyTuple_CheckExact(__pyx_t_1)) {
      if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
      __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++;
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 775; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF(__pyx_v_item);
    __pyx_v_item = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "casuarius.pyx":776
 * 
 *         for item in var_vals:
 *             strength = default_strength             # <<<<<<<<<<<<<<
 *             weight = default_weight
 *             if len(item) == 2:
 */
    __Pyx_INCREF(((PyObject *)__pyx_v_default_strength));
    __Pyx_XDECREF(((PyObject *)__pyx_v_strength));
    __pyx_v_strength = __pyx_v_default_strength;

    /* "casuarius.pyx":777
 *         for item in var_vals:
 *             strength = default_strength
 *             weight = default_weight             # <<<<<<<<<<<<<<
 *             if len(item) == 2:
 *                 variable, value = item
 */
    __pyx_v_weight = __pyx_v_default_weight;

    /* "casuarius.pyx":778
 *             strength = default_strength
 *             weight = default_weight
 *             if len(item) == 2:             # <<<<<<<<<<<<<<
 *                 variable, value = item
 *             elif len(item) == 3:
 */
    __pyx_t_5 = PyObject_Length(__pyx_v_item); if (unlikely(__pyx_t_5 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 778; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_6 = (__pyx_t_5 == 2);
    if (__pyx_t_6) {

      /* "casuarius.pyx":779
 *             weight = default_weight
 *             if len(item) == 2:
 *                 variable, value = item             # <<<<<<<<<<<<<<
 *             elif len(item) == 3:
 *                 variable, value, strength = item
 */
      if ((likely(PyTuple_CheckExact(__pyx_v_item))) || (PyList_CheckExact(__pyx_v_item))) {
        PyObject* sequence = __pyx_v_item;
        if (likely(PyTuple_CheckExact(sequence))) {
          if (unlikely(PyTuple_GET_SIZE(sequence) != 2)) {
            if (PyTuple_GET_SIZE(sequence) > 2) __Pyx_RaiseTooManyValuesError(2);
            else __Pyx_RaiseNeedMoreValuesError(PyTuple_GET_SIZE(sequence));
            {__pyx_filename = __pyx_f[0]; __pyx_lineno = 779; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          __pyx_t_4 = PyTuple_GET_ITEM(sequence, 0); 
          __pyx_t_7 = PyTuple_GET_ITEM(sequence, 1); 
        } else {
          if (unlikely(PyList_GET_SIZE(sequence) != 2)) {
            if (PyList_GET_SIZE(sequence) > 2) __Pyx_RaiseTooManyValuesError(2);
            else __Pyx_RaiseNeedMoreValuesError(PyList_GET_SIZE(sequence));
            {__pyx_filename = __pyx_f[0]; __pyx_lineno = 779; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          __pyx_t_4 = PyList_GET_ITEM(sequence, 0); 
          __pyx_t_7 = PyList_GET_ITEM(sequence, 1); 
        }
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
      } else {
        Py_ssize_t index = -1;
        __pyx_t_8 = PyObject_GetIter(__pyx_v_item); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 779; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_8);
        __pyx_t_9 = Py_TYPE(__pyx_t_8)->tp_iternext;
        index = 0; __pyx_t_4 = __pyx_t_9(__pyx_t_8); if (unlikely(!__pyx_t_4)) goto __pyx_L6_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_4);
        index = 1; __pyx_t_7 = __pyx_t_9(__pyx_t_8); if (unlikely(!__pyx_t_7)) goto __pyx_L6_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_7);
        if (__Pyx_IternextUnpackEndCheck(__pyx_t_9(__pyx_t_8), 2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 779; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        goto __pyx_L7_unpacking_done;
        __pyx_L6_unpacking_failed:;
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        if (PyErr_Occurred() && PyErr_ExceptionMatches(PyExc_StopIteration)) PyErr_Clear();
        if (!PyErr_Occurred()) __Pyx_RaiseNeedMoreValuesError(index);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 779; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_L7_unpacking_done:;
      }
      if (!(likely(((__pyx_t_4) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_4, __pyx_ptype_9casuarius_ConstraintVariable))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 779; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_10 = __pyx_PyFloat_AsDouble(__pyx_t_7); if (unlikely((__pyx_t_10 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 779; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_XDECREF(((PyObject *)__pyx_v_variable));
      __pyx_v_variable = ((struct __pyx_obj_9casuarius_ConstraintVariable *)__pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_v_value = __pyx_t_10;
      goto __pyx_L5;
    }

    /* "casuarius.pyx":780
 *             if len(item) == 2:
 *                 variable, value = item
 *             elif len(item) == 3:             # <<<<<<<<<<<<<<
 *                 variable, value, strength = item
 *             elif len(item) == 4:
 */
    __pyx_t_5 = PyObject_Length(__pyx_v_item); if (unlikely(__pyx_t_5 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 780; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_6 = (__pyx_t_5 == 3);
    if (__pyx_t_6) {

      /* "casuarius.pyx":781
 *                 variable, value = item
 *             elif len(item) == 3:
 *                 variable, value, strength = item             # <<<<<<<<<<<<<<
 *             elif len(item) == 4:
 *                 variable, value, strength, weight = item
 */
      if ((likely(PyTuple_CheckExact(__pyx_v_item))) || (PyList_CheckExact(__pyx_v_item))) {
        PyObject* sequence = __pyx_v_item;
        if (likely(PyTuple_CheckExact(sequence))) {
          if (unlikely(PyTuple_GET_SIZE(sequence) != 3)) {
            if (PyTuple_GET_SIZE(sequence) > 3) __Pyx_RaiseTooManyValuesError(3);
            else __Pyx_RaiseNeedMoreValuesError(PyTuple_GET_SIZE(sequence));
            {__pyx_filename = __pyx_f[0]; __pyx_lineno = 781; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          __pyx_t_7 = PyTuple_GET_ITEM(sequence, 0); 
          __pyx_t_4 = PyTuple_GET_ITEM(sequence, 1); 
          __pyx_t_8 = PyTuple_GET_ITEM(sequence, 2); 
        } else {
          if (unlikely(PyList_GET_SIZE(sequence) != 3)) {
            if (PyList_GET_SIZE(sequence) > 3) __Pyx_RaiseTooManyValuesError(3);
            else __Pyx_RaiseNeedMoreValuesError(PyList_GET_SIZE(sequence));
            {__pyx_filename = __pyx_f[0]; __pyx_lineno = 781; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          __pyx_t_7 = PyList_GET_ITEM(sequence, 0); 
          __pyx_t_4 = PyList_GET_ITEM(sequence, 1); 
          __pyx_t_8 = PyList_GET_ITEM(sequence, 2); 
        }
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_8);
      } else {
        Py_ssize_t index = -1;
        __pyx_t_11 = PyObject_GetIter(__pyx_v_item); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 781; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_11);
        __pyx_t_9 = Py_TYPE(__pyx_t_11)->tp_iternext;
        index = 0; __pyx_t_7 = __pyx_t_9(__pyx_t_11); if (unlikely(!__pyx_t_7)) goto __pyx_L8_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_7);
        index = 1; __pyx_t_4 = __pyx_t_9(__pyx_t_11); if (unlikely(!__pyx_t_4)) goto __pyx_L8_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_4);
        index = 2; __pyx_t_8 = __pyx_t_9(__pyx_t_11); if (unlikely(!__pyx_t_8)) goto __pyx_L8_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_8);
        if (__Pyx_IternextUnpackEndCheck(__pyx_t_9(__pyx_t_11), 3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 781; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        goto __pyx_L9_unpacking_done;
        __pyx_L8_unpacking_failed:;
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        if (PyErr_Occurred() && PyErr_ExceptionMatches(PyExc_StopIteration)) PyErr_Clear();
        if (!PyErr_Occurred()) __Pyx_RaiseNeedMoreValuesError(index);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 781; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_L9_unpacking_done:;
      }
      if (!(likely(((__pyx_t_7) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_7, __pyx_ptype_9casuarius_ConstraintVariable))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 781; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_10 = __pyx_PyFloat_AsDouble(__pyx_t_4); if (unlikely((__pyx_t_10 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 781; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (!(likely(((__pyx_t_8) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_8, __pyx_ptype_9casuarius_Strength))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 781; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_XDECREF(((PyObject *)__pyx_v_variable));
      __pyx_v_variable = ((struct __pyx_obj_9casuarius_ConstraintVariable *)__pyx_t_7);
      __pyx_t_7 = 0;
      __pyx_v_value = __pyx_t_10;
      __Pyx_DECREF(((PyObject *)__pyx_v_strength));
      __pyx_v_strength = ((struct __pyx_obj_9casuarius_Strength *)__pyx_t_8);
      __pyx_t_8 = 0;
      goto __pyx_L5;
    }

    /* "casuarius.pyx":782
 *             elif len(item) == 3:
 *                 variable, value, strength = item
 *             elif len(item) == 4:             # <<<<<<<<<<<<<<
 *                 variable, value, strength, weight = item
 *             self.solver.AddEditVar(deref(variable.variable), deref(strength.strength), weight)
 */
    __pyx_t_5 = PyObject_Length(__pyx_v_item); if (unlikely(__pyx_t_5 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 782; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_6 = (__pyx_t_5 == 4);
    if (__pyx_t_6) {

      /* "casuarius.pyx":783
 *                 variable, value, strength = item
 *             elif len(item) == 4:
 *                 variable, value, strength, weight = item             # <<<<<<<<<<<<<<
 *             self.solver.AddEditVar(deref(variable.variable), deref(strength.strength), weight)
 * 
 */
      if ((likely(PyTuple_CheckExact(__pyx_v_item))) || (PyList_CheckExact(__pyx_v_item))) {
        PyObject* sequence = __pyx_v_item;
        if (likely(PyTuple_CheckExact(sequence))) {
          if (unlikely(PyTuple_GET_SIZE(sequence) != 4)) {
            if (PyTuple_GET_SIZE(sequence) > 4) __Pyx_RaiseTooManyValuesError(4);
            else __Pyx_RaiseNeedMoreValuesError(PyTuple_GET_SIZE(sequence));
            {__pyx_filename = __pyx_f[0]; __pyx_lineno = 783; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          __pyx_t_8 = PyTuple_GET_ITEM(sequence, 0); 
          __pyx_t_4 = PyTuple_GET_ITEM(sequence, 1); 
          __pyx_t_7 = PyTuple_GET_ITEM(sequence, 2); 
          __pyx_t_11 = PyTuple_GET_ITEM(sequence, 3); 
        } else {
          if (unlikely(PyList_GET_SIZE(sequence) != 4)) {
            if (PyList_GET_SIZE(sequence) > 4) __Pyx_RaiseTooManyValuesError(4);
            else __Pyx_RaiseNeedMoreValuesError(PyList_GET_SIZE(sequence));
            {__pyx_filename = __pyx_f[0]; __pyx_lineno = 783; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          __pyx_t_8 = PyList_GET_ITEM(sequence, 0); 
          __pyx_t_4 = PyList_GET_ITEM(sequence, 1); 
          __pyx_t_7 = PyList_GET_ITEM(sequence, 2); 
          __pyx_t_11 = PyList_GET_ITEM(sequence, 3); 
        }
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_11);
      } else {
        Py_ssize_t index = -1;
        __pyx_t_12 = PyObject_GetIter(__pyx_v_item); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 783; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_12);
        __pyx_t_9 = Py_TYPE(__pyx_t_12)->tp_iternext;
        index = 0; __pyx_t_8 = __pyx_t_9(__pyx_t_12); if (unlikely(!__pyx_t_8)) goto __pyx_L10_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_8);
        index = 1; __pyx_t_4 = __pyx_t_9(__pyx_t_12); if (unlikely(!__pyx_t_4)) goto __pyx_L10_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_4);
        index = 2; __pyx_t_7 = __pyx_t_9(__pyx_t_12); if (unlikely(!__pyx_t_7)) goto __pyx_L10_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_7);
        index = 3; __pyx_t_11 = __pyx_t_9(__pyx_t_12); if (unlikely(!__pyx_t_11)) goto __pyx_L10_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_11);
        if (__Pyx_IternextUnpackEndCheck(__pyx_t_9(__pyx_t_12), 4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 783; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        goto __pyx_L11_unpacking_done;
        __pyx_L10_unpacking_failed:;
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        if (PyErr_Occurred() && PyErr_ExceptionMatches(PyExc_StopIteration)) PyErr_Clear();
        if (!PyErr_Occurred()) __Pyx_RaiseNeedMoreValuesError(index);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 783; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_L11_unpacking_done:;
      }
      if (!(likely(((__pyx_t_8) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_8, __pyx_ptype_9casuarius_ConstraintVariable))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 783; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_10 = __pyx_PyFloat_AsDouble(__pyx_t_4); if (unlikely((__pyx_t_10 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 783; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (!(likely(((__pyx_t_7) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_7, __pyx_ptype_9casuarius_Strength))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 783; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_13 = __pyx_PyFloat_AsDouble(__pyx_t_11); if (unlikely((__pyx_t_13 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 783; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_XDECREF(((PyObject *)__pyx_v_variable));
      __pyx_v_variable = ((struct __pyx_obj_9casuarius_ConstraintVariable *)__pyx_t_8);
      __pyx_t_8 = 0;
      __pyx_v_value = __pyx_t_10;
      __Pyx_DECREF(((PyObject *)__pyx_v_strength));
      __pyx_v_strength = ((struct __pyx_obj_9casuarius_Strength *)__pyx_t_7);
      __pyx_t_7 = 0;
      __pyx_v_weight = __pyx_t_13;
      goto __pyx_L5;
    }
    __pyx_L5:;

    /* "casuarius.pyx":784
 *             elif len(item) == 4:
 *                 variable, value, strength, weight = item
 *             self.solver.AddEditVar(deref(variable.variable), deref(strength.strength), weight)             # <<<<<<<<<<<<<<
 * 
 *         self.solver.BeginEdit()
 */
    if (unlikely(!__pyx_v_variable)) { __Pyx_RaiseUnboundLocalError("variable"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 784; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
    try {__pyx_v_self->solver->AddEditVar((*__pyx_v_variable->variable), (*__pyx_v_strength->strength), __pyx_v_weight);} catch(...) {__pyx_f_9casuarius_raise_cassowary_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception."); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 784; __pyx_clineno = __LINE__; goto __pyx_L1_error;}}
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "casuarius.pyx":786
 *             self.solver.AddEditVar(deref(variable.variable), deref(strength.strength), weight)
 * 
 *         self.solver.BeginEdit()             # <<<<<<<<<<<<<<
 *         for item in var_vals:
 *             strength = default_strength
 */
  try {__pyx_v_self->solver->BeginEdit();} catch(...) {__pyx_f_9casuarius_raise_cassowary_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception."); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 786; __pyx_clineno = __LINE__; goto __pyx_L1_error;}}

  /* "casuarius.pyx":787
 * 
 *         self.solver.BeginEdit()
 *         for item in var_vals:             # <<<<<<<<<<<<<<
 *             strength = default_strength
 *             weight = default_weight
 */
  if (PyList_CheckExact(__pyx_v_var_vals) || PyTuple_CheckExact(__pyx_v_var_vals)) {
    __pyx_t_1 = __pyx_v_var_vals; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_var_vals); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 787; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext;
  }
  for (;;) {
    if (!__pyx_t_3 && PyList_CheckExact(__pyx_t_1)) {
      if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
      __pyx_t_11 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_11); __pyx_t_2++;
    } else if (!__pyx_t_3 && PyTuple_CheckExact(__pyx_t_1)) {
      if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
      __pyx_t_11 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_11); __pyx_t_2++;
    } else {
      __pyx_t_11 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_11)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 787; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_11);
    }
    __Pyx_XDECREF(__pyx_v_item);
    __pyx_v_item = __pyx_t_11;
    __pyx_t_11 = 0;

    /* "casuarius.pyx":788
 *         self.solver.BeginEdit()
 *         for item in var_vals:
 *             strength = default_strength             # <<<<<<<<<<<<<<
 *             weight = default_weight
 *             if len(item) == 2:
 */
    __Pyx_INCREF(((PyObject *)__pyx_v_default_strength));
    __Pyx_XDECREF(((PyObject *)__pyx_v_strength));
    __pyx_v_strength = __pyx_v_default_strength;

    /* "casuarius.pyx":789
 *         for item in var_vals:
 *             strength = default_strength
 *             weight = default_weight             # <<<<<<<<<<<<<<
 *             if len(item) == 2:
 *                 variable, value = item
 */
    __pyx_v_weight = __pyx_v_default_weight;

    /* "casuarius.pyx":790
 *             strength = default_strength
 *             weight = default_weight
 *             if len(item) == 2:             # <<<<<<<<<<<<<<
 *                 variable, value = item
 *             elif len(item) == 3:
 */
    __pyx_t_5 = PyObject_Length(__pyx_v_item); if (unlikely(__pyx_t_5 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 790; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_6 = (__pyx_t_5 == 2);
    if (__pyx_t_6) {

      /* "casuarius.pyx":791
 *             weight = default_weight
 *             if len(item) == 2:
 *                 variable, value = item             # <<<<<<<<<<<<<<
 *             elif len(item) == 3:
 *                 variable, value, strength = item
 */
      if ((likely(PyTuple_CheckExact(__pyx_v_item))) || (PyList_CheckExact(__pyx_v_item))) {
        PyObject* sequence = __pyx_v_item;
        if (likely(PyTuple_CheckExact(sequence))) {
          if (unlikely(PyTuple_GET_SIZE(sequence) != 2)) {
            if (PyTuple_GET_SIZE(sequence) > 2) __Pyx_RaiseTooManyValuesError(2);
            else __Pyx_RaiseNeedMoreValuesError(PyTuple_GET_SIZE(sequence));
            {__pyx_filename = __pyx_f[0]; __pyx_lineno = 791; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          __pyx_t_11 = PyTuple_GET_ITEM(sequence, 0); 
          __pyx_t_7 = PyTuple_GET_ITEM(sequence, 1); 
        } else {
          if (unlikely(PyList_GET_SIZE(sequence) != 2)) {
            if (PyList_GET_SIZE(sequence) > 2) __Pyx_RaiseTooManyValuesError(2);
            else __Pyx_RaiseNeedMoreValuesError(PyList_GET_SIZE(sequence));
            {__pyx_filename = __pyx_f[0]; __pyx_lineno = 791; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          __pyx_t_11 = PyList_GET_ITEM(sequence, 0); 
          __pyx_t_7 = PyList_GET_ITEM(sequence, 1); 
        }
        __Pyx_INCREF(__pyx_t_11);
        __Pyx_INCREF(__pyx_t_7);
      } else {
        Py_ssize_t index = -1;
        __pyx_t_4 = PyObject_GetIter(__pyx_v_item); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 791; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_9 = Py_TYPE(__pyx_t_4)->tp_iternext;
        index = 0; __pyx_t_11 = __pyx_t_9(__pyx_t_4); if (unlikely(!__pyx_t_11)) goto __pyx_L15_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_11);
        index = 1; __pyx_t_7 = __pyx_t_9(__pyx_t_4); if (unlikely(!__pyx_t_7)) goto __pyx_L15_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_7);
        if (__Pyx_IternextUnpackEndCheck(__pyx_t_9(__pyx_t_4), 2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 791; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        goto __pyx_L16_unpacking_done;
        __pyx_L15_unpacking_failed:;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (PyErr_Occurred() && PyErr_ExceptionMatches(PyExc_StopIteration)) PyErr_Clear();
        if (!PyErr_Occurred()) __Pyx_RaiseNeedMoreValuesError(index);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 791; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_L16_unpacking_done:;
      }
      if (!(likely(((__pyx_t_11) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_11, __pyx_ptype_9casuarius_ConstraintVariable))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 791; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_13 = __pyx_PyFloat_AsDouble(__pyx_t_7); if (unlikely((__pyx_t_13 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 791; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_XDECREF(((PyObject *)__pyx_v_variable));
      __pyx_v_variable = ((struct __pyx_obj_9casuarius_ConstraintVariable *)__pyx_t_11);
      __pyx_t_11 = 0;
      __pyx_v_value = __pyx_t_13;
      goto __pyx_L14;
    }

    /* "casuarius.pyx":792
 *             if len(item) == 2:
 *                 variable, value = item
 *             elif len(item) == 3:             # <<<<<<<<<<<<<<
 *                 variable, value, strength = item
 *             elif len(item) == 4:
 */
    __pyx_t_5 = PyObject_Length(__pyx_v_item); if (unlikely(__pyx_t_5 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 792; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_6 = (__pyx_t_5 == 3);
    if (__pyx_t_6) {

      /* "casuarius.pyx":793
 *                 variable, value = item
 *             elif len(item) == 3:
 *                 variable, value, strength = item             # <<<<<<<<<<<<<<
 *             elif len(item) == 4:
 *                 variable, value, strength, weight = item
 */
      if ((likely(PyTuple_CheckExact(__pyx_v_item))) || (PyList_CheckExact(__pyx_v_item))) {
        PyObject* sequence = __pyx_v_item;
        if (likely(PyTuple_CheckExact(sequence))) {
          if (unlikely(PyTuple_GET_SIZE(sequence) != 3)) {
            if (PyTuple_GET_SIZE(sequence) > 3) __Pyx_RaiseTooManyValuesError(3);
            else __Pyx_RaiseNeedMoreValuesError(PyTuple_GET_SIZE(sequence));
            {__pyx_filename = __pyx_f[0]; __pyx_lineno = 793; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          __pyx_t_7 = PyTuple_GET_ITEM(sequence, 0); 
          __pyx_t_11 = PyTuple_GET_ITEM(sequence, 1); 
          __pyx_t_4 = PyTuple_GET_ITEM(sequence, 2); 
        } else {
          if (unlikely(PyList_GET_SIZE(sequence) != 3)) {
            if (PyList_GET_SIZE(sequence) > 3) __Pyx_RaiseTooManyValuesError(3);
            else __Pyx_RaiseNeedMoreValuesError(PyList_GET_SIZE(sequence));
            {__pyx_filename = __pyx_f[0]; __pyx_lineno = 793; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          __pyx_t_7 = PyList_GET_ITEM(sequence, 0); 
          __pyx_t_11 = PyList_GET_ITEM(sequence, 1); 
          __pyx_t_4 = PyList_GET_ITEM(sequence, 2); 
        }
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_11);
        __Pyx_INCREF(__pyx_t_4);
      } else {
        Py_ssize_t index = -1;
        __pyx_t_8 = PyObject_GetIter(__pyx_v_item); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 793; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_8);
        __pyx_t_9 = Py_TYPE(__pyx_t_8)->tp_iternext;
        index = 0; __pyx_t_7 = __pyx_t_9(__pyx_t_8); if (unlikely(!__pyx_t_7)) goto __pyx_L17_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_7);
        index = 1; __pyx_t_11 = __pyx_t_9(__pyx_t_8); if (unlikely(!__pyx_t_11)) goto __pyx_L17_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_11);
        index = 2; __pyx_t_4 = __pyx_t_9(__pyx_t_8); if (unlikely(!__pyx_t_4)) goto __pyx_L17_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_4);
        if (__Pyx_IternextUnpackEndCheck(__pyx_t_9(__pyx_t_8), 3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 793; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        goto __pyx_L18_unpacking_done;
        __pyx_L17_unpacking_failed:;
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        if (PyErr_Occurred() && PyErr_ExceptionMatches(PyExc_StopIteration)) PyErr_Clear();
        if (!PyErr_Occurred()) __Pyx_RaiseNeedMoreValuesError(index);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 793; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_L18_unpacking_done:;
      }
      if (!(likely(((__pyx_t_7) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_7, __pyx_ptype_9casuarius_ConstraintVariable))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 793; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_13 = __pyx_PyFloat_AsDouble(__pyx_t_11); if (unlikely((__pyx_t_13 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 793; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      if (!(likely(((__pyx_t_4) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_4, __pyx_ptype_9casuarius_Strength))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 793; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_XDECREF(((PyObject *)__pyx_v_variable));
      __pyx_v_variable = ((struct __pyx_obj_9casuarius_ConstraintVariable *)__pyx_t_7);
      __pyx_t_7 = 0;
      __pyx_v_value = __pyx_t_13;
      __Pyx_DECREF(((PyObject *)__pyx_v_strength));
      __pyx_v_strength = ((struct __pyx_obj_9casuarius_Strength *)__pyx_t_4);
      __pyx_t_4 = 0;
      goto __pyx_L14;
    }

    /* "casuarius.pyx":794
 *             elif len(item) == 3:
 *                 variable, value, strength = item
 *             elif len(item) == 4:             # <<<<<<<<<<<<<<
 *                 variable, value, strength, weight = item
 *             self.solver.SuggestValue(deref(variable.variable), value)
 */
    __pyx_t_5 = PyObject_Length(__pyx_v_item); if (unlikely(__pyx_t_5 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 794; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_6 = (__pyx_t_5 == 4);
    if (__pyx_t_6) {

      /* "casuarius.pyx":795
 *                 variable, value, strength = item
 *             elif len(item) == 4:
 *                 variable, value, strength, weight = item             # <<<<<<<<<<<<<<
 *             self.solver.SuggestValue(deref(variable.variable), value)
 * 
 */
      if ((likely(PyTuple_CheckExact(__pyx_v_item))) || (PyList_CheckExact(__pyx_v_item))) {
        PyObject* sequence = __pyx_v_item;
        if (likely(PyTuple_CheckExact(sequence))) {
          if (unlikely(PyTuple_GET_SIZE(sequence) != 4)) {
            if (PyTuple_GET_SIZE(sequence) > 4) __Pyx_RaiseTooManyValuesError(4);
            else __Pyx_RaiseNeedMoreValuesError(PyTuple_GET_SIZE(sequence));
            {__pyx_filename = __pyx_f[0]; __pyx_lineno = 795; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          __pyx_t_4 = PyTuple_GET_ITEM(sequence, 0); 
          __pyx_t_11 = PyTuple_GET_ITEM(sequence, 1); 
          __pyx_t_7 = PyTuple_GET_ITEM(sequence, 2); 
          __pyx_t_8 = PyTuple_GET_ITEM(sequence, 3); 
        } else {
          if (unlikely(PyList_GET_SIZE(sequence) != 4)) {
            if (PyList_GET_SIZE(sequence) > 4) __Pyx_RaiseTooManyValuesError(4);
            else __Pyx_RaiseNeedMoreValuesError(PyList_GET_SIZE(sequence));
            {__pyx_filename = __pyx_f[0]; __pyx_lineno = 795; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          __pyx_t_4 = PyList_GET_ITEM(sequence, 0); 
          __pyx_t_11 = PyList_GET_ITEM(sequence, 1); 
          __pyx_t_7 = PyList_GET_ITEM(sequence, 2); 
          __pyx_t_8 = PyList_GET_ITEM(sequence, 3); 
        }
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_11);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_8);
      } else {
        Py_ssize_t index = -1;
        __pyx_t_12 = PyObject_GetIter(__pyx_v_item); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 795; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_12);
        __pyx_t_9 = Py_TYPE(__pyx_t_12)->tp_iternext;
        index = 0; __pyx_t_4 = __pyx_t_9(__pyx_t_12); if (unlikely(!__pyx_t_4)) goto __pyx_L19_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_4);
        index = 1; __pyx_t_11 = __pyx_t_9(__pyx_t_12); if (unlikely(!__pyx_t_11)) goto __pyx_L19_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_11);
        index = 2; __pyx_t_7 = __pyx_t_9(__pyx_t_12); if (unlikely(!__pyx_t_7)) goto __pyx_L19_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_7);
        index = 3; __pyx_t_8 = __pyx_t_9(__pyx_t_12); if (unlikely(!__pyx_t_8)) goto __pyx_L19_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_8);
        if (__Pyx_IternextUnpackEndCheck(__pyx_t_9(__pyx_t_12), 4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 795; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        goto __pyx_L20_unpacking_done;
        __pyx_L19_unpacking_failed:;
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        if (PyErr_Occurred() && PyErr_ExceptionMatches(PyExc_StopIteration)) PyErr_Clear();
        if (!PyErr_Occurred()) __Pyx_RaiseNeedMoreValuesError(index);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 795; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_L20_unpacking_done:;
      }
      if (!(likely(((__pyx_t_4) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_4, __pyx_ptype_9casuarius_ConstraintVariable))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 795; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_13 = __pyx_PyFloat_AsDouble(__pyx_t_11); if (unlikely((__pyx_t_13 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 795; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      if (!(likely(((__pyx_t_7) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_7, __pyx_ptype_9casuarius_Strength))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 795; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_10 = __pyx_PyFloat_AsDouble(__pyx_t_8); if (unlikely((__pyx_t_10 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 795; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_XDECREF(((PyObject *)__pyx_v_variable));
      __pyx_v_variable = ((struct __pyx_obj_9casuarius_ConstraintVariable *)__pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_v_value = __pyx_t_13;
      __Pyx_DECREF(((PyObject *)__pyx_v_strength));
      __pyx_v_strength = ((struct __pyx_obj_9casuarius_Strength *)__pyx_t_7);
      __pyx_t_7 = 0;
      __pyx_v_weight = __pyx_t_10;
      goto __pyx_L14;
    }
    __pyx_L14:;

    /* "casuarius.pyx":796
 *             elif len(item) == 4:
 *                 variable, value, strength, weight = item
 *             self.solver.SuggestValue(deref(variable.variable), value)             # <<<<<<<<<<<<<<
 * 
 *         self.solver.Resolve()
 */
    if (unlikely(!__pyx_v_variable)) { __Pyx_RaiseUnboundLocalError("variable"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 796; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
    try {__pyx_v_self->solver->SuggestValue((*__pyx_v_variable->variable), __pyx_v_value);} catch(...) {__pyx_f_9casuarius_raise_cassowary_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception."); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 796; __pyx_clineno = __LINE__; goto __pyx_L1_error;}}
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "casuarius.pyx":798
 *             self.solver.SuggestValue(deref(variable.variable), value)
 * 
 *         self.solver.Resolve()             # <<<<<<<<<<<<<<
 * 
 *     cdef _end_edit(self):
 */
  try {__pyx_v_self->solver->Resolve();} catch(...) {__pyx_f_9casuarius_raise_cassowary_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception."); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}}

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_AddTraceback("casuarius.Solver._begin_edit_suggest_values", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_variable);
  __Pyx_XDECREF((PyObject *)__pyx_v_strength);
  __Pyx_XDECREF(__pyx_v_item);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":800
 *         self.solver.Resolve()
 * 
 *     cdef _end_edit(self):             # <<<<<<<<<<<<<<
 *         self.solver.EndEdit()
 * 
 */

static PyObject *__pyx_f_9casuarius_6Solver__end_edit(struct __pyx_obj_9casuarius_Solver *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_end_edit", 0);

  /* "casuarius.pyx":801
 * 
 *     cdef _end_edit(self):
 *         self.solver.EndEdit()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  try {__pyx_v_self->solver->EndEdit();} catch(...) {__pyx_f_9casuarius_raise_cassowary_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception."); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 801; __pyx_clineno = __LINE__; goto __pyx_L1_error;}}

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("casuarius.Solver._end_edit", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9casuarius_17SolverEditContext_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9casuarius_17SolverEditContext_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_solver = 0;
  PyObject *__pyx_v_suggest_var_vals = 0;
  struct __pyx_obj_9casuarius_Strength *__pyx_v_default_strength = 0;
  double __pyx_v_default_weight;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__solver,&__pyx_n_s__suggest_var_vals,&__pyx_n_s__default_strength,&__pyx_n_s__default_weight,0};
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    PyObject* values[4] = {0,0,0,0};
    values[2] = (PyObject *)__pyx_k_56;
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__solver);
        if (likely(values[0])) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__suggest_var_vals);
        if (likely(values[1])) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 812; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__default_strength);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__default_weight);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 812; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      if (values[3]) {
      } else {

        /* "casuarius.pyx":813
 * 
 *     def __cinit__(self, solver, suggest_var_vals,
 *         Strength default_strength=strong, double default_weight=1.0):             # <<<<<<<<<<<<<<
 *         self.solver = solver
 *         self.suggest_var_vals = suggest_var_vals
 */
        __pyx_v_default_weight = ((double)1.0);
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_solver = values[0];
    __pyx_v_suggest_var_vals = values[1];
    __pyx_v_default_strength = ((struct __pyx_obj_9casuarius_Strength *)values[2]);
    if (values[3]) {
      __pyx_v_default_weight = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_default_weight == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 813; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_default_weight = ((double)1.0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 812; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("casuarius.SolverEditContext.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_default_strength), __pyx_ptype_9casuarius_Strength, 1, "default_strength", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 813; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_9casuarius_17SolverEditContext___cinit__(((struct __pyx_obj_9casuarius_SolverEditContext *)__pyx_v_self), __pyx_v_solver, __pyx_v_suggest_var_vals, __pyx_v_default_strength, __pyx_v_default_weight);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":812
 *     cdef public double default_weight
 * 
 *     def __cinit__(self, solver, suggest_var_vals,             # <<<<<<<<<<<<<<
 *         Strength default_strength=strong, double default_weight=1.0):
 *         self.solver = solver
 */

static int __pyx_pf_9casuarius_17SolverEditContext___cinit__(struct __pyx_obj_9casuarius_SolverEditContext *__pyx_v_self, PyObject *__pyx_v_solver, PyObject *__pyx_v_suggest_var_vals, struct __pyx_obj_9casuarius_Strength *__pyx_v_default_strength, double __pyx_v_default_weight) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "casuarius.pyx":814
 *     def __cinit__(self, solver, suggest_var_vals,
 *         Strength default_strength=strong, double default_weight=1.0):
 *         self.solver = solver             # <<<<<<<<<<<<<<
 *         self.suggest_var_vals = suggest_var_vals
 *         self.default_strength = default_strength
 */
  if (!(likely(((__pyx_v_solver) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_solver, __pyx_ptype_9casuarius_Solver))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 814; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_INCREF(__pyx_v_solver);
  __Pyx_GIVEREF(__pyx_v_solver);
  __Pyx_GOTREF(__pyx_v_self->solver);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->solver));
  __pyx_v_self->solver = ((struct __pyx_obj_9casuarius_Solver *)__pyx_v_solver);

  /* "casuarius.pyx":815
 *         Strength default_strength=strong, double default_weight=1.0):
 *         self.solver = solver
 *         self.suggest_var_vals = suggest_var_vals             # <<<<<<<<<<<<<<
 *         self.default_strength = default_strength
 *         self.default_weight = default_weight
 */
  __Pyx_INCREF(__pyx_v_suggest_var_vals);
  __Pyx_GIVEREF(__pyx_v_suggest_var_vals);
  __Pyx_GOTREF(__pyx_v_self->suggest_var_vals);
  __Pyx_DECREF(__pyx_v_self->suggest_var_vals);
  __pyx_v_self->suggest_var_vals = __pyx_v_suggest_var_vals;

  /* "casuarius.pyx":816
 *         self.solver = solver
 *         self.suggest_var_vals = suggest_var_vals
 *         self.default_strength = default_strength             # <<<<<<<<<<<<<<
 *         self.default_weight = default_weight
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_default_strength));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_default_strength));
  __Pyx_GOTREF(__pyx_v_self->default_strength);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->default_strength));
  __pyx_v_self->default_strength = __pyx_v_default_strength;

  /* "casuarius.pyx":817
 *         self.suggest_var_vals = suggest_var_vals
 *         self.default_strength = default_strength
 *         self.default_weight = default_weight             # <<<<<<<<<<<<<<
 * 
 *     def __enter__(self):
 */
  __pyx_v_self->default_weight = __pyx_v_default_weight;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("casuarius.SolverEditContext.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_17SolverEditContext_3__enter__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9casuarius_17SolverEditContext_3__enter__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__enter__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_17SolverEditContext_2__enter__(((struct __pyx_obj_9casuarius_SolverEditContext *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":819
 *         self.default_weight = default_weight
 * 
 *     def __enter__(self):             # <<<<<<<<<<<<<<
 *         self.solver._begin_edit_suggest_values(self.suggest_var_vals, self.default_strength, self.default_weight)
 * 
 */

static PyObject *__pyx_pf_9casuarius_17SolverEditContext_2__enter__(struct __pyx_obj_9casuarius_SolverEditContext *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  struct __pyx_opt_args_9casuarius_6Solver__begin_edit_suggest_values __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__enter__", 0);

  /* "casuarius.pyx":820
 * 
 *     def __enter__(self):
 *         self.solver._begin_edit_suggest_values(self.suggest_var_vals, self.default_strength, self.default_weight)             # <<<<<<<<<<<<<<
 * 
 *     def __exit__(self, exc_type, exc_val, exc_tb):
 */
  __pyx_t_1 = __pyx_v_self->suggest_var_vals;
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = ((PyObject *)__pyx_v_self->default_strength);
  __Pyx_INCREF(__pyx_t_2);
  __pyx_t_4.__pyx_n = 2;
  __pyx_t_4.default_strength = ((struct __pyx_obj_9casuarius_Strength *)__pyx_t_2);
  __pyx_t_4.default_weight = __pyx_v_self->default_weight;
  __pyx_t_3 = ((struct __pyx_vtabstruct_9casuarius_Solver *)__pyx_v_self->solver->__pyx_vtab)->_begin_edit_suggest_values(__pyx_v_self->solver, __pyx_t_1, &__pyx_t_4); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 820; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("casuarius.SolverEditContext.__enter__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_17SolverEditContext_5__exit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_9casuarius_17SolverEditContext_5__exit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED PyObject *__pyx_v_exc_type = 0;
  CYTHON_UNUSED PyObject *__pyx_v_exc_val = 0;
  CYTHON_UNUSED PyObject *__pyx_v_exc_tb = 0;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__exc_type,&__pyx_n_s__exc_val,&__pyx_n_s__exc_tb,0};
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__exit__ (wrapper)", 0);
  {
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__exc_type);
        if (likely(values[0])) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__exc_val);
        if (likely(values[1])) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__exit__", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 822; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__exc_tb);
        if (likely(values[2])) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__exit__", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 822; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__exit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 822; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_exc_type = values[0];
    __pyx_v_exc_val = values[1];
    __pyx_v_exc_tb = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__exit__", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 822; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("casuarius.SolverEditContext.__exit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9casuarius_17SolverEditContext_4__exit__(((struct __pyx_obj_9casuarius_SolverEditContext *)__pyx_v_self), __pyx_v_exc_type, __pyx_v_exc_val, __pyx_v_exc_tb);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":822
 *         self.solver._begin_edit_suggest_values(self.suggest_var_vals, self.default_strength, self.default_weight)
 * 
 *     def __exit__(self, exc_type, exc_val, exc_tb):             # <<<<<<<<<<<<<<
 *         self.solver._end_edit()
 */

static PyObject *__pyx_pf_9casuarius_17SolverEditContext_4__exit__(struct __pyx_obj_9casuarius_SolverEditContext *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_exc_type, CYTHON_UNUSED PyObject *__pyx_v_exc_val, CYTHON_UNUSED PyObject *__pyx_v_exc_tb) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__exit__", 0);

  /* "casuarius.pyx":823
 * 
 *     def __exit__(self, exc_type, exc_val, exc_tb):
 *         self.solver._end_edit()             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_9casuarius_Solver *)__pyx_v_self->solver->__pyx_vtab)->_end_edit(__pyx_v_self->solver); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 823; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("casuarius.SolverEditContext.__exit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_17SolverEditContext_6solver_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9casuarius_17SolverEditContext_6solver_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_17SolverEditContext_6solver___get__(((struct __pyx_obj_9casuarius_SolverEditContext *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":807
 *     """ Context manager for suggesting variables in a solver.
 *     """
 *     cdef public Solver solver             # <<<<<<<<<<<<<<
 *     cdef public suggest_var_vals
 *     cdef public Strength default_strength
 */

static PyObject *__pyx_pf_9casuarius_17SolverEditContext_6solver___get__(struct __pyx_obj_9casuarius_SolverEditContext *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->solver));
  __pyx_r = ((PyObject *)__pyx_v_self->solver);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9casuarius_17SolverEditContext_6solver_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9casuarius_17SolverEditContext_6solver_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_17SolverEditContext_6solver_2__set__(((struct __pyx_obj_9casuarius_SolverEditContext *)__pyx_v_self), ((PyObject *)__pyx_v_value));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9casuarius_17SolverEditContext_6solver_2__set__(struct __pyx_obj_9casuarius_SolverEditContext *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(((__pyx_v_value) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_value, __pyx_ptype_9casuarius_Solver))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 807; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->solver);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->solver));
  __pyx_v_self->solver = ((struct __pyx_obj_9casuarius_Solver *)__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("casuarius.SolverEditContext.solver.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9casuarius_17SolverEditContext_6solver_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9casuarius_17SolverEditContext_6solver_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_17SolverEditContext_6solver_4__del__(((struct __pyx_obj_9casuarius_SolverEditContext *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9casuarius_17SolverEditContext_6solver_4__del__(struct __pyx_obj_9casuarius_SolverEditContext *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->solver);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->solver));
  __pyx_v_self->solver = ((struct __pyx_obj_9casuarius_Solver *)Py_None);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_17SolverEditContext_16suggest_var_vals_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9casuarius_17SolverEditContext_16suggest_var_vals_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_17SolverEditContext_16suggest_var_vals___get__(((struct __pyx_obj_9casuarius_SolverEditContext *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":808
 *     """
 *     cdef public Solver solver
 *     cdef public suggest_var_vals             # <<<<<<<<<<<<<<
 *     cdef public Strength default_strength
 *     cdef public double default_weight
 */

static PyObject *__pyx_pf_9casuarius_17SolverEditContext_16suggest_var_vals___get__(struct __pyx_obj_9casuarius_SolverEditContext *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->suggest_var_vals);
  __pyx_r = __pyx_v_self->suggest_var_vals;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9casuarius_17SolverEditContext_16suggest_var_vals_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9casuarius_17SolverEditContext_16suggest_var_vals_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_17SolverEditContext_16suggest_var_vals_2__set__(((struct __pyx_obj_9casuarius_SolverEditContext *)__pyx_v_self), ((PyObject *)__pyx_v_value));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9casuarius_17SolverEditContext_16suggest_var_vals_2__set__(struct __pyx_obj_9casuarius_SolverEditContext *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->suggest_var_vals);
  __Pyx_DECREF(__pyx_v_self->suggest_var_vals);
  __pyx_v_self->suggest_var_vals = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9casuarius_17SolverEditContext_16suggest_var_vals_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9casuarius_17SolverEditContext_16suggest_var_vals_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_17SolverEditContext_16suggest_var_vals_4__del__(((struct __pyx_obj_9casuarius_SolverEditContext *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9casuarius_17SolverEditContext_16suggest_var_vals_4__del__(struct __pyx_obj_9casuarius_SolverEditContext *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->suggest_var_vals);
  __Pyx_DECREF(__pyx_v_self->suggest_var_vals);
  __pyx_v_self->suggest_var_vals = Py_None;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_17SolverEditContext_16default_strength_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9casuarius_17SolverEditContext_16default_strength_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_17SolverEditContext_16default_strength___get__(((struct __pyx_obj_9casuarius_SolverEditContext *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":809
 *     cdef public Solver solver
 *     cdef public suggest_var_vals
 *     cdef public Strength default_strength             # <<<<<<<<<<<<<<
 *     cdef public double default_weight
 * 
 */

static PyObject *__pyx_pf_9casuarius_17SolverEditContext_16default_strength___get__(struct __pyx_obj_9casuarius_SolverEditContext *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->default_strength));
  __pyx_r = ((PyObject *)__pyx_v_self->default_strength);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9casuarius_17SolverEditContext_16default_strength_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9casuarius_17SolverEditContext_16default_strength_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_17SolverEditContext_16default_strength_2__set__(((struct __pyx_obj_9casuarius_SolverEditContext *)__pyx_v_self), ((PyObject *)__pyx_v_value));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9casuarius_17SolverEditContext_16default_strength_2__set__(struct __pyx_obj_9casuarius_SolverEditContext *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(((__pyx_v_value) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_value, __pyx_ptype_9casuarius_Strength))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 809; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->default_strength);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->default_strength));
  __pyx_v_self->default_strength = ((struct __pyx_obj_9casuarius_Strength *)__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("casuarius.SolverEditContext.default_strength.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9casuarius_17SolverEditContext_16default_strength_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9casuarius_17SolverEditContext_16default_strength_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_17SolverEditContext_16default_strength_4__del__(((struct __pyx_obj_9casuarius_SolverEditContext *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9casuarius_17SolverEditContext_16default_strength_4__del__(struct __pyx_obj_9casuarius_SolverEditContext *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->default_strength);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->default_strength));
  __pyx_v_self->default_strength = ((struct __pyx_obj_9casuarius_Strength *)Py_None);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9casuarius_17SolverEditContext_14default_weight_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9casuarius_17SolverEditContext_14default_weight_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_17SolverEditContext_14default_weight___get__(((struct __pyx_obj_9casuarius_SolverEditContext *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "casuarius.pyx":810
 *     cdef public suggest_var_vals
 *     cdef public Strength default_strength
 *     cdef public double default_weight             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, solver, suggest_var_vals,
 */

static PyObject *__pyx_pf_9casuarius_17SolverEditContext_14default_weight___get__(struct __pyx_obj_9casuarius_SolverEditContext *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->default_weight); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 810; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("casuarius.SolverEditContext.default_weight.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9casuarius_17SolverEditContext_14default_weight_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9casuarius_17SolverEditContext_14default_weight_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9casuarius_17SolverEditContext_14default_weight_2__set__(((struct __pyx_obj_9casuarius_SolverEditContext *)__pyx_v_self), ((PyObject *)__pyx_v_value));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9casuarius_17SolverEditContext_14default_weight_2__set__(struct __pyx_obj_9casuarius_SolverEditContext *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 810; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->default_weight = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("casuarius.SolverEditContext.default_weight.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_tp_new_9casuarius_SymbolicWeight(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9casuarius_SymbolicWeight *p;
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  p = ((struct __pyx_obj_9casuarius_SymbolicWeight *)o);
  p->weights = ((PyObject*)Py_None); Py_INCREF(Py_None);
  if (__pyx_pw_9casuarius_14SymbolicWeight_1__cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_9casuarius_SymbolicWeight(PyObject *o) {
  struct __pyx_obj_9casuarius_SymbolicWeight *p = (struct __pyx_obj_9casuarius_SymbolicWeight *)o;
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_9casuarius_14SymbolicWeight_3__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_XDECREF(((PyObject *)p->weights));
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_9casuarius_SymbolicWeight(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9casuarius_SymbolicWeight *p = (struct __pyx_obj_9casuarius_SymbolicWeight *)o;
  if (p->weights) {
    e = (*v)(p->weights, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9casuarius_SymbolicWeight(PyObject *o) {
  struct __pyx_obj_9casuarius_SymbolicWeight *p = (struct __pyx_obj_9casuarius_SymbolicWeight *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->weights);
  p->weights = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_9casuarius_14SymbolicWeight_weights(PyObject *o, void *x) {
  return __pyx_pw_9casuarius_14SymbolicWeight_7weights_1__get__(o);
}

static PyMethodDef __pyx_methods_9casuarius_SymbolicWeight[] = {
  {__Pyx_NAMESTR("__rmul__"), (PyCFunction)__pyx_pw_9casuarius_14SymbolicWeight_9__rmul__, METH_O, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9casuarius_SymbolicWeight[] = {
  {(char *)"weights", __pyx_getprop_9casuarius_14SymbolicWeight_weights, 0, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_SymbolicWeight = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  __pyx_pw_9casuarius_14SymbolicWeight_7__mul__, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  __pyx_pw_9casuarius_14SymbolicWeight_5__float__, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_SymbolicWeight = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_SymbolicWeight = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_SymbolicWeight = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_9casuarius_SymbolicWeight = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("casuarius.SymbolicWeight"), /*tp_name*/
  sizeof(struct __pyx_obj_9casuarius_SymbolicWeight), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9casuarius_SymbolicWeight, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  __pyx_pw_9casuarius_14SymbolicWeight_11__repr__, /*tp_repr*/
  &__pyx_tp_as_number_SymbolicWeight, /*tp_as_number*/
  &__pyx_tp_as_sequence_SymbolicWeight, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_SymbolicWeight, /*tp_as_mapping*/
  __pyx_pw_9casuarius_14SymbolicWeight_13__hash__, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_SymbolicWeight, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9casuarius_SymbolicWeight, /*tp_traverse*/
  __pyx_tp_clear_9casuarius_SymbolicWeight, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9casuarius_SymbolicWeight, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9casuarius_SymbolicWeight, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9casuarius_SymbolicWeight, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_9casuarius_Strength(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9casuarius_Strength *p;
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  p = ((struct __pyx_obj_9casuarius_Strength *)o);
  p->name = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->symbolic_weight = ((struct __pyx_obj_9casuarius_SymbolicWeight *)Py_None); Py_INCREF(Py_None);
  if (__pyx_pw_9casuarius_8Strength_1__cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_9casuarius_Strength(PyObject *o) {
  struct __pyx_obj_9casuarius_Strength *p = (struct __pyx_obj_9casuarius_Strength *)o;
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_9casuarius_8Strength_3__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_XDECREF(((PyObject *)p->name));
  Py_XDECREF(((PyObject *)p->symbolic_weight));
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_9casuarius_Strength(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9casuarius_Strength *p = (struct __pyx_obj_9casuarius_Strength *)o;
  if (p->name) {
    e = (*v)(p->name, a); if (e) return e;
  }
  if (p->symbolic_weight) {
    e = (*v)(((PyObject*)p->symbolic_weight), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9casuarius_Strength(PyObject *o) {
  struct __pyx_obj_9casuarius_Strength *p = (struct __pyx_obj_9casuarius_Strength *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->name);
  p->name = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->symbolic_weight);
  p->symbolic_weight = ((struct __pyx_obj_9casuarius_SymbolicWeight *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_9casuarius_8Strength_name(PyObject *o, void *x) {
  return __pyx_pw_9casuarius_8Strength_4name_1__get__(o);
}

static PyObject *__pyx_getprop_9casuarius_8Strength_symbolic_weight(PyObject *o, void *x) {
  return __pyx_pw_9casuarius_8Strength_15symbolic_weight_1__get__(o);
}

static PyObject *__pyx_getprop_9casuarius_8Strength_is_required(PyObject *o, void *x) {
  return __pyx_pw_9casuarius_8Strength_11is_required_1__get__(o);
}

static PyMethodDef __pyx_methods_9casuarius_Strength[] = {
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9casuarius_Strength[] = {
  {(char *)"name", __pyx_getprop_9casuarius_8Strength_name, 0, 0, 0},
  {(char *)"symbolic_weight", __pyx_getprop_9casuarius_8Strength_symbolic_weight, 0, 0, 0},
  {(char *)"is_required", __pyx_getprop_9casuarius_8Strength_is_required, 0, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Strength = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Strength = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Strength = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Strength = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_9casuarius_Strength = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("casuarius.Strength"), /*tp_name*/
  sizeof(struct __pyx_obj_9casuarius_Strength), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9casuarius_Strength, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  __pyx_pw_9casuarius_8Strength_5__repr__, /*tp_repr*/
  &__pyx_tp_as_number_Strength, /*tp_as_number*/
  &__pyx_tp_as_sequence_Strength, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Strength, /*tp_as_mapping*/
  __pyx_pw_9casuarius_8Strength_9__hash__, /*tp_hash*/
  0, /*tp_call*/
  __pyx_pw_9casuarius_8Strength_7__str__, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Strength, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9casuarius_Strength, /*tp_traverse*/
  __pyx_tp_clear_9casuarius_Strength, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9casuarius_Strength, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9casuarius_Strength, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9casuarius_Strength, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};
static struct __pyx_vtabstruct_9casuarius_LinearSymbolic __pyx_vtable_9casuarius_LinearSymbolic;

static PyObject *__pyx_tp_new_9casuarius_LinearSymbolic(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9casuarius_LinearSymbolic *p;
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  p = ((struct __pyx_obj_9casuarius_LinearSymbolic *)o);
  p->__pyx_vtab = __pyx_vtabptr_9casuarius_LinearSymbolic;
  return o;
}

static void __pyx_tp_dealloc_9casuarius_LinearSymbolic(PyObject *o) {
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_9casuarius_LinearSymbolic[] = {
  {__Pyx_NAMESTR("nonlinear"), (PyCFunction)__pyx_pw_9casuarius_14LinearSymbolic_1nonlinear, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("nonlinear_op"), (PyCFunction)__pyx_pw_9casuarius_14LinearSymbolic_3nonlinear_op, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("convert_to_csw"), (PyCFunction)__pyx_pw_9casuarius_14LinearSymbolic_5convert_to_csw, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("_richcmp_le"), (PyCFunction)__pyx_pw_9casuarius_14LinearSymbolic_39_richcmp_le, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("_richcmp_ge"), (PyCFunction)__pyx_pw_9casuarius_14LinearSymbolic_41_richcmp_ge, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("_richcmp_eq"), (PyCFunction)__pyx_pw_9casuarius_14LinearSymbolic_43_richcmp_eq, METH_O, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_LinearSymbolic = {
  __pyx_pw_9casuarius_14LinearSymbolic_9__add__, /*nb_add*/
  __pyx_pw_9casuarius_14LinearSymbolic_17__sub__, /*nb_subtract*/
  __pyx_pw_9casuarius_14LinearSymbolic_11__mul__, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  __pyx_pw_9casuarius_14LinearSymbolic_13__div__, /*nb_divide*/
  #endif
  __pyx_pw_9casuarius_14LinearSymbolic_21__mod__, /*nb_remainder*/
  __pyx_pw_9casuarius_14LinearSymbolic_23__divmod__, /*nb_divmod*/
  __pyx_pw_9casuarius_14LinearSymbolic_25__pow__, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  __pyx_pw_9casuarius_14LinearSymbolic_27__lshift__, /*nb_lshift*/
  __pyx_pw_9casuarius_14LinearSymbolic_29__rshift__, /*nb_rshift*/
  __pyx_pw_9casuarius_14LinearSymbolic_31__and__, /*nb_and*/
  __pyx_pw_9casuarius_14LinearSymbolic_35__xor__, /*nb_xor*/
  __pyx_pw_9casuarius_14LinearSymbolic_33__or__, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  __pyx_pw_9casuarius_14LinearSymbolic_19__floordiv__, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_LinearSymbolic = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_LinearSymbolic = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_LinearSymbolic = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_9casuarius_LinearSymbolic = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("casuarius.LinearSymbolic"), /*tp_name*/
  sizeof(struct __pyx_obj_9casuarius_LinearSymbolic), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9casuarius_LinearSymbolic, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  __pyx_pw_9casuarius_14LinearSymbolic_7__repr__, /*tp_repr*/
  &__pyx_tp_as_number_LinearSymbolic, /*tp_as_number*/
  &__pyx_tp_as_sequence_LinearSymbolic, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_LinearSymbolic, /*tp_as_mapping*/
  __pyx_pw_9casuarius_14LinearSymbolic_45__hash__, /*tp_hash*/
  0, /*tp_call*/
  __pyx_pw_9casuarius_14LinearSymbolic_15__str__, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_LinearSymbolic, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  __pyx_pw_9casuarius_14LinearSymbolic_37__richcmp__, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9casuarius_LinearSymbolic, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9casuarius_LinearSymbolic, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};
static struct __pyx_vtabstruct_9casuarius_ConstraintVariable __pyx_vtable_9casuarius_ConstraintVariable;

static PyObject *__pyx_tp_new_9casuarius_ConstraintVariable(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9casuarius_ConstraintVariable *p;
  PyObject *o = __pyx_tp_new_9casuarius_LinearSymbolic(t, a, k);
  if (!o) return 0;
  p = ((struct __pyx_obj_9casuarius_ConstraintVariable *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9casuarius_LinearSymbolic*)__pyx_vtabptr_9casuarius_ConstraintVariable;
  p->name = ((PyObject*)Py_None); Py_INCREF(Py_None);
  if (__pyx_pw_9casuarius_18ConstraintVariable_1__cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_9casuarius_ConstraintVariable(PyObject *o) {
  struct __pyx_obj_9casuarius_ConstraintVariable *p = (struct __pyx_obj_9casuarius_ConstraintVariable *)o;
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_9casuarius_18ConstraintVariable_3__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_XDECREF(((PyObject *)p->name));
  __pyx_tp_dealloc_9casuarius_LinearSymbolic(o);
}

static int __pyx_tp_traverse_9casuarius_ConstraintVariable(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9casuarius_ConstraintVariable *p = (struct __pyx_obj_9casuarius_ConstraintVariable *)o;
  if (__pyx_ptype_9casuarius_LinearSymbolic->tp_traverse) {
    e = __pyx_ptype_9casuarius_LinearSymbolic->tp_traverse(o, v, a); if (e) return e;
  }
  if (p->name) {
    e = (*v)(p->name, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9casuarius_ConstraintVariable(PyObject *o) {
  struct __pyx_obj_9casuarius_ConstraintVariable *p = (struct __pyx_obj_9casuarius_ConstraintVariable *)o;
  PyObject* tmp;
  if (__pyx_ptype_9casuarius_LinearSymbolic->tp_clear) {
    __pyx_ptype_9casuarius_LinearSymbolic->tp_clear(o);
  }
  tmp = ((PyObject*)p->name);
  p->name = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_9casuarius_18ConstraintVariable_value(PyObject *o, void *x) {
  return __pyx_pw_9casuarius_18ConstraintVariable_5value_1__get__(o);
}

static PyObject *__pyx_getprop_9casuarius_18ConstraintVariable_name(PyObject *o, void *x) {
  return __pyx_pw_9casuarius_18ConstraintVariable_4name_1__get__(o);
}

static PyMethodDef __pyx_methods_9casuarius_ConstraintVariable[] = {
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9casuarius_ConstraintVariable[] = {
  {(char *)"value", __pyx_getprop_9casuarius_18ConstraintVariable_value, 0, 0, 0},
  {(char *)"name", __pyx_getprop_9casuarius_18ConstraintVariable_name, 0, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_ConstraintVariable = {
  __pyx_pw_9casuarius_18ConstraintVariable_9__add__, /*nb_add*/
  0, /*nb_subtract*/
  __pyx_pw_9casuarius_18ConstraintVariable_11__mul__, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  __pyx_pw_9casuarius_18ConstraintVariable_13__div__, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_ConstraintVariable = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_ConstraintVariable = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_ConstraintVariable = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_9casuarius_ConstraintVariable = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("casuarius.ConstraintVariable"), /*tp_name*/
  sizeof(struct __pyx_obj_9casuarius_ConstraintVariable), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9casuarius_ConstraintVariable, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  __pyx_pw_9casuarius_18ConstraintVariable_5__repr__, /*tp_repr*/
  &__pyx_tp_as_number_ConstraintVariable, /*tp_as_number*/
  &__pyx_tp_as_sequence_ConstraintVariable, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_ConstraintVariable, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  __pyx_pw_9casuarius_18ConstraintVariable_7__str__, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_ConstraintVariable, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9casuarius_ConstraintVariable, /*tp_traverse*/
  __pyx_tp_clear_9casuarius_ConstraintVariable, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9casuarius_ConstraintVariable, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9casuarius_ConstraintVariable, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9casuarius_ConstraintVariable, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};
static struct __pyx_vtabstruct_9casuarius_Term __pyx_vtable_9casuarius_Term;

static PyObject *__pyx_tp_new_9casuarius_Term(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9casuarius_Term *p;
  PyObject *o = __pyx_tp_new_9casuarius_LinearSymbolic(t, a, k);
  if (!o) return 0;
  p = ((struct __pyx_obj_9casuarius_Term *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9casuarius_LinearSymbolic*)__pyx_vtabptr_9casuarius_Term;
  p->var = ((struct __pyx_obj_9casuarius_ConstraintVariable *)Py_None); Py_INCREF(Py_None);
  if (__pyx_pw_9casuarius_4Term_1__cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_9casuarius_Term(PyObject *o) {
  struct __pyx_obj_9casuarius_Term *p = (struct __pyx_obj_9casuarius_Term *)o;
  Py_XDECREF(((PyObject *)p->var));
  __pyx_tp_dealloc_9casuarius_LinearSymbolic(o);
}

static int __pyx_tp_traverse_9casuarius_Term(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9casuarius_Term *p = (struct __pyx_obj_9casuarius_Term *)o;
  if (__pyx_ptype_9casuarius_LinearSymbolic->tp_traverse) {
    e = __pyx_ptype_9casuarius_LinearSymbolic->tp_traverse(o, v, a); if (e) return e;
  }
  if (p->var) {
    e = (*v)(((PyObject*)p->var), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9casuarius_Term(PyObject *o) {
  struct __pyx_obj_9casuarius_Term *p = (struct __pyx_obj_9casuarius_Term *)o;
  PyObject* tmp;
  if (__pyx_ptype_9casuarius_LinearSymbolic->tp_clear) {
    __pyx_ptype_9casuarius_LinearSymbolic->tp_clear(o);
  }
  tmp = ((PyObject*)p->var);
  p->var = ((struct __pyx_obj_9casuarius_ConstraintVariable *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_9casuarius_4Term_var(PyObject *o, void *x) {
  return __pyx_pw_9casuarius_4Term_3var_1__get__(o);
}

static int __pyx_setprop_9casuarius_4Term_var(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pw_9casuarius_4Term_3var_3__set__(o, v);
  }
  else {
    return __pyx_pw_9casuarius_4Term_3var_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9casuarius_4Term_coeff(PyObject *o, void *x) {
  return __pyx_pw_9casuarius_4Term_5coeff_1__get__(o);
}

static int __pyx_setprop_9casuarius_4Term_coeff(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pw_9casuarius_4Term_5coeff_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_9casuarius_Term[] = {
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9casuarius_Term[] = {
  {(char *)"var", __pyx_getprop_9casuarius_4Term_var, __pyx_setprop_9casuarius_4Term_var, 0, 0},
  {(char *)"coeff", __pyx_getprop_9casuarius_4Term_coeff, __pyx_setprop_9casuarius_4Term_coeff, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Term = {
  __pyx_pw_9casuarius_4Term_7__add__, /*nb_add*/
  0, /*nb_subtract*/
  __pyx_pw_9casuarius_4Term_9__mul__, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  __pyx_pw_9casuarius_4Term_11__div__, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Term = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Term = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Term = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_9casuarius_Term = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("casuarius.Term"), /*tp_name*/
  sizeof(struct __pyx_obj_9casuarius_Term), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9casuarius_Term, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  __pyx_pw_9casuarius_4Term_3__repr__, /*tp_repr*/
  &__pyx_tp_as_number_Term, /*tp_as_number*/
  &__pyx_tp_as_sequence_Term, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Term, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  __pyx_pw_9casuarius_4Term_5__str__, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Term, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9casuarius_Term, /*tp_traverse*/
  __pyx_tp_clear_9casuarius_Term, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9casuarius_Term, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9casuarius_Term, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9casuarius_Term, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};
static struct __pyx_vtabstruct_9casuarius_LinearExpression __pyx_vtable_9casuarius_LinearExpression;

static PyObject *__pyx_tp_new_9casuarius_LinearExpression(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9casuarius_LinearExpression *p;
  PyObject *o = __pyx_tp_new_9casuarius_LinearSymbolic(t, a, k);
  if (!o) return 0;
  p = ((struct __pyx_obj_9casuarius_LinearExpression *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9casuarius_LinearSymbolic*)__pyx_vtabptr_9casuarius_LinearExpression;
  p->terms = ((PyObject*)Py_None); Py_INCREF(Py_None);
  if (__pyx_pw_9casuarius_16LinearExpression_3__cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_9casuarius_LinearExpression(PyObject *o) {
  struct __pyx_obj_9casuarius_LinearExpression *p = (struct __pyx_obj_9casuarius_LinearExpression *)o;
  Py_XDECREF(((PyObject *)p->terms));
  __pyx_tp_dealloc_9casuarius_LinearSymbolic(o);
}

static int __pyx_tp_traverse_9casuarius_LinearExpression(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9casuarius_LinearExpression *p = (struct __pyx_obj_9casuarius_LinearExpression *)o;
  if (__pyx_ptype_9casuarius_LinearSymbolic->tp_traverse) {
    e = __pyx_ptype_9casuarius_LinearSymbolic->tp_traverse(o, v, a); if (e) return e;
  }
  if (p->terms) {
    e = (*v)(p->terms, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9casuarius_LinearExpression(PyObject *o) {
  struct __pyx_obj_9casuarius_LinearExpression *p = (struct __pyx_obj_9casuarius_LinearExpression *)o;
  PyObject* tmp;
  if (__pyx_ptype_9casuarius_LinearSymbolic->tp_clear) {
    __pyx_ptype_9casuarius_LinearSymbolic->tp_clear(o);
  }
  tmp = ((PyObject*)p->terms);
  p->terms = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_9casuarius_16LinearExpression_value(PyObject *o, void *x) {
  return __pyx_pw_9casuarius_16LinearExpression_5value_1__get__(o);
}

static PyObject *__pyx_getprop_9casuarius_16LinearExpression_terms(PyObject *o, void *x) {
  return __pyx_pw_9casuarius_16LinearExpression_5terms_1__get__(o);
}

static int __pyx_setprop_9casuarius_16LinearExpression_terms(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pw_9casuarius_16LinearExpression_5terms_3__set__(o, v);
  }
  else {
    return __pyx_pw_9casuarius_16LinearExpression_5terms_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9casuarius_16LinearExpression_constant(PyObject *o, void *x) {
  return __pyx_pw_9casuarius_16LinearExpression_8constant_1__get__(o);
}

static int __pyx_setprop_9casuarius_16LinearExpression_constant(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pw_9casuarius_16LinearExpression_8constant_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_9casuarius_LinearExpression[] = {
  {__Pyx_NAMESTR("reduce_terms"), (PyCFunction)__pyx_pw_9casuarius_16LinearExpression_1reduce_terms, METH_O, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9casuarius_LinearExpression[] = {
  {(char *)"value", __pyx_getprop_9casuarius_16LinearExpression_value, 0, 0, 0},
  {(char *)"terms", __pyx_getprop_9casuarius_16LinearExpression_terms, __pyx_setprop_9casuarius_16LinearExpression_terms, 0, 0},
  {(char *)"constant", __pyx_getprop_9casuarius_16LinearExpression_constant, __pyx_setprop_9casuarius_16LinearExpression_constant, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_LinearExpression = {
  __pyx_pw_9casuarius_16LinearExpression_7__add__, /*nb_add*/
  0, /*nb_subtract*/
  __pyx_pw_9casuarius_16LinearExpression_9__mul__, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  __pyx_pw_9casuarius_16LinearExpression_11__div__, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_LinearExpression = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_LinearExpression = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_LinearExpression = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_9casuarius_LinearExpression = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("casuarius.LinearExpression"), /*tp_name*/
  sizeof(struct __pyx_obj_9casuarius_LinearExpression), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9casuarius_LinearExpression, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  __pyx_pw_9casuarius_16LinearExpression_5__repr__, /*tp_repr*/
  &__pyx_tp_as_number_LinearExpression, /*tp_as_number*/
  &__pyx_tp_as_sequence_LinearExpression, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_LinearExpression, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_LinearExpression, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9casuarius_LinearExpression, /*tp_traverse*/
  __pyx_tp_clear_9casuarius_LinearExpression, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9casuarius_LinearExpression, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9casuarius_LinearExpression, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9casuarius_LinearExpression, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};
static struct __pyx_vtabstruct_9casuarius_LinearConstraint __pyx_vtable_9casuarius_LinearConstraint;

static PyObject *__pyx_tp_new_9casuarius_LinearConstraint(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9casuarius_LinearConstraint *p;
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  p = ((struct __pyx_obj_9casuarius_LinearConstraint *)o);
  p->__pyx_vtab = __pyx_vtabptr_9casuarius_LinearConstraint;
  p->lhs = ((struct __pyx_obj_9casuarius_LinearExpression *)Py_None); Py_INCREF(Py_None);
  p->rhs = ((struct __pyx_obj_9casuarius_LinearExpression *)Py_None); Py_INCREF(Py_None);
  p->_strength = ((struct __pyx_obj_9casuarius_Strength *)Py_None); Py_INCREF(Py_None);
  p->op = ((PyObject*)Py_None); Py_INCREF(Py_None);
  if (__pyx_pw_9casuarius_16LinearConstraint_1__cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_9casuarius_LinearConstraint(PyObject *o) {
  struct __pyx_obj_9casuarius_LinearConstraint *p = (struct __pyx_obj_9casuarius_LinearConstraint *)o;
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_9casuarius_16LinearConstraint_5__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_XDECREF(((PyObject *)p->lhs));
  Py_XDECREF(((PyObject *)p->rhs));
  Py_XDECREF(((PyObject *)p->_strength));
  Py_XDECREF(((PyObject *)p->op));
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_9casuarius_LinearConstraint(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9casuarius_LinearConstraint *p = (struct __pyx_obj_9casuarius_LinearConstraint *)o;
  if (p->lhs) {
    e = (*v)(((PyObject*)p->lhs), a); if (e) return e;
  }
  if (p->rhs) {
    e = (*v)(((PyObject*)p->rhs), a); if (e) return e;
  }
  if (p->_strength) {
    e = (*v)(((PyObject*)p->_strength), a); if (e) return e;
  }
  if (p->op) {
    e = (*v)(p->op, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9casuarius_LinearConstraint(PyObject *o) {
  struct __pyx_obj_9casuarius_LinearConstraint *p = (struct __pyx_obj_9casuarius_LinearConstraint *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->lhs);
  p->lhs = ((struct __pyx_obj_9casuarius_LinearExpression *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->rhs);
  p->rhs = ((struct __pyx_obj_9casuarius_LinearExpression *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_strength);
  p->_strength = ((struct __pyx_obj_9casuarius_Strength *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->op);
  p->op = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_9casuarius_16LinearConstraint_strength(PyObject *o, void *x) {
  return __pyx_pw_9casuarius_16LinearConstraint_8strength_1__get__(o);
}

static int __pyx_setprop_9casuarius_16LinearConstraint_strength(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pw_9casuarius_16LinearConstraint_8strength_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9casuarius_16LinearConstraint_weight(PyObject *o, void *x) {
  return __pyx_pw_9casuarius_16LinearConstraint_6weight_1__get__(o);
}

static int __pyx_setprop_9casuarius_16LinearConstraint_weight(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pw_9casuarius_16LinearConstraint_6weight_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9casuarius_16LinearConstraint_lhs(PyObject *o, void *x) {
  return __pyx_pw_9casuarius_16LinearConstraint_3lhs_1__get__(o);
}

static PyObject *__pyx_getprop_9casuarius_16LinearConstraint_rhs(PyObject *o, void *x) {
  return __pyx_pw_9casuarius_16LinearConstraint_3rhs_1__get__(o);
}

static PyObject *__pyx_getprop_9casuarius_16LinearConstraint_op(PyObject *o, void *x) {
  return __pyx_pw_9casuarius_16LinearConstraint_2op_1__get__(o);
}

static PyMethodDef __pyx_methods_9casuarius_LinearConstraint[] = {
  {__Pyx_NAMESTR("explains_exception"), (PyCFunction)__pyx_pw_9casuarius_16LinearConstraint_11explains_exception, METH_O, __Pyx_DOCSTR(__pyx_doc_9casuarius_16LinearConstraint_10explains_exception)},
  {__Pyx_NAMESTR("__ror__"), (PyCFunction)__pyx_pw_9casuarius_16LinearConstraint_15__ror__, METH_O, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9casuarius_LinearConstraint[] = {
  {(char *)"strength", __pyx_getprop_9casuarius_16LinearConstraint_strength, __pyx_setprop_9casuarius_16LinearConstraint_strength, 0, 0},
  {(char *)"weight", __pyx_getprop_9casuarius_16LinearConstraint_weight, __pyx_setprop_9casuarius_16LinearConstraint_weight, 0, 0},
  {(char *)"lhs", __pyx_getprop_9casuarius_16LinearConstraint_lhs, 0, 0, 0},
  {(char *)"rhs", __pyx_getprop_9casuarius_16LinearConstraint_rhs, 0, 0, 0},
  {(char *)"op", __pyx_getprop_9casuarius_16LinearConstraint_op, 0, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_LinearConstraint = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  __pyx_pw_9casuarius_16LinearConstraint_13__or__, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_LinearConstraint = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_LinearConstraint = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_LinearConstraint = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_9casuarius_LinearConstraint = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("casuarius.LinearConstraint"), /*tp_name*/
  sizeof(struct __pyx_obj_9casuarius_LinearConstraint), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9casuarius_LinearConstraint, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  __pyx_pw_9casuarius_16LinearConstraint_7__repr__, /*tp_repr*/
  &__pyx_tp_as_number_LinearConstraint, /*tp_as_number*/
  &__pyx_tp_as_sequence_LinearConstraint, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_LinearConstraint, /*tp_as_mapping*/
  __pyx_pw_9casuarius_16LinearConstraint_17__hash__, /*tp_hash*/
  0, /*tp_call*/
  __pyx_pw_9casuarius_16LinearConstraint_9__str__, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_LinearConstraint, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9casuarius_LinearConstraint, /*tp_traverse*/
  __pyx_tp_clear_9casuarius_LinearConstraint, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9casuarius_LinearConstraint, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9casuarius_LinearConstraint, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_9casuarius_16LinearConstraint_3__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9casuarius_LinearConstraint, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};
static struct __pyx_vtabstruct_9casuarius_LEConstraint __pyx_vtable_9casuarius_LEConstraint;

static PyObject *__pyx_tp_new_9casuarius_LEConstraint(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9casuarius_LEConstraint *p;
  PyObject *o = __pyx_tp_new_9casuarius_LinearConstraint(t, a, k);
  if (!o) return 0;
  p = ((struct __pyx_obj_9casuarius_LEConstraint *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9casuarius_LinearConstraint*)__pyx_vtabptr_9casuarius_LEConstraint;
  return o;
}

static PyObject *__pyx_getprop_9casuarius_12LEConstraint_error(PyObject *o, void *x) {
  return __pyx_pw_9casuarius_12LEConstraint_5error_1__get__(o);
}

static PyMethodDef __pyx_methods_9casuarius_LEConstraint[] = {
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9casuarius_LEConstraint[] = {
  {(char *)"error", __pyx_getprop_9casuarius_12LEConstraint_error, 0, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_LEConstraint = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_LEConstraint = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_LEConstraint = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_LEConstraint = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_9casuarius_LEConstraint = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("casuarius.LEConstraint"), /*tp_name*/
  sizeof(struct __pyx_obj_9casuarius_LEConstraint), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9casuarius_LinearConstraint, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_LEConstraint, /*tp_as_number*/
  &__pyx_tp_as_sequence_LEConstraint, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_LEConstraint, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_LEConstraint, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9casuarius_LinearConstraint, /*tp_traverse*/
  __pyx_tp_clear_9casuarius_LinearConstraint, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9casuarius_LEConstraint, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9casuarius_LEConstraint, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_9casuarius_12LEConstraint_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9casuarius_LEConstraint, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};
static struct __pyx_vtabstruct_9casuarius_GEConstraint __pyx_vtable_9casuarius_GEConstraint;

static PyObject *__pyx_tp_new_9casuarius_GEConstraint(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9casuarius_GEConstraint *p;
  PyObject *o = __pyx_tp_new_9casuarius_LinearConstraint(t, a, k);
  if (!o) return 0;
  p = ((struct __pyx_obj_9casuarius_GEConstraint *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9casuarius_LinearConstraint*)__pyx_vtabptr_9casuarius_GEConstraint;
  return o;
}

static PyObject *__pyx_getprop_9casuarius_12GEConstraint_error(PyObject *o, void *x) {
  return __pyx_pw_9casuarius_12GEConstraint_5error_1__get__(o);
}

static PyMethodDef __pyx_methods_9casuarius_GEConstraint[] = {
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9casuarius_GEConstraint[] = {
  {(char *)"error", __pyx_getprop_9casuarius_12GEConstraint_error, 0, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_GEConstraint = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_GEConstraint = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_GEConstraint = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_GEConstraint = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_9casuarius_GEConstraint = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("casuarius.GEConstraint"), /*tp_name*/
  sizeof(struct __pyx_obj_9casuarius_GEConstraint), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9casuarius_LinearConstraint, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_GEConstraint, /*tp_as_number*/
  &__pyx_tp_as_sequence_GEConstraint, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_GEConstraint, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_GEConstraint, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9casuarius_LinearConstraint, /*tp_traverse*/
  __pyx_tp_clear_9casuarius_LinearConstraint, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9casuarius_GEConstraint, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9casuarius_GEConstraint, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_9casuarius_12GEConstraint_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9casuarius_GEConstraint, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};
static struct __pyx_vtabstruct_9casuarius_EQConstraint __pyx_vtable_9casuarius_EQConstraint;

static PyObject *__pyx_tp_new_9casuarius_EQConstraint(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9casuarius_EQConstraint *p;
  PyObject *o = __pyx_tp_new_9casuarius_LinearConstraint(t, a, k);
  if (!o) return 0;
  p = ((struct __pyx_obj_9casuarius_EQConstraint *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9casuarius_LinearConstraint*)__pyx_vtabptr_9casuarius_EQConstraint;
  return o;
}

static PyObject *__pyx_getprop_9casuarius_12EQConstraint_error(PyObject *o, void *x) {
  return __pyx_pw_9casuarius_12EQConstraint_5error_1__get__(o);
}

static PyMethodDef __pyx_methods_9casuarius_EQConstraint[] = {
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9casuarius_EQConstraint[] = {
  {(char *)"error", __pyx_getprop_9casuarius_12EQConstraint_error, 0, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_EQConstraint = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_EQConstraint = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_EQConstraint = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_EQConstraint = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_9casuarius_EQConstraint = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("casuarius.EQConstraint"), /*tp_name*/
  sizeof(struct __pyx_obj_9casuarius_EQConstraint), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9casuarius_LinearConstraint, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_EQConstraint, /*tp_as_number*/
  &__pyx_tp_as_sequence_EQConstraint, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_EQConstraint, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_EQConstraint, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9casuarius_LinearConstraint, /*tp_traverse*/
  __pyx_tp_clear_9casuarius_LinearConstraint, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9casuarius_EQConstraint, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9casuarius_EQConstraint, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_9casuarius_12EQConstraint_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9casuarius_EQConstraint, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};
static struct __pyx_vtabstruct_9casuarius_Solver __pyx_vtable_9casuarius_Solver;

static PyObject *__pyx_tp_new_9casuarius_Solver(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9casuarius_Solver *p;
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  p = ((struct __pyx_obj_9casuarius_Solver *)o);
  p->__pyx_vtab = __pyx_vtabptr_9casuarius_Solver;
  if (__pyx_pw_9casuarius_6Solver_1__cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_9casuarius_Solver(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_9casuarius_6Solver_3__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_9casuarius_6Solver_autosolve(PyObject *o, void *x) {
  return __pyx_pw_9casuarius_6Solver_9autosolve_1__get__(o);
}

static int __pyx_setprop_9casuarius_6Solver_autosolve(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pw_9casuarius_6Solver_9autosolve_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9casuarius_6Solver_explaining(PyObject *o, void *x) {
  return __pyx_pw_9casuarius_6Solver_10explaining_1__get__(o);
}

static int __pyx_setprop_9casuarius_6Solver_explaining(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pw_9casuarius_6Solver_10explaining_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_9casuarius_Solver[] = {
  {__Pyx_NAMESTR("add_constraint"), (PyCFunction)__pyx_pw_9casuarius_6Solver_7add_constraint, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("remove_constraint"), (PyCFunction)__pyx_pw_9casuarius_6Solver_9remove_constraint, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("suggest_values"), (PyCFunction)__pyx_pw_9casuarius_6Solver_11suggest_values, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9casuarius_Solver[] = {
  {(char *)"autosolve", __pyx_getprop_9casuarius_6Solver_autosolve, __pyx_setprop_9casuarius_6Solver_autosolve, 0, 0},
  {(char *)"explaining", __pyx_getprop_9casuarius_6Solver_explaining, __pyx_setprop_9casuarius_6Solver_explaining, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Solver = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Solver = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Solver = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Solver = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_9casuarius_Solver = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("casuarius.Solver"), /*tp_name*/
  sizeof(struct __pyx_obj_9casuarius_Solver), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9casuarius_Solver, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_Solver, /*tp_as_number*/
  &__pyx_tp_as_sequence_Solver, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Solver, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  __pyx_pw_9casuarius_6Solver_5__str__, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Solver, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9casuarius_Solver, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9casuarius_Solver, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9casuarius_Solver, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_9casuarius_SolverEditContext(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9casuarius_SolverEditContext *p;
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  p = ((struct __pyx_obj_9casuarius_SolverEditContext *)o);
  p->solver = ((struct __pyx_obj_9casuarius_Solver *)Py_None); Py_INCREF(Py_None);
  p->suggest_var_vals = Py_None; Py_INCREF(Py_None);
  p->default_strength = ((struct __pyx_obj_9casuarius_Strength *)Py_None); Py_INCREF(Py_None);
  if (__pyx_pw_9casuarius_17SolverEditContext_1__cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_9casuarius_SolverEditContext(PyObject *o) {
  struct __pyx_obj_9casuarius_SolverEditContext *p = (struct __pyx_obj_9casuarius_SolverEditContext *)o;
  Py_XDECREF(((PyObject *)p->solver));
  Py_XDECREF(p->suggest_var_vals);
  Py_XDECREF(((PyObject *)p->default_strength));
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_9casuarius_SolverEditContext(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9casuarius_SolverEditContext *p = (struct __pyx_obj_9casuarius_SolverEditContext *)o;
  if (p->solver) {
    e = (*v)(((PyObject*)p->solver), a); if (e) return e;
  }
  if (p->suggest_var_vals) {
    e = (*v)(p->suggest_var_vals, a); if (e) return e;
  }
  if (p->default_strength) {
    e = (*v)(((PyObject*)p->default_strength), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9casuarius_SolverEditContext(PyObject *o) {
  struct __pyx_obj_9casuarius_SolverEditContext *p = (struct __pyx_obj_9casuarius_SolverEditContext *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->solver);
  p->solver = ((struct __pyx_obj_9casuarius_Solver *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->suggest_var_vals);
  p->suggest_var_vals = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->default_strength);
  p->default_strength = ((struct __pyx_obj_9casuarius_Strength *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_9casuarius_17SolverEditContext_solver(PyObject *o, void *x) {
  return __pyx_pw_9casuarius_17SolverEditContext_6solver_1__get__(o);
}

static int __pyx_setprop_9casuarius_17SolverEditContext_solver(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pw_9casuarius_17SolverEditContext_6solver_3__set__(o, v);
  }
  else {
    return __pyx_pw_9casuarius_17SolverEditContext_6solver_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9casuarius_17SolverEditContext_suggest_var_vals(PyObject *o, void *x) {
  return __pyx_pw_9casuarius_17SolverEditContext_16suggest_var_vals_1__get__(o);
}

static int __pyx_setprop_9casuarius_17SolverEditContext_suggest_var_vals(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pw_9casuarius_17SolverEditContext_16suggest_var_vals_3__set__(o, v);
  }
  else {
    return __pyx_pw_9casuarius_17SolverEditContext_16suggest_var_vals_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9casuarius_17SolverEditContext_default_strength(PyObject *o, void *x) {
  return __pyx_pw_9casuarius_17SolverEditContext_16default_strength_1__get__(o);
}

static int __pyx_setprop_9casuarius_17SolverEditContext_default_strength(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pw_9casuarius_17SolverEditContext_16default_strength_3__set__(o, v);
  }
  else {
    return __pyx_pw_9casuarius_17SolverEditContext_16default_strength_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9casuarius_17SolverEditContext_default_weight(PyObject *o, void *x) {
  return __pyx_pw_9casuarius_17SolverEditContext_14default_weight_1__get__(o);
}

static int __pyx_setprop_9casuarius_17SolverEditContext_default_weight(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pw_9casuarius_17SolverEditContext_14default_weight_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_9casuarius_SolverEditContext[] = {
  {__Pyx_NAMESTR("__enter__"), (PyCFunction)__pyx_pw_9casuarius_17SolverEditContext_3__enter__, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("__exit__"), (PyCFunction)__pyx_pw_9casuarius_17SolverEditContext_5__exit__, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9casuarius_SolverEditContext[] = {
  {(char *)"solver", __pyx_getprop_9casuarius_17SolverEditContext_solver, __pyx_setprop_9casuarius_17SolverEditContext_solver, 0, 0},
  {(char *)"suggest_var_vals", __pyx_getprop_9casuarius_17SolverEditContext_suggest_var_vals, __pyx_setprop_9casuarius_17SolverEditContext_suggest_var_vals, 0, 0},
  {(char *)"default_strength", __pyx_getprop_9casuarius_17SolverEditContext_default_strength, __pyx_setprop_9casuarius_17SolverEditContext_default_strength, 0, 0},
  {(char *)"default_weight", __pyx_getprop_9casuarius_17SolverEditContext_default_weight, __pyx_setprop_9casuarius_17SolverEditContext_default_weight, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_SolverEditContext = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_SolverEditContext = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_SolverEditContext = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_SolverEditContext = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_9casuarius_SolverEditContext = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("casuarius.SolverEditContext"), /*tp_name*/
  sizeof(struct __pyx_obj_9casuarius_SolverEditContext), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9casuarius_SolverEditContext, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_SolverEditContext, /*tp_as_number*/
  &__pyx_tp_as_sequence_SolverEditContext, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_SolverEditContext, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_SolverEditContext, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR(" Context manager for suggesting variables in a solver.\n    "), /*tp_doc*/
  __pyx_tp_traverse_9casuarius_SolverEditContext, /*tp_traverse*/
  __pyx_tp_clear_9casuarius_SolverEditContext, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9casuarius_SolverEditContext, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9casuarius_SolverEditContext, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9casuarius_SolverEditContext, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_9casuarius___pyx_scope_struct____mul__(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9casuarius___pyx_scope_struct____mul__ *p;
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  p = ((struct __pyx_obj_9casuarius___pyx_scope_struct____mul__ *)o);
  p->__pyx_v_self = 0;
  return o;
}

static void __pyx_tp_dealloc_9casuarius___pyx_scope_struct____mul__(PyObject *o) {
  struct __pyx_obj_9casuarius___pyx_scope_struct____mul__ *p = (struct __pyx_obj_9casuarius___pyx_scope_struct____mul__ *)o;
  Py_XDECREF(p->__pyx_v_self);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_9casuarius___pyx_scope_struct____mul__(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9casuarius___pyx_scope_struct____mul__ *p = (struct __pyx_obj_9casuarius___pyx_scope_struct____mul__ *)o;
  if (p->__pyx_v_self) {
    e = (*v)(p->__pyx_v_self, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9casuarius___pyx_scope_struct____mul__(PyObject *o) {
  struct __pyx_obj_9casuarius___pyx_scope_struct____mul__ *p = (struct __pyx_obj_9casuarius___pyx_scope_struct____mul__ *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->__pyx_v_self);
  p->__pyx_v_self = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_9casuarius___pyx_scope_struct____mul__[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number___pyx_scope_struct____mul__ = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence___pyx_scope_struct____mul__ = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping___pyx_scope_struct____mul__ = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer___pyx_scope_struct____mul__ = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_9casuarius___pyx_scope_struct____mul__ = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("casuarius.__pyx_scope_struct____mul__"), /*tp_name*/
  sizeof(struct __pyx_obj_9casuarius___pyx_scope_struct____mul__), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9casuarius___pyx_scope_struct____mul__, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number___pyx_scope_struct____mul__, /*tp_as_number*/
  &__pyx_tp_as_sequence___pyx_scope_struct____mul__, /*tp_as_sequence*/
  &__pyx_tp_as_mapping___pyx_scope_struct____mul__, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer___pyx_scope_struct____mul__, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9casuarius___pyx_scope_struct____mul__, /*tp_traverse*/
  __pyx_tp_clear_9casuarius___pyx_scope_struct____mul__, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9casuarius___pyx_scope_struct____mul__, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9casuarius___pyx_scope_struct____mul__, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_9casuarius___pyx_scope_struct_1_genexpr(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9casuarius___pyx_scope_struct_1_genexpr *p;
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  p = ((struct __pyx_obj_9casuarius___pyx_scope_struct_1_genexpr *)o);
  p->__pyx_outer_scope = 0;
  p->__pyx_v_x = 0;
  p->__pyx_t_0 = 0;
  return o;
}

static void __pyx_tp_dealloc_9casuarius___pyx_scope_struct_1_genexpr(PyObject *o) {
  struct __pyx_obj_9casuarius___pyx_scope_struct_1_genexpr *p = (struct __pyx_obj_9casuarius___pyx_scope_struct_1_genexpr *)o;
  Py_XDECREF(((PyObject *)p->__pyx_outer_scope));
  Py_XDECREF(p->__pyx_v_x);
  Py_XDECREF(p->__pyx_t_0);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_9casuarius___pyx_scope_struct_1_genexpr(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9casuarius___pyx_scope_struct_1_genexpr *p = (struct __pyx_obj_9casuarius___pyx_scope_struct_1_genexpr *)o;
  if (p->__pyx_outer_scope) {
    e = (*v)(((PyObject*)p->__pyx_outer_scope), a); if (e) return e;
  }
  if (p->__pyx_v_x) {
    e = (*v)(p->__pyx_v_x, a); if (e) return e;
  }
  if (p->__pyx_t_0) {
    e = (*v)(p->__pyx_t_0, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9casuarius___pyx_scope_struct_1_genexpr(PyObject *o) {
  struct __pyx_obj_9casuarius___pyx_scope_struct_1_genexpr *p = (struct __pyx_obj_9casuarius___pyx_scope_struct_1_genexpr *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->__pyx_outer_scope);
  p->__pyx_outer_scope = ((struct __pyx_obj_9casuarius___pyx_scope_struct____mul__ *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_x);
  p->__pyx_v_x = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_t_0);
  p->__pyx_t_0 = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_9casuarius___pyx_scope_struct_1_genexpr[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number___pyx_scope_struct_1_genexpr = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence___pyx_scope_struct_1_genexpr = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping___pyx_scope_struct_1_genexpr = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer___pyx_scope_struct_1_genexpr = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_9casuarius___pyx_scope_struct_1_genexpr = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("casuarius.__pyx_scope_struct_1_genexpr"), /*tp_name*/
  sizeof(struct __pyx_obj_9casuarius___pyx_scope_struct_1_genexpr), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9casuarius___pyx_scope_struct_1_genexpr, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number___pyx_scope_struct_1_genexpr, /*tp_as_number*/
  &__pyx_tp_as_sequence___pyx_scope_struct_1_genexpr, /*tp_as_sequence*/
  &__pyx_tp_as_mapping___pyx_scope_struct_1_genexpr, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer___pyx_scope_struct_1_genexpr, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9casuarius___pyx_scope_struct_1_genexpr, /*tp_traverse*/
  __pyx_tp_clear_9casuarius___pyx_scope_struct_1_genexpr, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9casuarius___pyx_scope_struct_1_genexpr, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9casuarius___pyx_scope_struct_1_genexpr, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_9casuarius___pyx_scope_struct_2_reduce_terms(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9casuarius___pyx_scope_struct_2_reduce_terms *p;
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  p = ((struct __pyx_obj_9casuarius___pyx_scope_struct_2_reduce_terms *)o);
  p->__pyx_v_mapping = 0;
  return o;
}

static void __pyx_tp_dealloc_9casuarius___pyx_scope_struct_2_reduce_terms(PyObject *o) {
  struct __pyx_obj_9casuarius___pyx_scope_struct_2_reduce_terms *p = (struct __pyx_obj_9casuarius___pyx_scope_struct_2_reduce_terms *)o;
  Py_XDECREF(p->__pyx_v_mapping);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_9casuarius___pyx_scope_struct_2_reduce_terms(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9casuarius___pyx_scope_struct_2_reduce_terms *p = (struct __pyx_obj_9casuarius___pyx_scope_struct_2_reduce_terms *)o;
  if (p->__pyx_v_mapping) {
    e = (*v)(p->__pyx_v_mapping, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9casuarius___pyx_scope_struct_2_reduce_terms(PyObject *o) {
  struct __pyx_obj_9casuarius___pyx_scope_struct_2_reduce_terms *p = (struct __pyx_obj_9casuarius___pyx_scope_struct_2_reduce_terms *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->__pyx_v_mapping);
  p->__pyx_v_mapping = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_9casuarius___pyx_scope_struct_2_reduce_terms[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number___pyx_scope_struct_2_reduce_terms = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence___pyx_scope_struct_2_reduce_terms = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping___pyx_scope_struct_2_reduce_terms = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer___pyx_scope_struct_2_reduce_terms = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_9casuarius___pyx_scope_struct_2_reduce_terms = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("casuarius.__pyx_scope_struct_2_reduce_terms"), /*tp_name*/
  sizeof(struct __pyx_obj_9casuarius___pyx_scope_struct_2_reduce_terms), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9casuarius___pyx_scope_struct_2_reduce_terms, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number___pyx_scope_struct_2_reduce_terms, /*tp_as_number*/
  &__pyx_tp_as_sequence___pyx_scope_struct_2_reduce_terms, /*tp_as_sequence*/
  &__pyx_tp_as_mapping___pyx_scope_struct_2_reduce_terms, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer___pyx_scope_struct_2_reduce_terms, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9casuarius___pyx_scope_struct_2_reduce_terms, /*tp_traverse*/
  __pyx_tp_clear_9casuarius___pyx_scope_struct_2_reduce_terms, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9casuarius___pyx_scope_struct_2_reduce_terms, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9casuarius___pyx_scope_struct_2_reduce_terms, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_9casuarius___pyx_scope_struct_3_genexpr(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9casuarius___pyx_scope_struct_3_genexpr *p;
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  p = ((struct __pyx_obj_9casuarius___pyx_scope_struct_3_genexpr *)o);
  p->__pyx_outer_scope = 0;
  p->__pyx_v_coeff = 0;
  p->__pyx_v_var = 0;
  p->__pyx_t_0 = 0;
  return o;
}

static void __pyx_tp_dealloc_9casuarius___pyx_scope_struct_3_genexpr(PyObject *o) {
  struct __pyx_obj_9casuarius___pyx_scope_struct_3_genexpr *p = (struct __pyx_obj_9casuarius___pyx_scope_struct_3_genexpr *)o;
  Py_XDECREF(((PyObject *)p->__pyx_outer_scope));
  Py_XDECREF(p->__pyx_v_coeff);
  Py_XDECREF(p->__pyx_v_var);
  Py_XDECREF(p->__pyx_t_0);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_9casuarius___pyx_scope_struct_3_genexpr(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9casuarius___pyx_scope_struct_3_genexpr *p = (struct __pyx_obj_9casuarius___pyx_scope_struct_3_genexpr *)o;
  if (p->__pyx_outer_scope) {
    e = (*v)(((PyObject*)p->__pyx_outer_scope), a); if (e) return e;
  }
  if (p->__pyx_v_coeff) {
    e = (*v)(p->__pyx_v_coeff, a); if (e) return e;
  }
  if (p->__pyx_v_var) {
    e = (*v)(p->__pyx_v_var, a); if (e) return e;
  }
  if (p->__pyx_t_0) {
    e = (*v)(p->__pyx_t_0, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9casuarius___pyx_scope_struct_3_genexpr(PyObject *o) {
  struct __pyx_obj_9casuarius___pyx_scope_struct_3_genexpr *p = (struct __pyx_obj_9casuarius___pyx_scope_struct_3_genexpr *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->__pyx_outer_scope);
  p->__pyx_outer_scope = ((struct __pyx_obj_9casuarius___pyx_scope_struct_2_reduce_terms *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_coeff);
  p->__pyx_v_coeff = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_var);
  p->__pyx_v_var = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_t_0);
  p->__pyx_t_0 = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_9casuarius___pyx_scope_struct_3_genexpr[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number___pyx_scope_struct_3_genexpr = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence___pyx_scope_struct_3_genexpr = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping___pyx_scope_struct_3_genexpr = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer___pyx_scope_struct_3_genexpr = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_9casuarius___pyx_scope_struct_3_genexpr = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("casuarius.__pyx_scope_struct_3_genexpr"), /*tp_name*/
  sizeof(struct __pyx_obj_9casuarius___pyx_scope_struct_3_genexpr), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9casuarius___pyx_scope_struct_3_genexpr, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number___pyx_scope_struct_3_genexpr, /*tp_as_number*/
  &__pyx_tp_as_sequence___pyx_scope_struct_3_genexpr, /*tp_as_sequence*/
  &__pyx_tp_as_mapping___pyx_scope_struct_3_genexpr, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer___pyx_scope_struct_3_genexpr, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9casuarius___pyx_scope_struct_3_genexpr, /*tp_traverse*/
  __pyx_tp_clear_9casuarius___pyx_scope_struct_3_genexpr, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9casuarius___pyx_scope_struct_3_genexpr, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9casuarius___pyx_scope_struct_3_genexpr, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_9casuarius___pyx_scope_struct_4___repr__(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9casuarius___pyx_scope_struct_4___repr__ *p;
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  p = ((struct __pyx_obj_9casuarius___pyx_scope_struct_4___repr__ *)o);
  p->__pyx_v_s = 0;
  return o;
}

static void __pyx_tp_dealloc_9casuarius___pyx_scope_struct_4___repr__(PyObject *o) {
  struct __pyx_obj_9casuarius___pyx_scope_struct_4___repr__ *p = (struct __pyx_obj_9casuarius___pyx_scope_struct_4___repr__ *)o;
  Py_XDECREF(p->__pyx_v_s);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_9casuarius___pyx_scope_struct_4___repr__(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9casuarius___pyx_scope_struct_4___repr__ *p = (struct __pyx_obj_9casuarius___pyx_scope_struct_4___repr__ *)o;
  if (p->__pyx_v_s) {
    e = (*v)(p->__pyx_v_s, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9casuarius___pyx_scope_struct_4___repr__(PyObject *o) {
  struct __pyx_obj_9casuarius___pyx_scope_struct_4___repr__ *p = (struct __pyx_obj_9casuarius___pyx_scope_struct_4___repr__ *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->__pyx_v_s);
  p->__pyx_v_s = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_9casuarius___pyx_scope_struct_4___repr__[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number___pyx_scope_struct_4___repr__ = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence___pyx_scope_struct_4___repr__ = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping___pyx_scope_struct_4___repr__ = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer___pyx_scope_struct_4___repr__ = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_9casuarius___pyx_scope_struct_4___repr__ = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("casuarius.__pyx_scope_struct_4___repr__"), /*tp_name*/
  sizeof(struct __pyx_obj_9casuarius___pyx_scope_struct_4___repr__), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9casuarius___pyx_scope_struct_4___repr__, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number___pyx_scope_struct_4___repr__, /*tp_as_number*/
  &__pyx_tp_as_sequence___pyx_scope_struct_4___repr__, /*tp_as_sequence*/
  &__pyx_tp_as_mapping___pyx_scope_struct_4___repr__, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer___pyx_scope_struct_4___repr__, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9casuarius___pyx_scope_struct_4___repr__, /*tp_traverse*/
  __pyx_tp_clear_9casuarius___pyx_scope_struct_4___repr__, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9casuarius___pyx_scope_struct_4___repr__, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9casuarius___pyx_scope_struct_4___repr__, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_9casuarius___pyx_scope_struct_5_genexpr(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9casuarius___pyx_scope_struct_5_genexpr *p;
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  p = ((struct __pyx_obj_9casuarius___pyx_scope_struct_5_genexpr *)o);
  p->__pyx_outer_scope = 0;
  p->__pyx_v_term = 0;
  p->__pyx_t_0 = 0;
  return o;
}

static void __pyx_tp_dealloc_9casuarius___pyx_scope_struct_5_genexpr(PyObject *o) {
  struct __pyx_obj_9casuarius___pyx_scope_struct_5_genexpr *p = (struct __pyx_obj_9casuarius___pyx_scope_struct_5_genexpr *)o;
  Py_XDECREF(((PyObject *)p->__pyx_outer_scope));
  Py_XDECREF(p->__pyx_v_term);
  Py_XDECREF(p->__pyx_t_0);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_9casuarius___pyx_scope_struct_5_genexpr(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9casuarius___pyx_scope_struct_5_genexpr *p = (struct __pyx_obj_9casuarius___pyx_scope_struct_5_genexpr *)o;
  if (p->__pyx_outer_scope) {
    e = (*v)(((PyObject*)p->__pyx_outer_scope), a); if (e) return e;
  }
  if (p->__pyx_v_term) {
    e = (*v)(p->__pyx_v_term, a); if (e) return e;
  }
  if (p->__pyx_t_0) {
    e = (*v)(p->__pyx_t_0, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9casuarius___pyx_scope_struct_5_genexpr(PyObject *o) {
  struct __pyx_obj_9casuarius___pyx_scope_struct_5_genexpr *p = (struct __pyx_obj_9casuarius___pyx_scope_struct_5_genexpr *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->__pyx_outer_scope);
  p->__pyx_outer_scope = ((struct __pyx_obj_9casuarius___pyx_scope_struct_4___repr__ *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_term);
  p->__pyx_v_term = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_t_0);
  p->__pyx_t_0 = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_9casuarius___pyx_scope_struct_5_genexpr[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number___pyx_scope_struct_5_genexpr = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence___pyx_scope_struct_5_genexpr = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping___pyx_scope_struct_5_genexpr = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer___pyx_scope_struct_5_genexpr = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_9casuarius___pyx_scope_struct_5_genexpr = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("casuarius.__pyx_scope_struct_5_genexpr"), /*tp_name*/
  sizeof(struct __pyx_obj_9casuarius___pyx_scope_struct_5_genexpr), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9casuarius___pyx_scope_struct_5_genexpr, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number___pyx_scope_struct_5_genexpr, /*tp_as_number*/
  &__pyx_tp_as_sequence___pyx_scope_struct_5_genexpr, /*tp_as_sequence*/
  &__pyx_tp_as_mapping___pyx_scope_struct_5_genexpr, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer___pyx_scope_struct_5_genexpr, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9casuarius___pyx_scope_struct_5_genexpr, /*tp_traverse*/
  __pyx_tp_clear_9casuarius___pyx_scope_struct_5_genexpr, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9casuarius___pyx_scope_struct_5_genexpr, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9casuarius___pyx_scope_struct_5_genexpr, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
static struct PyModuleDef __pyx_moduledef = {
    PyModuleDef_HEAD_INIT,
    __Pyx_NAMESTR("casuarius"),
    __Pyx_DOCSTR(__pyx_k_57), /* m_doc */
    -1, /* m_size */
    __pyx_methods /* m_methods */,
    NULL, /* m_reload */
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_n_s_1, __pyx_k_1, sizeof(__pyx_k_1), 0, 0, 1, 1},
  {&__pyx_kp_s_10, __pyx_k_10, sizeof(__pyx_k_10), 0, 0, 1, 0},
  {&__pyx_kp_s_13, __pyx_k_13, sizeof(__pyx_k_13), 0, 0, 1, 0},
  {&__pyx_kp_s_15, __pyx_k_15, sizeof(__pyx_k_15), 0, 0, 1, 0},
  {&__pyx_kp_s_17, __pyx_k_17, sizeof(__pyx_k_17), 0, 0, 1, 0},
  {&__pyx_kp_s_19, __pyx_k_19, sizeof(__pyx_k_19), 0, 0, 1, 0},
  {&__pyx_n_s_2, __pyx_k_2, sizeof(__pyx_k_2), 0, 0, 1, 1},
  {&__pyx_kp_s_21, __pyx_k_21, sizeof(__pyx_k_21), 0, 0, 1, 0},
  {&__pyx_kp_s_23, __pyx_k_23, sizeof(__pyx_k_23), 0, 0, 1, 0},
  {&__pyx_kp_s_25, __pyx_k_25, sizeof(__pyx_k_25), 0, 0, 1, 0},
  {&__pyx_kp_s_27, __pyx_k_27, sizeof(__pyx_k_27), 0, 0, 1, 0},
  {&__pyx_kp_s_28, __pyx_k_28, sizeof(__pyx_k_28), 0, 0, 1, 0},
  {&__pyx_kp_s_29, __pyx_k_29, sizeof(__pyx_k_29), 0, 0, 1, 0},
  {&__pyx_kp_s_3, __pyx_k_3, sizeof(__pyx_k_3), 0, 0, 1, 0},
  {&__pyx_kp_s_30, __pyx_k_30, sizeof(__pyx_k_30), 0, 0, 1, 0},
  {&__pyx_kp_s_31, __pyx_k_31, sizeof(__pyx_k_31), 0, 0, 1, 0},
  {&__pyx_kp_s_32, __pyx_k_32, sizeof(__pyx_k_32), 0, 0, 1, 0},
  {&__pyx_kp_s_33, __pyx_k_33, sizeof(__pyx_k_33), 0, 0, 1, 0},
  {&__pyx_kp_s_34, __pyx_k_34, sizeof(__pyx_k_34), 0, 0, 1, 0},
  {&__pyx_kp_s_35, __pyx_k_35, sizeof(__pyx_k_35), 0, 0, 1, 0},
  {&__pyx_kp_s_37, __pyx_k_37, sizeof(__pyx_k_37), 0, 0, 1, 0},
  {&__pyx_kp_s_39, __pyx_k_39, sizeof(__pyx_k_39), 0, 0, 1, 0},
  {&__pyx_kp_s_4, __pyx_k_4, sizeof(__pyx_k_4), 0, 0, 1, 0},
  {&__pyx_kp_s_40, __pyx_k_40, sizeof(__pyx_k_40), 0, 0, 1, 0},
  {&__pyx_kp_s_41, __pyx_k_41, sizeof(__pyx_k_41), 0, 0, 1, 0},
  {&__pyx_kp_s_42, __pyx_k_42, sizeof(__pyx_k_42), 0, 0, 1, 0},
  {&__pyx_kp_s_44, __pyx_k_44, sizeof(__pyx_k_44), 0, 0, 1, 0},
  {&__pyx_kp_s_45, __pyx_k_45, sizeof(__pyx_k_45), 0, 0, 1, 0},
  {&__pyx_kp_s_46, __pyx_k_46, sizeof(__pyx_k_46), 0, 0, 1, 0},
  {&__pyx_kp_s_47, __pyx_k_47, sizeof(__pyx_k_47), 0, 0, 1, 0},
  {&__pyx_kp_b_49, __pyx_k_49, sizeof(__pyx_k_49), 0, 0, 0, 0},
  {&__pyx_kp_s_5, __pyx_k_5, sizeof(__pyx_k_5), 0, 0, 1, 0},
  {&__pyx_kp_b_51, __pyx_k_51, sizeof(__pyx_k_51), 0, 0, 0, 0},
  {&__pyx_kp_b_53, __pyx_k_53, sizeof(__pyx_k_53), 0, 0, 0, 0},
  {&__pyx_kp_s_58, __pyx_k_58, sizeof(__pyx_k_58), 0, 0, 1, 0},
  {&__pyx_kp_s_6, __pyx_k_6, sizeof(__pyx_k_6), 0, 0, 1, 0},
  {&__pyx_kp_s_61, __pyx_k_61, sizeof(__pyx_k_61), 0, 0, 1, 0},
  {&__pyx_kp_s_62, __pyx_k_62, sizeof(__pyx_k_62), 0, 0, 1, 0},
  {&__pyx_kp_s_7, __pyx_k_7, sizeof(__pyx_k_7), 0, 0, 1, 0},
  {&__pyx_kp_s_8, __pyx_k_8, sizeof(__pyx_k_8), 0, 0, 1, 0},
  {&__pyx_n_s__CassowaryError, __pyx_k__CassowaryError, sizeof(__pyx_k__CassowaryError), 0, 0, 1, 1},
  {&__pyx_n_s__Exception, __pyx_k__Exception, sizeof(__pyx_k__Exception), 0, 0, 1, 1},
  {&__pyx_n_s__NotImplemented, __pyx_k__NotImplemented, sizeof(__pyx_k__NotImplemented), 0, 0, 1, 1},
  {&__pyx_n_s__NotImplementedError, __pyx_k__NotImplementedError, sizeof(__pyx_k__NotImplementedError), 0, 0, 1, 1},
  {&__pyx_n_s__STRENGTH_MAP, __pyx_k__STRENGTH_MAP, sizeof(__pyx_k__STRENGTH_MAP), 0, 0, 1, 1},
  {&__pyx_n_s__TypeError, __pyx_k__TypeError, sizeof(__pyx_k__TypeError), 0, 0, 1, 1},
  {&__pyx_n_s__ValueError, __pyx_k__ValueError, sizeof(__pyx_k__ValueError), 0, 0, 1, 1},
  {&__pyx_n_s____hash__, __pyx_k____hash__, sizeof(__pyx_k____hash__), 0, 0, 1, 1},
  {&__pyx_n_s____init__, __pyx_k____init__, sizeof(__pyx_k____init__), 0, 0, 1, 1},
  {&__pyx_n_s____main__, __pyx_k____main__, sizeof(__pyx_k____main__), 0, 0, 1, 1},
  {&__pyx_n_s____mul__, __pyx_k____mul__, sizeof(__pyx_k____mul__), 0, 0, 1, 1},
  {&__pyx_n_s____name__, __pyx_k____name__, sizeof(__pyx_k____name__), 0, 0, 1, 1},
  {&__pyx_n_s____or__, __pyx_k____or__, sizeof(__pyx_k____or__), 0, 0, 1, 1},
  {&__pyx_n_s____repr__, __pyx_k____repr__, sizeof(__pyx_k____repr__), 0, 0, 1, 1},
  {&__pyx_n_s____test__, __pyx_k____test__, sizeof(__pyx_k____test__), 0, 0, 1, 1},
  {&__pyx_n_s___richcmp_eq, __pyx_k___richcmp_eq, sizeof(__pyx_k___richcmp_eq), 0, 0, 1, 1},
  {&__pyx_n_s___richcmp_ge, __pyx_k___richcmp_ge, sizeof(__pyx_k___richcmp_ge), 0, 0, 1, 1},
  {&__pyx_n_s___richcmp_le, __pyx_k___richcmp_le, sizeof(__pyx_k___richcmp_le), 0, 0, 1, 1},
  {&__pyx_n_s__attrgetter, __pyx_k__attrgetter, sizeof(__pyx_k__attrgetter), 0, 0, 1, 1},
  {&__pyx_n_s__autosolve, __pyx_k__autosolve, sizeof(__pyx_k__autosolve), 0, 0, 1, 1},
  {&__pyx_n_s__basestring, __pyx_k__basestring, sizeof(__pyx_k__basestring), 0, 0, 1, 1},
  {&__pyx_n_s__casuarius, __pyx_k__casuarius, sizeof(__pyx_k__casuarius), 0, 0, 1, 1},
  {&__pyx_n_s__cn, __pyx_k__cn, sizeof(__pyx_k__cn), 0, 0, 1, 1},
  {&__pyx_n_s__coeff, __pyx_k__coeff, sizeof(__pyx_k__coeff), 0, 0, 1, 1},
  {&__pyx_n_s__collections, __pyx_k__collections, sizeof(__pyx_k__collections), 0, 0, 1, 1},
  {&__pyx_n_s__constant, __pyx_k__constant, sizeof(__pyx_k__constant), 0, 0, 1, 1},
  {&__pyx_n_s__default_strength, __pyx_k__default_strength, sizeof(__pyx_k__default_strength), 0, 0, 1, 1},
  {&__pyx_n_s__default_weight, __pyx_k__default_weight, sizeof(__pyx_k__default_weight), 0, 0, 1, 1},
  {&__pyx_n_s__defaultdict, __pyx_k__defaultdict, sizeof(__pyx_k__defaultdict), 0, 0, 1, 1},
  {&__pyx_n_s__divmod, __pyx_k__divmod, sizeof(__pyx_k__divmod), 0, 0, 1, 1},
  {&__pyx_n_s__exc_tb, __pyx_k__exc_tb, sizeof(__pyx_k__exc_tb), 0, 0, 1, 1},
  {&__pyx_n_s__exc_type, __pyx_k__exc_type, sizeof(__pyx_k__exc_type), 0, 0, 1, 1},
  {&__pyx_n_s__exc_val, __pyx_k__exc_val, sizeof(__pyx_k__exc_val), 0, 0, 1, 1},
  {&__pyx_n_s__explaining, __pyx_k__explaining, sizeof(__pyx_k__explaining), 0, 0, 1, 1},
  {&__pyx_n_s__explains, __pyx_k__explains, sizeof(__pyx_k__explains), 0, 0, 1, 1},
  {&__pyx_n_s__explains_exception, __pyx_k__explains_exception, sizeof(__pyx_k__explains_exception), 0, 0, 1, 1},
  {&__pyx_n_s__filtered, __pyx_k__filtered, sizeof(__pyx_k__filtered), 0, 0, 1, 1},
  {&__pyx_n_s__format, __pyx_k__format, sizeof(__pyx_k__format), 0, 0, 1, 1},
  {&__pyx_n_s__is_required, __pyx_k__is_required, sizeof(__pyx_k__is_required), 0, 0, 1, 1},
  {&__pyx_n_s__iteritems, __pyx_k__iteritems, sizeof(__pyx_k__iteritems), 0, 0, 1, 1},
  {&__pyx_n_s__join, __pyx_k__join, sizeof(__pyx_k__join), 0, 0, 1, 1},
  {&__pyx_n_s__key, __pyx_k__key, sizeof(__pyx_k__key), 0, 0, 1, 1},
  {&__pyx_n_s__lhs, __pyx_k__lhs, sizeof(__pyx_k__lhs), 0, 0, 1, 1},
  {&__pyx_n_s__linear_constraints, __pyx_k__linear_constraints, sizeof(__pyx_k__linear_constraints), 0, 0, 1, 1},
  {&__pyx_n_s__medium, __pyx_k__medium, sizeof(__pyx_k__medium), 0, 0, 1, 1},
  {&__pyx_n_s__name, __pyx_k__name, sizeof(__pyx_k__name), 0, 0, 1, 1},
  {&__pyx_n_s__nonlinear, __pyx_k__nonlinear, sizeof(__pyx_k__nonlinear), 0, 0, 1, 1},
  {&__pyx_n_s__nonlinear_op, __pyx_k__nonlinear_op, sizeof(__pyx_k__nonlinear_op), 0, 0, 1, 1},
  {&__pyx_n_s__object, __pyx_k__object, sizeof(__pyx_k__object), 0, 0, 1, 1},
  {&__pyx_n_s__operator, __pyx_k__operator, sizeof(__pyx_k__operator), 0, 0, 1, 1},
  {&__pyx_n_s__reduce_terms, __pyx_k__reduce_terms, sizeof(__pyx_k__reduce_terms), 0, 0, 1, 1},
  {&__pyx_n_s__required, __pyx_k__required, sizeof(__pyx_k__required), 0, 0, 1, 1},
  {&__pyx_n_s__rhs, __pyx_k__rhs, sizeof(__pyx_k__rhs), 0, 0, 1, 1},
  {&__pyx_n_s__self, __pyx_k__self, sizeof(__pyx_k__self), 0, 0, 1, 1},
  {&__pyx_n_s__solver, __pyx_k__solver, sizeof(__pyx_k__solver), 0, 0, 1, 1},
  {&__pyx_n_s__sorted, __pyx_k__sorted, sizeof(__pyx_k__sorted), 0, 0, 1, 1},
  {&__pyx_n_s__strength, __pyx_k__strength, sizeof(__pyx_k__strength), 0, 0, 1, 1},
  {&__pyx_n_s__strong, __pyx_k__strong, sizeof(__pyx_k__strong), 0, 0, 1, 1},
  {&__pyx_n_s__suggest_var_vals, __pyx_k__suggest_var_vals, sizeof(__pyx_k__suggest_var_vals), 0, 0, 1, 1},
  {&__pyx_n_s__symbolic_weight, __pyx_k__symbolic_weight, sizeof(__pyx_k__symbolic_weight), 0, 0, 1, 1},
  {&__pyx_n_s__terms, __pyx_k__terms, sizeof(__pyx_k__terms), 0, 0, 1, 1},
  {&__pyx_n_s__value, __pyx_k__value, sizeof(__pyx_k__value), 0, 0, 1, 1},
  {&__pyx_n_s__var, __pyx_k__var, sizeof(__pyx_k__var), 0, 0, 1, 1},
  {&__pyx_n_s__var_vals, __pyx_k__var_vals, sizeof(__pyx_k__var_vals), 0, 0, 1, 1},
  {&__pyx_n_s__weak, __pyx_k__weak, sizeof(__pyx_k__weak), 0, 0, 1, 1},
  {&__pyx_n_s__weight, __pyx_k__weight, sizeof(__pyx_k__weight), 0, 0, 1, 1},
  {&__pyx_n_s__weights, __pyx_k__weights, sizeof(__pyx_k__weights), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_Exception = __Pyx_GetName(__pyx_b, __pyx_n_s__Exception); if (!__pyx_builtin_Exception) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 19; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_object = __Pyx_GetName(__pyx_b, __pyx_n_s__object); if (!__pyx_builtin_object) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_TypeError = __Pyx_GetName(__pyx_b, __pyx_n_s__TypeError); if (!__pyx_builtin_TypeError) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 245; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_NotImplementedError = __Pyx_GetName(__pyx_b, __pyx_n_s__NotImplementedError); if (!__pyx_builtin_NotImplementedError) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 251; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_ValueError = __Pyx_GetName(__pyx_b, __pyx_n_s__ValueError); if (!__pyx_builtin_ValueError) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_NotImplemented = __Pyx_GetName(__pyx_b, __pyx_n_s__NotImplemented); if (!__pyx_builtin_NotImplemented) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 398; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_sorted = __Pyx_GetName(__pyx_b, __pyx_n_s__sorted); if (!__pyx_builtin_sorted) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 511; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_basestring = __Pyx_GetName(__pyx_b, __pyx_n_s__basestring); if (!__pyx_builtin_basestring) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 652; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  return 0;
  __pyx_L1_error:;
  return -1;
}

static int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "casuarius.pyx":274
 *         if not isinstance(self, LinearSymbolic):
 *             self = other
 *         self.nonlinear_op('//')             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_k_tuple_9 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 274; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_9);
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_8));
  PyTuple_SET_ITEM(__pyx_k_tuple_9, 0, ((PyObject *)__pyx_kp_s_8));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_8));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_9));

  /* "casuarius.pyx":280
 *         if not isinstance(self, LinearSymbolic):
 *             self = other
 *         self.nonlinear_op('%')             # <<<<<<<<<<<<<<
 * 
 *     def __divmod__(self, other):
 */
  __pyx_k_tuple_11 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 280; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_11);
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_10));
  PyTuple_SET_ITEM(__pyx_k_tuple_11, 0, ((PyObject *)__pyx_kp_s_10));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_10));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_11));

  /* "casuarius.pyx":285
 *         if not isinstance(self, LinearSymbolic):
 *             self = other
 *         self.nonlinear_op('divmod')             # <<<<<<<<<<<<<<
 * 
 *     def __pow__(self, other, mod):
 */
  __pyx_k_tuple_12 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 285; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_12);
  __Pyx_INCREF(((PyObject *)__pyx_n_s__divmod));
  PyTuple_SET_ITEM(__pyx_k_tuple_12, 0, ((PyObject *)__pyx_n_s__divmod));
  __Pyx_GIVEREF(((PyObject *)__pyx_n_s__divmod));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_12));

  /* "casuarius.pyx":290
 *         if not isinstance(self, LinearSymbolic):
 *             self = other
 *         self.nonlinear_op('**')             # <<<<<<<<<<<<<<
 * 
 *     def __lshift__(self, other):
 */
  __pyx_k_tuple_14 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_14);
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_13));
  PyTuple_SET_ITEM(__pyx_k_tuple_14, 0, ((PyObject *)__pyx_kp_s_13));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_13));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_14));

  /* "casuarius.pyx":295
 *         if not isinstance(self, LinearSymbolic):
 *             self = other
 *         self.nonlinear_op('<<')             # <<<<<<<<<<<<<<
 * 
 *     def __rshift__(self, other):
 */
  __pyx_k_tuple_16 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_16)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 295; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_16);
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_15));
  PyTuple_SET_ITEM(__pyx_k_tuple_16, 0, ((PyObject *)__pyx_kp_s_15));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_15));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_16));

  /* "casuarius.pyx":300
 *         if not isinstance(self, LinearSymbolic):
 *             self = other
 *         self.nonlinear_op('>>')             # <<<<<<<<<<<<<<
 * 
 *     def __and__(self, other):
 */
  __pyx_k_tuple_18 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_18)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 300; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_18);
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_17));
  PyTuple_SET_ITEM(__pyx_k_tuple_18, 0, ((PyObject *)__pyx_kp_s_17));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_17));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_18));

  /* "casuarius.pyx":305
 *         if not isinstance(self, LinearSymbolic):
 *             self = other
 *         self.nonlinear_op('&')             # <<<<<<<<<<<<<<
 * 
 *     def __or__(self, other):
 */
  __pyx_k_tuple_20 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_20)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 305; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_20);
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_19));
  PyTuple_SET_ITEM(__pyx_k_tuple_20, 0, ((PyObject *)__pyx_kp_s_19));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_19));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_20));

  /* "casuarius.pyx":310
 *         if not isinstance(self, LinearSymbolic):
 *             self = other
 *         self.nonlinear_op('|')             # <<<<<<<<<<<<<<
 * 
 *     def __xor__(self, other):
 */
  __pyx_k_tuple_22 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_22)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 310; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_22);
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_21));
  PyTuple_SET_ITEM(__pyx_k_tuple_22, 0, ((PyObject *)__pyx_kp_s_21));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_21));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_22));

  /* "casuarius.pyx":315
 *         if not isinstance(self, LinearSymbolic):
 *             self = other
 *         self.nonlinear_op('^')             # <<<<<<<<<<<<<<
 * 
 *     def __richcmp__(self, other, int op):
 */
  __pyx_k_tuple_24 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_24)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 315; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_24);
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_23));
  PyTuple_SET_ITEM(__pyx_k_tuple_24, 0, ((PyObject *)__pyx_kp_s_23));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_23));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_24));

  /* "casuarius.pyx":319
 *     def __richcmp__(self, other, int op):
 *         if op == 0 or op == 4 or op == 3:
 *             raise ValueError('Invalid constraint operation.')             # <<<<<<<<<<<<<<
 *         elif op == 2:
 *             return self._richcmp_eq(other)
 */
  __pyx_k_tuple_26 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_26)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_26);
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_25));
  PyTuple_SET_ITEM(__pyx_k_tuple_26, 0, ((PyObject *)__pyx_kp_s_25));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_25));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_26));

  /* "casuarius.pyx":511
 *     def __repr__(self):
 *         if len(self.terms) > 0:
 *             s = sorted(self.terms, key=operator.attrgetter('var.name'))             # <<<<<<<<<<<<<<
 *             terms = ' + '.join(str(term) for term in s)
 *             if self.constant > 0.0:
 */
  __pyx_k_tuple_38 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_38)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 511; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_38);
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_37));
  PyTuple_SET_ITEM(__pyx_k_tuple_38, 0, ((PyObject *)__pyx_kp_s_37));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_37));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_38));

  /* "casuarius.pyx":32
 *     # SORRY: Yes, it's an awkward API. Best I can do right now.
 * 
 *     def explains(self, linear_constraints):             # <<<<<<<<<<<<<<
 *         """ Filter a list of LinearConstraints to return only those
 *         LinearConstraints that caused the error.
 */
  __pyx_k_tuple_59 = PyTuple_New(4); if (unlikely(!__pyx_k_tuple_59)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 32; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_59);
  __Pyx_INCREF(((PyObject *)__pyx_n_s__self));
  PyTuple_SET_ITEM(__pyx_k_tuple_59, 0, ((PyObject *)__pyx_n_s__self));
  __Pyx_GIVEREF(((PyObject *)__pyx_n_s__self));
  __Pyx_INCREF(((PyObject *)__pyx_n_s__linear_constraints));
  PyTuple_SET_ITEM(__pyx_k_tuple_59, 1, ((PyObject *)__pyx_n_s__linear_constraints));
  __Pyx_GIVEREF(((PyObject *)__pyx_n_s__linear_constraints));
  __Pyx_INCREF(((PyObject *)__pyx_n_s__filtered));
  PyTuple_SET_ITEM(__pyx_k_tuple_59, 2, ((PyObject *)__pyx_n_s__filtered));
  __Pyx_GIVEREF(((PyObject *)__pyx_n_s__filtered));
  __Pyx_INCREF(((PyObject *)__pyx_n_s__cn));
  PyTuple_SET_ITEM(__pyx_k_tuple_59, 3, ((PyObject *)__pyx_n_s__cn));
  __Pyx_GIVEREF(((PyObject *)__pyx_n_s__cn));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_59));
  __pyx_k_codeobj_60 = (PyObject*)__Pyx_PyCode_New(2, 0, 4, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_59, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_61, __pyx_n_s__explains, 32, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_60)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 32; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  return 0;
  __pyx_L1_error:;
  return -1;
}

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initcasuarius(void); /*proto*/
PyMODINIT_FUNC initcasuarius(void)
#else
PyMODINIT_FUNC PyInit_casuarius(void); /*proto*/
PyMODINIT_FUNC PyInit_casuarius(void)
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannyDeclarations
  #if CYTHON_REFNANNY
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
  if (!__Pyx_RefNanny) {
      PyErr_Clear();
      __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
      if (!__Pyx_RefNanny)
          Py_FatalError("failed to import 'refnanny' module");
  }
  #endif
  __Pyx_RefNannySetupContext("PyMODINIT_FUNC PyInit_casuarius(void)", 0);
  if ( __Pyx_check_binary_version() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #ifdef __Pyx_CyFunction_USED
  if (__Pyx_CyFunction_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4(__Pyx_NAMESTR("casuarius"), __pyx_methods, __Pyx_DOCSTR(__pyx_k_57), 0, PYTHON_API_VERSION);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (!__pyx_m) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  #if PY_MAJOR_VERSION < 3
  Py_INCREF(__pyx_m);
  #endif
  __pyx_b = PyImport_AddModule(__Pyx_NAMESTR(__Pyx_BUILTIN_MODULE_NAME));
  if (!__pyx_b) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  if (__Pyx_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  /*--- Initialize various global constants etc. ---*/
  if (unlikely(__Pyx_InitGlobals() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_module_is_main_casuarius) {
    if (__Pyx_SetAttrString(__pyx_m, "__name__", __pyx_n_s____main__) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  /*--- Builtin init code ---*/
  if (unlikely(__Pyx_InitCachedBuiltins() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Constants init code ---*/
  if (unlikely(__Pyx_InitCachedConstants() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Global init code ---*/
  /*--- Variable export code ---*/
  /*--- Function export code ---*/
  /*--- Type init code ---*/
  if (PyType_Ready(&__pyx_type_9casuarius_SymbolicWeight) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 162; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "SymbolicWeight", (PyObject *)&__pyx_type_9casuarius_SymbolicWeight) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 162; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_9casuarius_SymbolicWeight = &__pyx_type_9casuarius_SymbolicWeight;
  if (PyType_Ready(&__pyx_type_9casuarius_Strength) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Strength", (PyObject *)&__pyx_type_9casuarius_Strength) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_9casuarius_Strength = &__pyx_type_9casuarius_Strength;
  __pyx_vtabptr_9casuarius_LinearSymbolic = &__pyx_vtable_9casuarius_LinearSymbolic;
  __pyx_vtable_9casuarius_LinearSymbolic._richcmp_le = (struct __pyx_obj_9casuarius_LinearConstraint *(*)(struct __pyx_obj_9casuarius_LinearSymbolic *, PyObject *, int __pyx_skip_dispatch))__pyx_f_9casuarius_14LinearSymbolic__richcmp_le;
  __pyx_vtable_9casuarius_LinearSymbolic._richcmp_ge = (struct __pyx_obj_9casuarius_LinearConstraint *(*)(struct __pyx_obj_9casuarius_LinearSymbolic *, PyObject *, int __pyx_skip_dispatch))__pyx_f_9casuarius_14LinearSymbolic__richcmp_ge;
  __pyx_vtable_9casuarius_LinearSymbolic._richcmp_eq = (struct __pyx_obj_9casuarius_LinearConstraint *(*)(struct __pyx_obj_9casuarius_LinearSymbolic *, PyObject *, int __pyx_skip_dispatch))__pyx_f_9casuarius_14LinearSymbolic__richcmp_eq;
  if (PyType_Ready(&__pyx_type_9casuarius_LinearSymbolic) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 242; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_9casuarius_LinearSymbolic.tp_dict, __pyx_vtabptr_9casuarius_LinearSymbolic) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 242; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "LinearSymbolic", (PyObject *)&__pyx_type_9casuarius_LinearSymbolic) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 242; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_9casuarius_LinearSymbolic = &__pyx_type_9casuarius_LinearSymbolic;
  __pyx_vtabptr_9casuarius_ConstraintVariable = &__pyx_vtable_9casuarius_ConstraintVariable;
  __pyx_vtable_9casuarius_ConstraintVariable.__pyx_base = *__pyx_vtabptr_9casuarius_LinearSymbolic;
  __pyx_type_9casuarius_ConstraintVariable.tp_base = __pyx_ptype_9casuarius_LinearSymbolic;
  if (PyType_Ready(&__pyx_type_9casuarius_ConstraintVariable) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 361; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_9casuarius_ConstraintVariable.tp_dict, __pyx_vtabptr_9casuarius_ConstraintVariable) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 361; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "ConstraintVariable", (PyObject *)&__pyx_type_9casuarius_ConstraintVariable) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 361; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_9casuarius_ConstraintVariable = &__pyx_type_9casuarius_ConstraintVariable;
  __pyx_vtabptr_9casuarius_Term = &__pyx_vtable_9casuarius_Term;
  __pyx_vtable_9casuarius_Term.__pyx_base = *__pyx_vtabptr_9casuarius_LinearSymbolic;
  __pyx_type_9casuarius_Term.tp_base = __pyx_ptype_9casuarius_LinearSymbolic;
  if (PyType_Ready(&__pyx_type_9casuarius_Term) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 424; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_9casuarius_Term.tp_dict, __pyx_vtabptr_9casuarius_Term) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 424; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Term", (PyObject *)&__pyx_type_9casuarius_Term) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 424; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_9casuarius_Term = &__pyx_type_9casuarius_Term;
  __pyx_vtabptr_9casuarius_LinearExpression = &__pyx_vtable_9casuarius_LinearExpression;
  __pyx_vtable_9casuarius_LinearExpression.__pyx_base = *__pyx_vtabptr_9casuarius_LinearSymbolic;
  __pyx_vtable_9casuarius_LinearExpression.as_cl_linear_expression = (P_LinearExpression (*)(struct __pyx_obj_9casuarius_LinearExpression *))__pyx_f_9casuarius_16LinearExpression_as_cl_linear_expression;
  __pyx_type_9casuarius_LinearExpression.tp_base = __pyx_ptype_9casuarius_LinearSymbolic;
  if (PyType_Ready(&__pyx_type_9casuarius_LinearExpression) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 486; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_9casuarius_LinearExpression.tp_dict, __pyx_vtabptr_9casuarius_LinearExpression) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 486; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "LinearExpression", (PyObject *)&__pyx_type_9casuarius_LinearExpression) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 486; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_9casuarius_LinearExpression = &__pyx_type_9casuarius_LinearExpression;
  __pyx_vtabptr_9casuarius_LinearConstraint = &__pyx_vtable_9casuarius_LinearConstraint;
  __pyx_vtable_9casuarius_LinearConstraint.explains_exception = (int (*)(struct __pyx_obj_9casuarius_LinearConstraint *, PyObject *, int __pyx_skip_dispatch))__pyx_f_9casuarius_16LinearConstraint_explains_exception;
  __pyx_vtable_9casuarius_LinearConstraint.as_cl_linear_constraint = (P_Constraint *(*)(struct __pyx_obj_9casuarius_LinearConstraint *))__pyx_f_9casuarius_16LinearConstraint_as_cl_linear_constraint;
  if (PyType_Ready(&__pyx_type_9casuarius_LinearConstraint) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 591; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_9casuarius_LinearConstraint.tp_dict, __pyx_vtabptr_9casuarius_LinearConstraint) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 591; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "LinearConstraint", (PyObject *)&__pyx_type_9casuarius_LinearConstraint) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 591; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_9casuarius_LinearConstraint = &__pyx_type_9casuarius_LinearConstraint;
  __pyx_vtabptr_9casuarius_LEConstraint = &__pyx_vtable_9casuarius_LEConstraint;
  __pyx_vtable_9casuarius_LEConstraint.__pyx_base = *__pyx_vtabptr_9casuarius_LinearConstraint;
  __pyx_vtable_9casuarius_LEConstraint.__pyx_base.as_cl_linear_constraint = (P_Constraint *(*)(struct __pyx_obj_9casuarius_LinearConstraint *))__pyx_f_9casuarius_12LEConstraint_as_cl_linear_constraint;
  __pyx_type_9casuarius_LEConstraint.tp_base = __pyx_ptype_9casuarius_LinearConstraint;
  if (PyType_Ready(&__pyx_type_9casuarius_LEConstraint) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 674; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_9casuarius_LEConstraint.tp_dict, __pyx_vtabptr_9casuarius_LEConstraint) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 674; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "LEConstraint", (PyObject *)&__pyx_type_9casuarius_LEConstraint) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 674; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_9casuarius_LEConstraint = &__pyx_type_9casuarius_LEConstraint;
  __pyx_vtabptr_9casuarius_GEConstraint = &__pyx_vtable_9casuarius_GEConstraint;
  __pyx_vtable_9casuarius_GEConstraint.__pyx_base = *__pyx_vtabptr_9casuarius_LinearConstraint;
  __pyx_vtable_9casuarius_GEConstraint.__pyx_base.as_cl_linear_constraint = (P_Constraint *(*)(struct __pyx_obj_9casuarius_LinearConstraint *))__pyx_f_9casuarius_12GEConstraint_as_cl_linear_constraint;
  __pyx_type_9casuarius_GEConstraint.tp_base = __pyx_ptype_9casuarius_LinearConstraint;
  if (PyType_Ready(&__pyx_type_9casuarius_GEConstraint) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 692; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_9casuarius_GEConstraint.tp_dict, __pyx_vtabptr_9casuarius_GEConstraint) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 692; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "GEConstraint", (PyObject *)&__pyx_type_9casuarius_GEConstraint) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 692; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_9casuarius_GEConstraint = &__pyx_type_9casuarius_GEConstraint;
  __pyx_vtabptr_9casuarius_EQConstraint = &__pyx_vtable_9casuarius_EQConstraint;
  __pyx_vtable_9casuarius_EQConstraint.__pyx_base = *__pyx_vtabptr_9casuarius_LinearConstraint;
  __pyx_vtable_9casuarius_EQConstraint.__pyx_base.as_cl_linear_constraint = (P_Constraint *(*)(struct __pyx_obj_9casuarius_LinearConstraint *))__pyx_f_9casuarius_12EQConstraint_as_cl_linear_constraint;
  __pyx_type_9casuarius_EQConstraint.tp_base = __pyx_ptype_9casuarius_LinearConstraint;
  if (PyType_Ready(&__pyx_type_9casuarius_EQConstraint) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 710; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_9casuarius_EQConstraint.tp_dict, __pyx_vtabptr_9casuarius_EQConstraint) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 710; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "EQConstraint", (PyObject *)&__pyx_type_9casuarius_EQConstraint) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 710; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_9casuarius_EQConstraint = &__pyx_type_9casuarius_EQConstraint;
  __pyx_vtabptr_9casuarius_Solver = &__pyx_vtable_9casuarius_Solver;
  __pyx_vtable_9casuarius_Solver._begin_edit_suggest_values = (PyObject *(*)(struct __pyx_obj_9casuarius_Solver *, PyObject *, struct __pyx_opt_args_9casuarius_6Solver__begin_edit_suggest_values *__pyx_optional_args))__pyx_f_9casuarius_6Solver__begin_edit_suggest_values;
  __pyx_vtable_9casuarius_Solver._end_edit = (PyObject *(*)(struct __pyx_obj_9casuarius_Solver *))__pyx_f_9casuarius_6Solver__end_edit;
  if (PyType_Ready(&__pyx_type_9casuarius_Solver) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 728; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_9casuarius_Solver.tp_dict, __pyx_vtabptr_9casuarius_Solver) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 728; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Solver", (PyObject *)&__pyx_type_9casuarius_Solver) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 728; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_9casuarius_Solver = &__pyx_type_9casuarius_Solver;
  if (PyType_Ready(&__pyx_type_9casuarius_SolverEditContext) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 804; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "SolverEditContext", (PyObject *)&__pyx_type_9casuarius_SolverEditContext) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 804; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_9casuarius_SolverEditContext = &__pyx_type_9casuarius_SolverEditContext;
  if (PyType_Ready(&__pyx_type_9casuarius___pyx_scope_struct____mul__) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 182; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_9casuarius___pyx_scope_struct____mul__ = &__pyx_type_9casuarius___pyx_scope_struct____mul__;
  if (PyType_Ready(&__pyx_type_9casuarius___pyx_scope_struct_1_genexpr) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_9casuarius___pyx_scope_struct_1_genexpr = &__pyx_type_9casuarius___pyx_scope_struct_1_genexpr;
  if (PyType_Ready(&__pyx_type_9casuarius___pyx_scope_struct_2_reduce_terms) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 490; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_9casuarius___pyx_scope_struct_2_reduce_terms = &__pyx_type_9casuarius___pyx_scope_struct_2_reduce_terms;
  if (PyType_Ready(&__pyx_type_9casuarius___pyx_scope_struct_3_genexpr) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_9casuarius___pyx_scope_struct_3_genexpr = &__pyx_type_9casuarius___pyx_scope_struct_3_genexpr;
  if (PyType_Ready(&__pyx_type_9casuarius___pyx_scope_struct_4___repr__) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 509; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_9casuarius___pyx_scope_struct_4___repr__ = &__pyx_type_9casuarius___pyx_scope_struct_4___repr__;
  if (PyType_Ready(&__pyx_type_9casuarius___pyx_scope_struct_5_genexpr) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_9casuarius___pyx_scope_struct_5_genexpr = &__pyx_type_9casuarius___pyx_scope_struct_5_genexpr;
  /*--- Type import code ---*/
  /*--- Variable import code ---*/
  /*--- Function import code ---*/
  /*--- Execution code ---*/

  /* "casuarius.pyx":10
 * from libcpp.vector cimport vector
 * 
 * import operator             # <<<<<<<<<<<<<<
 * from collections import defaultdict
 * 
 */
  __pyx_t_1 = __Pyx_Import(((PyObject *)__pyx_n_s__operator), 0, -1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 10; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__operator, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 10; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "casuarius.pyx":11
 * 
 * import operator
 * from collections import defaultdict             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_n_s__defaultdict));
  PyList_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_n_s__defaultdict));
  __Pyx_GIVEREF(((PyObject *)__pyx_n_s__defaultdict));
  __pyx_t_2 = __Pyx_Import(((PyObject *)__pyx_n_s__collections), ((PyObject *)__pyx_t_1), -1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__defaultdict);
  if (__pyx_t_1 == NULL) {
    if (PyErr_ExceptionMatches(PyExc_AttributeError)) __Pyx_RaiseImportError(__pyx_n_s__defaultdict);
    if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__defaultdict, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "casuarius.pyx":19
 * 
 * 
 * class CassowaryError(Exception):             # <<<<<<<<<<<<<<
 *     """ An error raised from Cassowary.
 *     """
 */
  __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 19; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 19; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_builtin_Exception);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_builtin_Exception);
  __Pyx_GIVEREF(__pyx_builtin_Exception);
  if (PyDict_SetItemString(((PyObject *)__pyx_t_2), "__doc__", ((PyObject *)__pyx_kp_s_58)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 19; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __Pyx_CreateClass(((PyObject *)__pyx_t_1), ((PyObject *)__pyx_t_2), __pyx_n_s__CassowaryError, __pyx_n_s__casuarius); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 19; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__CassowaryError, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 19; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;

  /* "casuarius.pyx":23
 *     """
 * 
 * class ExplainedCassowaryError(CassowaryError):             # <<<<<<<<<<<<<<
 *     """ An error raised from Cassowary with a list of constraints that
 *     are involved in the error.
 */
  __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 23; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));

  /* "casuarius.pyx":32
 *     # SORRY: Yes, it's an awkward API. Best I can do right now.
 * 
 *     def explains(self, linear_constraints):             # <<<<<<<<<<<<<<
 *         """ Filter a list of LinearConstraints to return only those
 *         LinearConstraints that caused the error.
 */
  __pyx_t_3 = __Pyx_CyFunction_NewEx(&__pyx_mdef_9casuarius_23ExplainedCassowaryError_1explains, 0, NULL, __pyx_n_s__casuarius, ((PyObject *)__pyx_k_codeobj_60)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 32; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyObject_SetItem(__pyx_t_2, __pyx_n_s__explains, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 32; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "casuarius.pyx":23
 *     """
 * 
 * class ExplainedCassowaryError(CassowaryError):             # <<<<<<<<<<<<<<
 *     """ An error raised from Cassowary with a list of constraints that
 *     are involved in the error.
 */
  __pyx_t_3 = __Pyx_GetName(__pyx_m, __pyx_n_s__CassowaryError); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 23; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 23; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_3 = 0;
  if (PyDict_SetItemString(((PyObject *)__pyx_t_2), "__doc__", ((PyObject *)__pyx_kp_s_62)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 23; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __Pyx_CreateClass(((PyObject *)__pyx_t_1), ((PyObject *)__pyx_t_2), __pyx_n_s_1, __pyx_n_s__casuarius); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 23; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_1, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 23; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;

  /* "casuarius.pyx":225
 * 
 * 
 * required = Strength('required', SymbolicWeight((1000.0, 1000.0, 1000.0)), is_required=True)             # <<<<<<<<<<<<<<
 * strong = Strength('strong', SymbolicWeight((1.0, 0.0, 0.0)))
 * medium = Strength('medium', SymbolicWeight((0.0, 1.0, 0.0)))
 */
  __pyx_t_2 = PyFloat_FromDouble(1000.0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(1000.0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyFloat_FromDouble(1000.0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_1 = 0;
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_t_4));
  __Pyx_GIVEREF(((PyObject *)__pyx_t_4));
  __pyx_t_4 = 0;
  __pyx_t_4 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_SymbolicWeight)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_n_s__required));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_n_s__required));
  __Pyx_GIVEREF(((PyObject *)__pyx_n_s__required));
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  __pyx_t_4 = 0;
  __pyx_t_4 = PyDict_New(); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_4));
  __pyx_t_3 = __Pyx_PyBool_FromLong(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_4, ((PyObject *)__pyx_n_s__is_required), __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_Strength)), ((PyObject *)__pyx_t_1), ((PyObject *)__pyx_t_4)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__required, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "casuarius.pyx":226
 * 
 * required = Strength('required', SymbolicWeight((1000.0, 1000.0, 1000.0)), is_required=True)
 * strong = Strength('strong', SymbolicWeight((1.0, 0.0, 0.0)))             # <<<<<<<<<<<<<<
 * medium = Strength('medium', SymbolicWeight((0.0, 1.0, 0.0)))
 * weak = Strength('weak', SymbolicWeight((0.0, 0.0, 1.0)))
 */
  __pyx_t_3 = PyFloat_FromDouble(1.0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyFloat_FromDouble(0.0); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_1 = PyFloat_FromDouble(0.0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_1 = 0;
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_t_2));
  __Pyx_GIVEREF(((PyObject *)__pyx_t_2));
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_SymbolicWeight)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_n_s__strong));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_n_s__strong));
  __Pyx_GIVEREF(((PyObject *)__pyx_n_s__strong));
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_Strength)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__strong, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "casuarius.pyx":227
 * required = Strength('required', SymbolicWeight((1000.0, 1000.0, 1000.0)), is_required=True)
 * strong = Strength('strong', SymbolicWeight((1.0, 0.0, 0.0)))
 * medium = Strength('medium', SymbolicWeight((0.0, 1.0, 0.0)))             # <<<<<<<<<<<<<<
 * weak = Strength('weak', SymbolicWeight((0.0, 0.0, 1.0)))
 * 
 */
  __pyx_t_2 = PyFloat_FromDouble(0.0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyFloat_FromDouble(1.0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = PyFloat_FromDouble(0.0); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = PyTuple_New(3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  __pyx_t_2 = 0;
  __pyx_t_1 = 0;
  __pyx_t_4 = 0;
  __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_t_3));
  __Pyx_GIVEREF(((PyObject *)__pyx_t_3));
  __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_SymbolicWeight)), ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
  __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_INCREF(((PyObject *)__pyx_n_s__medium));
  PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_n_s__medium));
  __Pyx_GIVEREF(((PyObject *)__pyx_n_s__medium));
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_Strength)), ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__medium, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "casuarius.pyx":228
 * strong = Strength('strong', SymbolicWeight((1.0, 0.0, 0.0)))
 * medium = Strength('medium', SymbolicWeight((0.0, 1.0, 0.0)))
 * weak = Strength('weak', SymbolicWeight((0.0, 0.0, 1.0)))             # <<<<<<<<<<<<<<
 * 
 * STRENGTH_MAP = dict(
 */
  __pyx_t_3 = PyFloat_FromDouble(0.0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 228; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyFloat_FromDouble(0.0); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 228; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_1 = PyFloat_FromDouble(1.0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 228; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 228; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_1 = 0;
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 228; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_t_2));
  __Pyx_GIVEREF(((PyObject *)__pyx_t_2));
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_SymbolicWeight)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 228; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 228; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_n_s__weak));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_n_s__weak));
  __Pyx_GIVEREF(((PyObject *)__pyx_n_s__weak));
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_9casuarius_Strength)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 228; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__weak, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 228; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "casuarius.pyx":230
 * weak = Strength('weak', SymbolicWeight((0.0, 0.0, 1.0)))
 * 
 * STRENGTH_MAP = dict(             # <<<<<<<<<<<<<<
 *     required=required,
 *     strong=strong,
 */
  __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 230; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));

  /* "casuarius.pyx":231
 * 
 * STRENGTH_MAP = dict(
 *     required=required,             # <<<<<<<<<<<<<<
 *     strong=strong,
 *     medium=medium,
 */
  __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__required); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 231; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_2, ((PyObject *)__pyx_n_s__required), __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 230; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "casuarius.pyx":232
 * STRENGTH_MAP = dict(
 *     required=required,
 *     strong=strong,             # <<<<<<<<<<<<<<
 *     medium=medium,
 *     weak=weak,
 */
  __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__strong); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 232; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_2, ((PyObject *)__pyx_n_s__strong), __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 230; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "casuarius.pyx":233
 *     required=required,
 *     strong=strong,
 *     medium=medium,             # <<<<<<<<<<<<<<
 *     weak=weak,
 * )
 */
  __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__medium); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 233; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_2, ((PyObject *)__pyx_n_s__medium), __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 230; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "casuarius.pyx":234
 *     strong=strong,
 *     medium=medium,
 *     weak=weak,             # <<<<<<<<<<<<<<
 * )
 * 
 */
  __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__weak); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 234; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_2, ((PyObject *)__pyx_n_s__weak), __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 230; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__STRENGTH_MAP, ((PyObject *)__pyx_t_2)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 230; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;

  /* "casuarius.pyx":498
 *         return terms
 * 
 *     def __cinit__(self, terms, constant=0.0):             # <<<<<<<<<<<<<<
 *         self.terms = self.reduce_terms(terms)
 *         self.constant = constant
 */
  __pyx_t_2 = PyFloat_FromDouble(0.0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 498; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_k_36 = __pyx_t_2;
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;

  /* "casuarius.pyx":603
 *         self.rhs = as_linear_expression(rhs)
 * 
 *     def __init__(self, lhs, rhs, Strength strength=required, double weight=1.0):             # <<<<<<<<<<<<<<
 *         self._strength = strength
 *         self._weight = weight
 */
  __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__required); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 603; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_9casuarius_Strength))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 603; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_k_43 = ((struct __pyx_obj_9casuarius_Strength *)__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;

  /* "casuarius.pyx":676
 * cdef class LEConstraint(LinearConstraint):
 * 
 *     def __init__(self, lhs, rhs, Strength strength=required, double weight=1.0):             # <<<<<<<<<<<<<<
 *         LinearConstraint.__init__(self, lhs, rhs, strength, weight)
 *         self.op = b'<='
 */
  __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__required); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 676; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_9casuarius_Strength))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 676; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_k_48 = ((struct __pyx_obj_9casuarius_Strength *)__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;

  /* "casuarius.pyx":694
 * cdef class GEConstraint(LinearConstraint):
 * 
 *     def __init__(self, lhs, rhs, Strength strength=required, double weight=1.0):             # <<<<<<<<<<<<<<
 *         LinearConstraint.__init__(self, lhs, rhs, strength, weight)
 *         self.op = b'>='
 */
  __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__required); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 694; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_9casuarius_Strength))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 694; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_k_50 = ((struct __pyx_obj_9casuarius_Strength *)__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;

  /* "casuarius.pyx":712
 * cdef class EQConstraint(LinearConstraint):
 * 
 *     def __init__(self, lhs, rhs, Strength strength=required, double weight=1.0):             # <<<<<<<<<<<<<<
 *         LinearConstraint.__init__(self, lhs, rhs, strength, weight)
 *         self.op = b'=='
 */
  __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__required); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 712; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_9casuarius_Strength))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 712; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_k_52 = ((struct __pyx_obj_9casuarius_Strength *)__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;

  /* "casuarius.pyx":766
 *         self.solver.RemoveConstraint(deref(constraint.cl_linear_constraint))
 * 
 *     def suggest_values(self, var_vals, Strength default_strength=strong, double default_weight=1.0):             # <<<<<<<<<<<<<<
 *         return SolverEditContext(self, var_vals, default_strength, default_weight)
 * 
 */
  __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__strong); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 766; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_9casuarius_Strength))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 766; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_k_54 = ((struct __pyx_obj_9casuarius_Strength *)__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;

  /* "casuarius.pyx":769
 *         return SolverEditContext(self, var_vals, default_strength, default_weight)
 * 
 *     cdef object _begin_edit_suggest_values(self, var_vals, Strength default_strength=strong, double default_weight=1.0):             # <<<<<<<<<<<<<<
 *         cdef ConstraintVariable variable
 *         cdef double value
 */
  __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__strong); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 769; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_9casuarius_Strength))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 769; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_k_55 = ((struct __pyx_obj_9casuarius_Strength *)__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;

  /* "casuarius.pyx":813
 * 
 *     def __cinit__(self, solver, suggest_var_vals,
 *         Strength default_strength=strong, double default_weight=1.0):             # <<<<<<<<<<<<<<
 *         self.solver = solver
 *         self.suggest_var_vals = suggest_var_vals
 */
  __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__strong); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 813; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_9casuarius_Strength))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 813; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_k_56 = ((struct __pyx_obj_9casuarius_Strength *)__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;

  /* "casuarius.pyx":1
 * """ Cython wrapper for Cassowary.             # <<<<<<<<<<<<<<
 * """
 * 
 */
  __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s____test__, ((PyObject *)__pyx_t_2)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  if (__pyx_m) {
    __Pyx_AddTraceback("init casuarius", __pyx_clineno, __pyx_lineno, __pyx_filename);
    Py_DECREF(__pyx_m); __pyx_m = 0;
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init casuarius");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if PY_MAJOR_VERSION < 3
  return;
  #else
  return __pyx_m;
  #endif
}

/* Runtime support code */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule((char *)modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, (char *)"RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif /* CYTHON_REFNANNY */

static PyObject *__Pyx_GetName(PyObject *dict, PyObject *name) {
    PyObject *result;
    result = PyObject_GetAttr(dict, name);
    if (!result) {
        if (dict != __pyx_b) {
            PyErr_Clear();
            result = PyObject_GetAttr(__pyx_b, name);
        }
        if (!result) {
            PyErr_SetObject(PyExc_NameError, name);
        }
    }
    return result;
}

static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%s() takes %s %"PY_FORMAT_SIZE_T"d positional argument%s (%"PY_FORMAT_SIZE_T"d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AS_STRING(kw_name));
        #endif
}

static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
        } else {
            #if PY_MAJOR_VERSION < 3
            if (unlikely(!PyString_CheckExact(key)) && unlikely(!PyString_Check(key))) {
            #else
            if (unlikely(!PyUnicode_Check(key))) {
            #endif
                goto invalid_keyword_type;
            } else {
                for (name = first_kw_arg; *name; name++) {
                    #if PY_MAJOR_VERSION >= 3
                    if (PyUnicode_GET_SIZE(**name) == PyUnicode_GET_SIZE(key) &&
                        PyUnicode_Compare(**name, key) == 0) break;
                    #else
                    if (PyString_GET_SIZE(**name) == PyString_GET_SIZE(key) &&
                        _PyString_Eq(**name, key)) break;
                    #endif
                }
                if (*name) {
                    values[name-argnames] = value;
                } else {
                    for (name=argnames; name != first_kw_arg; name++) {
                        if (**name == key) goto arg_passed_twice;
                        #if PY_MAJOR_VERSION >= 3
                        if (PyUnicode_GET_SIZE(**name) == PyUnicode_GET_SIZE(key) &&
                            PyUnicode_Compare(**name, key) == 0) goto arg_passed_twice;
                        #else
                        if (PyString_GET_SIZE(**name) == PyString_GET_SIZE(key) &&
                            _PyString_Eq(**name, key)) goto arg_passed_twice;
                        #endif
                    }
                    if (kwds2) {
                        if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
                    } else {
                        goto invalid_keyword;
                    }
                }
            }
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, **name);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%s() got an unexpected keyword argument '%s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyThreadState *tstate = PyThreadState_GET();
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_Restore(type, value, tb);
#endif
}
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyThreadState *tstate = PyThreadState_GET();
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(type, value, tb);
#endif
}

#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,
                        CYTHON_UNUSED PyObject *cause) {
    Py_XINCREF(type);
    Py_XINCREF(value);
    Py_XINCREF(tb);
    if (tb == Py_None) {
        Py_DECREF(tb);
        tb = 0;
    }
    else if (tb != NULL && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto raise_error;
    }
    if (value == NULL) {
        value = Py_None;
        Py_INCREF(value);
    }
    #if PY_VERSION_HEX < 0x02050000
    if (!PyClass_Check(type))
    #else
    if (!PyType_Check(type))
    #endif
    {
        if (value != Py_None) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        Py_DECREF(value);
        value = type;
        #if PY_VERSION_HEX < 0x02050000
            if (PyInstance_Check(type)) {
                type = (PyObject*) ((PyInstanceObject*)type)->in_class;
                Py_INCREF(type);
            }
            else {
                type = 0;
                PyErr_SetString(PyExc_TypeError,
                    "raise: exception must be an old-style class or instance");
                goto raise_error;
            }
        #else
            type = (PyObject*) Py_TYPE(type);
            Py_INCREF(type);
            if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
                PyErr_SetString(PyExc_TypeError,
                    "raise: exception class must be a subclass of BaseException");
                goto raise_error;
            }
        #endif
    }
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else /* Python 3+ */
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (!PyExceptionClass_Check(type)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
    if (cause) {
        PyObject *fixed_cause;
        if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        }
        else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        }
        else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        if (!value) {
            value = PyObject_CallObject(type, NULL);
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
        PyThreadState *tstate = PyThreadState_GET();
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
    }
bad:
    return;
}
#endif

static int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact)
{
    if (!type) {
        PyErr_Format(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (none_allowed && obj == Py_None) return 1;
    else if (exact) {
        if (Py_TYPE(obj) == type) return 1;
    }
    else {
        if (PyObject_TypeCheck(obj, type)) return 1;
    }
    PyErr_Format(PyExc_TypeError,
        "Argument '%s' has incorrect type (expected %s, got %s)",
        name, type->tp_name, Py_TYPE(obj)->tp_name);
    return 0;
}



static CYTHON_INLINE void __Pyx_RaiseClosureNameError(const char *varname) {
    PyErr_Format(PyExc_NameError, "free variable '%s' referenced before assignment in enclosing scope", varname);
}

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
    if (unlikely(!type)) {
        PyErr_Format(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (likely(PyObject_TypeCheck(obj, type)))
        return 1;
    PyErr_Format(PyExc_TypeError, "Cannot convert %.200s to %.200s",
                 Py_TYPE(obj)->tp_name, type->tp_name);
    return 0;
}

static double __Pyx__PyObject_AsDouble(PyObject* obj) {
    PyObject* float_value;
    if (Py_TYPE(obj)->tp_as_number && Py_TYPE(obj)->tp_as_number->nb_float) {
        return PyFloat_AsDouble(obj);
    } else if (PyUnicode_CheckExact(obj) || PyBytes_CheckExact(obj)) {
#if PY_MAJOR_VERSION >= 3
        float_value = PyFloat_FromString(obj);
#else
        float_value = PyFloat_FromString(obj, 0);
#endif
    } else {
        PyObject* args = PyTuple_New(1);
        if (unlikely(!args)) goto bad;
        PyTuple_SET_ITEM(args, 0, obj);
        float_value = PyObject_Call((PyObject*)&PyFloat_Type, args, 0);
        PyTuple_SET_ITEM(args, 0, 0);
        Py_DECREF(args);
    }
    if (likely(float_value)) {
        double value = PyFloat_AS_DOUBLE(float_value);
        Py_DECREF(float_value);
        return value;
    }
bad:
    return (double)-1;
}

static CYTHON_INLINE void __Pyx_RaiseUnboundLocalError(const char *varname) {
    PyErr_Format(PyExc_UnboundLocalError, "local variable '%s' referenced before assignment", varname);
}

static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
    PyErr_Format(PyExc_ValueError,
                 "need more than %"PY_FORMAT_SIZE_T"d value%s to unpack",
                 index, (index == 1) ? "" : "s");
}

static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected) {
    PyErr_Format(PyExc_ValueError,
                 "too many values to unpack (expected %"PY_FORMAT_SIZE_T"d)", expected);
}

static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected) {
    if (unlikely(retval)) {
        Py_DECREF(retval);
        __Pyx_RaiseTooManyValuesError(expected);
        return -1;
    } else if (PyErr_Occurred()) {
        if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) {
            PyErr_Clear();
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
}

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, long level) {
    PyObject *py_import = 0;
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    py_import = __Pyx_GetAttrString(__pyx_b, "__import__");
    if (!py_import)
        goto bad;
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    #if PY_VERSION_HEX >= 0x02050000
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if (strchr(__Pyx_MODULE_NAME, '.')) {
                /* try package relative import first */
                PyObject *py_level = PyInt_FromLong(1);
                if (!py_level)
                    goto bad;
                module = PyObject_CallFunctionObjArgs(py_import,
                    name, global_dict, empty_dict, list, py_level, NULL);
                Py_DECREF(py_level);
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0; /* try absolute import on failure */
        }
        #endif
        if (!module) {
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, NULL);
            Py_DECREF(py_level);
        }
    }
    #else
    if (level>0) {
        PyErr_SetString(PyExc_RuntimeError, "Relative import is not supported for Python <=2.4.");
        goto bad;
    }
    module = PyObject_CallFunctionObjArgs(py_import,
        name, global_dict, empty_dict, list, NULL);
    #endif
bad:
    Py_XDECREF(empty_list);
    Py_XDECREF(py_import);
    Py_XDECREF(empty_dict);
    return module;
}

static CYTHON_INLINE void __Pyx_RaiseImportError(PyObject *name) {
#if PY_MAJOR_VERSION < 3
    PyErr_Format(PyExc_ImportError, "cannot import name %.230s",
                 PyString_AsString(name));
#else
    PyErr_Format(PyExc_ImportError, "cannot import name %S", name);
#endif
}

static PyObject *__Pyx_FindPy2Metaclass(PyObject *bases) {
    PyObject *metaclass;
    /* Default metaclass */
#if PY_MAJOR_VERSION < 3
    if (PyTuple_Check(bases) && PyTuple_GET_SIZE(bases) > 0) {
        PyObject *base = PyTuple_GET_ITEM(bases, 0);
        metaclass = PyObject_GetAttrString(base, (char *)"__class__");
        if (!metaclass) {
            PyErr_Clear();
            metaclass = (PyObject*) Py_TYPE(base);
        }
    } else {
        metaclass = (PyObject *) &PyClass_Type;
    }
#else
    if (PyTuple_Check(bases) && PyTuple_GET_SIZE(bases) > 0) {
        PyObject *base = PyTuple_GET_ITEM(bases, 0);
        metaclass = (PyObject*) Py_TYPE(base);
    } else {
        metaclass = (PyObject *) &PyType_Type;
    }
#endif
    Py_INCREF(metaclass);
    return metaclass;
}

static PyObject *__Pyx_CreateClass(PyObject *bases, PyObject *dict, PyObject *name,
                                   PyObject *modname) {
    PyObject *result;
    PyObject *metaclass;
    if (PyDict_SetItemString(dict, "__module__", modname) < 0)
        return NULL;
    /* Python2 __metaclass__ */
    metaclass = PyDict_GetItemString(dict, "__metaclass__");
    if (metaclass) {
        Py_INCREF(metaclass);
    } else {
        metaclass = __Pyx_FindPy2Metaclass(bases);
    }
    result = PyObject_CallFunctionObjArgs(metaclass, name, bases, dict, NULL);
    Py_DECREF(metaclass);
    return result;
}

static PyObject *
__Pyx_CyFunction_get_doc(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *closure)
{
    if (op->func_doc == NULL && op->func.m_ml->ml_doc) {
#if PY_MAJOR_VERSION >= 3
        op->func_doc = PyUnicode_FromString(op->func.m_ml->ml_doc);
#else
        op->func_doc = PyString_FromString(op->func.m_ml->ml_doc);
#endif
    }
    if (op->func_doc == 0) {
        Py_INCREF(Py_None);
        return Py_None;
    }
    Py_INCREF(op->func_doc);
    return op->func_doc;
}
static int
__Pyx_CyFunction_set_doc(__pyx_CyFunctionObject *op, PyObject *value)
{
    PyObject *tmp = op->func_doc;
    if (value == NULL)
        op->func_doc = Py_None; /* Mark as deleted */
    else
        op->func_doc = value;
    Py_INCREF(op->func_doc);
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_name(__pyx_CyFunctionObject *op)
{
    if (op->func_name == NULL) {
#if PY_MAJOR_VERSION >= 3
        op->func_name = PyUnicode_InternFromString(op->func.m_ml->ml_name);
#else
        op->func_name = PyString_InternFromString(op->func.m_ml->ml_name);
#endif
    }
    Py_INCREF(op->func_name);
    return op->func_name;
}
static int
__Pyx_CyFunction_set_name(__pyx_CyFunctionObject *op, PyObject *value)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (value == NULL || !PyUnicode_Check(value)) {
#else
    if (value == NULL || !PyString_Check(value)) {
#endif
        PyErr_SetString(PyExc_TypeError,
                        "__name__ must be set to a string object");
        return -1;
    }
    tmp = op->func_name;
    Py_INCREF(value);
    op->func_name = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_self(__pyx_CyFunctionObject *m, CYTHON_UNUSED void *closure)
{
    PyObject *self;
    self = m->func_closure;
    if (self == NULL)
        self = Py_None;
    Py_INCREF(self);
    return self;
}
static PyObject *
__Pyx_CyFunction_get_dict(__pyx_CyFunctionObject *op)
{
    if (op->func_dict == NULL) {
        op->func_dict = PyDict_New();
        if (op->func_dict == NULL)
            return NULL;
    }
    Py_INCREF(op->func_dict);
    return op->func_dict;
}
static int
__Pyx_CyFunction_set_dict(__pyx_CyFunctionObject *op, PyObject *value)
{
    PyObject *tmp;
    if (value == NULL) {
        PyErr_SetString(PyExc_TypeError,
               "function's dictionary may not be deleted");
        return -1;
    }
    if (!PyDict_Check(value)) {
        PyErr_SetString(PyExc_TypeError,
               "setting function's dictionary to a non-dict");
        return -1;
    }
    tmp = op->func_dict;
    Py_INCREF(value);
    op->func_dict = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_globals(CYTHON_UNUSED __pyx_CyFunctionObject *op)
{
    PyObject* dict = PyModule_GetDict(__pyx_m);
    Py_XINCREF(dict);
    return dict;
}
static PyObject *
__Pyx_CyFunction_get_closure(CYTHON_UNUSED __pyx_CyFunctionObject *op)
{
    Py_INCREF(Py_None);
    return Py_None;
}
static PyObject *
__Pyx_CyFunction_get_code(__pyx_CyFunctionObject *op)
{
    PyObject* result = (op->func_code) ? op->func_code : Py_None;
    Py_INCREF(result);
    return result;
}
static PyObject *
__Pyx_CyFunction_get_defaults(__pyx_CyFunctionObject *op)
{
    if (op->defaults_tuple) {
        Py_INCREF(op->defaults_tuple);
        return op->defaults_tuple;
    }
    if (op->defaults_getter) {
        PyObject *res = op->defaults_getter((PyObject *) op);
        if (res) {
            Py_INCREF(res);
            op->defaults_tuple = res;
        }
        return res;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
static PyGetSetDef __pyx_CyFunction_getsets[] = {
    {(char *) "func_doc", (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "__doc__",  (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "func_name", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__name__", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__self__", (getter)__Pyx_CyFunction_get_self, 0, 0, 0},
    {(char *) "func_dict", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "__dict__", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "func_globals", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "__globals__", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "func_closure", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "__closure__", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "func_code", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "__code__", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "func_defaults", (getter)__Pyx_CyFunction_get_defaults, 0, 0, 0},
    {(char *) "__defaults__", (getter)__Pyx_CyFunction_get_defaults, 0, 0, 0},
    {0, 0, 0, 0, 0}
};
#ifndef PY_WRITE_RESTRICTED /* < Py2.5 */
#define PY_WRITE_RESTRICTED WRITE_RESTRICTED
#endif
static PyMemberDef __pyx_CyFunction_members[] = {
    {(char *) "__module__", T_OBJECT, offsetof(__pyx_CyFunctionObject, func.m_module), PY_WRITE_RESTRICTED, 0},
    {0, 0, 0,  0, 0}
};
static PyObject *
__Pyx_CyFunction_reduce(__pyx_CyFunctionObject *m, CYTHON_UNUSED PyObject *args)
{
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(m->func.m_ml->ml_name);
#else
    return PyString_FromString(m->func.m_ml->ml_name);
#endif
}
static PyMethodDef __pyx_CyFunction_methods[] = {
    {__Pyx_NAMESTR("__reduce__"), (PyCFunction)__Pyx_CyFunction_reduce, METH_VARARGS, 0},
    {0, 0, 0, 0}
};
static PyObject *__Pyx_CyFunction_New(PyTypeObject *type, PyMethodDef *ml, int flags,
                                      PyObject *closure, PyObject *module, PyObject* code) {
    __pyx_CyFunctionObject *op = PyObject_GC_New(__pyx_CyFunctionObject, type);
    if (op == NULL)
        return NULL;
    op->flags = flags;
    op->func_weakreflist = NULL;
    op->func.m_ml = ml;
    op->func.m_self = (PyObject *) op;
    Py_XINCREF(closure);
    op->func_closure = closure;
    Py_XINCREF(module);
    op->func.m_module = module;
    op->func_dict = NULL;
    op->func_name = NULL;
    op->func_doc = NULL;
    op->func_classobj = NULL;
    Py_XINCREF(code);
    op->func_code = code;
    op->defaults_pyobjects = 0;
    op->defaults = NULL;
    op->defaults_tuple = NULL;
    op->defaults_getter = NULL;
    PyObject_GC_Track(op);
    return (PyObject *) op;
}
static int
__Pyx_CyFunction_clear(__pyx_CyFunctionObject *m)
{
    Py_CLEAR(m->func_closure);
    Py_CLEAR(m->func.m_module);
    Py_CLEAR(m->func_dict);
    Py_CLEAR(m->func_name);
    Py_CLEAR(m->func_doc);
    Py_CLEAR(m->func_code);
    Py_CLEAR(m->func_classobj);
    Py_CLEAR(m->defaults_tuple);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_XDECREF(pydefaults[i]);
        PyMem_Free(m->defaults);
        m->defaults = NULL;
    }
    return 0;
}
static void __Pyx_CyFunction_dealloc(__pyx_CyFunctionObject *m)
{
    PyObject_GC_UnTrack(m);
    if (m->func_weakreflist != NULL)
        PyObject_ClearWeakRefs((PyObject *) m);
    __Pyx_CyFunction_clear(m);
    PyObject_GC_Del(m);
}
static int __Pyx_CyFunction_traverse(__pyx_CyFunctionObject *m, visitproc visit, void *arg)
{
    Py_VISIT(m->func_closure);
    Py_VISIT(m->func.m_module);
    Py_VISIT(m->func_dict);
    Py_VISIT(m->func_name);
    Py_VISIT(m->func_doc);
    Py_VISIT(m->func_code);
    Py_VISIT(m->func_classobj);
    Py_VISIT(m->defaults_tuple);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_VISIT(pydefaults[i]);
    }
    return 0;
}
static PyObject *__Pyx_CyFunction_descr_get(PyObject *func, PyObject *obj, PyObject *type)
{
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    if (m->flags & __Pyx_CYFUNCTION_STATICMETHOD) {
        Py_INCREF(func);
        return func;
    }
    if (m->flags & __Pyx_CYFUNCTION_CLASSMETHOD) {
        if (type == NULL)
            type = (PyObject *)(Py_TYPE(obj));
        return PyMethod_New(func,
                            type, (PyObject *)(Py_TYPE(type)));
    }
    if (obj == Py_None)
        obj = NULL;
    return PyMethod_New(func, obj, type);
}
static PyObject*
__Pyx_CyFunction_repr(__pyx_CyFunctionObject *op)
{
    PyObject *func_name = __Pyx_CyFunction_get_name(op);
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromFormat("<cyfunction %U at %p>",
                                func_name, (void *)op);
#else
    return PyString_FromFormat("<cyfunction %s at %p>",
                               PyString_AsString(func_name), (void *)op);
#endif
}
static PyTypeObject __pyx_CyFunctionType_type = {
    PyVarObject_HEAD_INIT(0, 0)
    __Pyx_NAMESTR("cython_function_or_method"), /*tp_name*/
    sizeof(__pyx_CyFunctionObject),   /*tp_basicsize*/
    0,                                  /*tp_itemsize*/
    (destructor) __Pyx_CyFunction_dealloc, /*tp_dealloc*/
    0,                                  /*tp_print*/
    0,                                  /*tp_getattr*/
    0,                                  /*tp_setattr*/
#if PY_MAJOR_VERSION < 3
    0,                                  /*tp_compare*/
#else
    0,                                  /*reserved*/
#endif
    (reprfunc) __Pyx_CyFunction_repr,   /*tp_repr*/
    0,                                  /*tp_as_number*/
    0,                                  /*tp_as_sequence*/
    0,                                  /*tp_as_mapping*/
    0,                                  /*tp_hash*/
    __Pyx_PyCFunction_Call,             /*tp_call*/
    0,                                  /*tp_str*/
    0,                                  /*tp_getattro*/
    0,                                  /*tp_setattro*/
    0,                                  /*tp_as_buffer*/
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC, /* tp_flags*/
    0,                                  /*tp_doc*/
    (traverseproc) __Pyx_CyFunction_traverse,   /*tp_traverse*/
    (inquiry) __Pyx_CyFunction_clear,   /*tp_clear*/
    0,                                  /*tp_richcompare*/
    offsetof(__pyx_CyFunctionObject, func_weakreflist), /* tp_weaklistoffse */
    0,                                  /*tp_iter*/
    0,                                  /*tp_iternext*/
    __pyx_CyFunction_methods,           /*tp_methods*/
    __pyx_CyFunction_members,           /*tp_members*/
    __pyx_CyFunction_getsets,           /*tp_getset*/
    0,                                  /*tp_base*/
    0,                                  /*tp_dict*/
    __Pyx_CyFunction_descr_get,         /*tp_descr_get*/
    0,                                  /*tp_descr_set*/
    offsetof(__pyx_CyFunctionObject, func_dict),/*tp_dictoffset*/
    0,                                  /*tp_init*/
    0,                                  /*tp_alloc*/
    0,                                  /*tp_new*/
    0,                                  /*tp_free*/
    0,                                  /*tp_is_gc*/
    0,                                  /*tp_bases*/
    0,                                  /*tp_mro*/
    0,                                  /*tp_cache*/
    0,                                  /*tp_subclasses*/
    0,                                  /*tp_weaklist*/
    0,                                  /*tp_del*/
#if PY_VERSION_HEX >= 0x02060000
    0,                                  /*tp_version_tag*/
#endif
};
static int __Pyx_CyFunction_init(void)
{
    if (PyType_Ready(&__pyx_CyFunctionType_type) < 0)
        return -1;
    __pyx_CyFunctionType = &__pyx_CyFunctionType_type;
    return 0;
}
void *__Pyx_CyFunction_InitDefaults(PyObject *func, size_t size, int pyobjects)
{
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults = PyMem_Malloc(size);
    if (!m->defaults)
        return PyErr_NoMemory();
    memset(m->defaults, 0, sizeof(size));
    m->defaults_pyobjects = pyobjects;
    return m->defaults;
}
static void __Pyx_CyFunction_SetDefaultsTuple(PyObject *func, PyObject *tuple)
{
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_tuple = tuple;
    Py_INCREF(tuple);
}

static CYTHON_INLINE unsigned char __Pyx_PyInt_AsUnsignedChar(PyObject* x) {
    const unsigned char neg_one = (unsigned char)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(unsigned char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned char)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to unsigned char" :
                    "value too large to convert to unsigned char");
            }
            return (unsigned char)-1;
        }
        return (unsigned char)val;
    }
    return (unsigned char)__Pyx_PyInt_AsUnsignedLong(x);
}

static CYTHON_INLINE unsigned short __Pyx_PyInt_AsUnsignedShort(PyObject* x) {
    const unsigned short neg_one = (unsigned short)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(unsigned short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned short)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to unsigned short" :
                    "value too large to convert to unsigned short");
            }
            return (unsigned short)-1;
        }
        return (unsigned short)val;
    }
    return (unsigned short)__Pyx_PyInt_AsUnsignedLong(x);
}

static CYTHON_INLINE unsigned int __Pyx_PyInt_AsUnsignedInt(PyObject* x) {
    const unsigned int neg_one = (unsigned int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(unsigned int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to unsigned int" :
                    "value too large to convert to unsigned int");
            }
            return (unsigned int)-1;
        }
        return (unsigned int)val;
    }
    return (unsigned int)__Pyx_PyInt_AsUnsignedLong(x);
}

static CYTHON_INLINE char __Pyx_PyInt_AsChar(PyObject* x) {
    const char neg_one = (char)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(char)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to char" :
                    "value too large to convert to char");
            }
            return (char)-1;
        }
        return (char)val;
    }
    return (char)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE short __Pyx_PyInt_AsShort(PyObject* x) {
    const short neg_one = (short)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(short)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to short" :
                    "value too large to convert to short");
            }
            return (short)-1;
        }
        return (short)val;
    }
    return (short)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE int __Pyx_PyInt_AsInt(PyObject* x) {
    const int neg_one = (int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to int" :
                    "value too large to convert to int");
            }
            return (int)-1;
        }
        return (int)val;
    }
    return (int)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE signed char __Pyx_PyInt_AsSignedChar(PyObject* x) {
    const signed char neg_one = (signed char)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(signed char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed char)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to signed char" :
                    "value too large to convert to signed char");
            }
            return (signed char)-1;
        }
        return (signed char)val;
    }
    return (signed char)__Pyx_PyInt_AsSignedLong(x);
}

static CYTHON_INLINE signed short __Pyx_PyInt_AsSignedShort(PyObject* x) {
    const signed short neg_one = (signed short)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(signed short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed short)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to signed short" :
                    "value too large to convert to signed short");
            }
            return (signed short)-1;
        }
        return (signed short)val;
    }
    return (signed short)__Pyx_PyInt_AsSignedLong(x);
}

static CYTHON_INLINE signed int __Pyx_PyInt_AsSignedInt(PyObject* x) {
    const signed int neg_one = (signed int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(signed int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to signed int" :
                    "value too large to convert to signed int");
            }
            return (signed int)-1;
        }
        return (signed int)val;
    }
    return (signed int)__Pyx_PyInt_AsSignedLong(x);
}

static CYTHON_INLINE int __Pyx_PyInt_AsLongDouble(PyObject* x) {
    const int neg_one = (int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to int" :
                    "value too large to convert to int");
            }
            return (int)-1;
        }
        return (int)val;
    }
    return (int)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE unsigned long __Pyx_PyInt_AsUnsignedLong(PyObject* x) {
    const unsigned long neg_one = (unsigned long)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to unsigned long");
            return (unsigned long)-1;
        }
        return (unsigned long)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to unsigned long");
                return (unsigned long)-1;
            }
            return (unsigned long)PyLong_AsUnsignedLong(x);
        } else {
            return (unsigned long)PyLong_AsLong(x);
        }
    } else {
        unsigned long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (unsigned long)-1;
        val = __Pyx_PyInt_AsUnsignedLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE unsigned PY_LONG_LONG __Pyx_PyInt_AsUnsignedLongLong(PyObject* x) {
    const unsigned PY_LONG_LONG neg_one = (unsigned PY_LONG_LONG)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to unsigned PY_LONG_LONG");
            return (unsigned PY_LONG_LONG)-1;
        }
        return (unsigned PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to unsigned PY_LONG_LONG");
                return (unsigned PY_LONG_LONG)-1;
            }
            return (unsigned PY_LONG_LONG)PyLong_AsUnsignedLongLong(x);
        } else {
            return (unsigned PY_LONG_LONG)PyLong_AsLongLong(x);
        }
    } else {
        unsigned PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (unsigned PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsUnsignedLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE long __Pyx_PyInt_AsLong(PyObject* x) {
    const long neg_one = (long)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to long");
            return (long)-1;
        }
        return (long)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to long");
                return (long)-1;
            }
            return (long)PyLong_AsUnsignedLong(x);
        } else {
            return (long)PyLong_AsLong(x);
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (long)-1;
        val = __Pyx_PyInt_AsLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE PY_LONG_LONG __Pyx_PyInt_AsLongLong(PyObject* x) {
    const PY_LONG_LONG neg_one = (PY_LONG_LONG)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to PY_LONG_LONG");
            return (PY_LONG_LONG)-1;
        }
        return (PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to PY_LONG_LONG");
                return (PY_LONG_LONG)-1;
            }
            return (PY_LONG_LONG)PyLong_AsUnsignedLongLong(x);
        } else {
            return (PY_LONG_LONG)PyLong_AsLongLong(x);
        }
    } else {
        PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE signed long __Pyx_PyInt_AsSignedLong(PyObject* x) {
    const signed long neg_one = (signed long)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to signed long");
            return (signed long)-1;
        }
        return (signed long)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to signed long");
                return (signed long)-1;
            }
            return (signed long)PyLong_AsUnsignedLong(x);
        } else {
            return (signed long)PyLong_AsLong(x);
        }
    } else {
        signed long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (signed long)-1;
        val = __Pyx_PyInt_AsSignedLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE signed PY_LONG_LONG __Pyx_PyInt_AsSignedLongLong(PyObject* x) {
    const signed PY_LONG_LONG neg_one = (signed PY_LONG_LONG)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to signed PY_LONG_LONG");
            return (signed PY_LONG_LONG)-1;
        }
        return (signed PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to signed PY_LONG_LONG");
                return (signed PY_LONG_LONG)-1;
            }
            return (signed PY_LONG_LONG)PyLong_AsUnsignedLongLong(x);
        } else {
            return (signed PY_LONG_LONG)PyLong_AsLongLong(x);
        }
    } else {
        signed PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (signed PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsSignedLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE void __Pyx_ExceptionSwap(PyObject **type, PyObject **value, PyObject **tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyThreadState *tstate = PyThreadState_GET();
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = *type;
    tstate->exc_value = *value;
    tstate->exc_traceback = *tb;
    *type = tmp_type;
    *value = tmp_value;
    *tb = tmp_tb;
}

static PyObject *__Pyx_Generator_Next(PyObject *self);
static PyObject *__Pyx_Generator_Send(PyObject *self, PyObject *value);
static PyObject *__Pyx_Generator_Close(PyObject *self);
static PyObject *__Pyx_Generator_Throw(PyObject *gen, PyObject *args);
static CYTHON_INLINE
void __Pyx_Generator_ExceptionClear(__pyx_GeneratorObject *self)
{
    PyObject *exc_type = self->exc_type;
    PyObject *exc_value = self->exc_value;
    PyObject *exc_traceback = self->exc_traceback;
    self->exc_type = NULL;
    self->exc_value = NULL;
    self->exc_traceback = NULL;
    Py_XDECREF(exc_type);
    Py_XDECREF(exc_value);
    Py_XDECREF(exc_traceback);
}
static CYTHON_INLINE
PyObject *__Pyx_Generator_SendEx(__pyx_GeneratorObject *self, PyObject *value)
{
    PyObject *retval;
    if (unlikely(self->is_running)) {
        PyErr_SetString(PyExc_ValueError,
                        "generator already executing");
        return NULL;
    }
    if (unlikely(self->resume_label == 0)) {
        if (unlikely(value && value != Py_None)) {
            PyErr_SetString(PyExc_TypeError,
                            "can't send non-None value to a "
                            "just-started generator");
            return NULL;
        }
    }
    if (unlikely(self->resume_label == -1)) {
        PyErr_SetNone(PyExc_StopIteration);
        return NULL;
    }
    if (value)
        __Pyx_ExceptionSwap(&self->exc_type, &self->exc_value, &self->exc_traceback);
    else
        __Pyx_Generator_ExceptionClear(self);
    self->is_running = 1;
    retval = self->body((PyObject *) self, value);
    self->is_running = 0;
    if (retval)
        __Pyx_ExceptionSwap(&self->exc_type, &self->exc_value, &self->exc_traceback);
    else
        __Pyx_Generator_ExceptionClear(self);
    return retval;
}
static PyObject *__Pyx_Generator_Next(PyObject *self)
{
    return __Pyx_Generator_SendEx((__pyx_GeneratorObject *) self, Py_None);
}
static PyObject *__Pyx_Generator_Send(PyObject *self, PyObject *value)
{
    return __Pyx_Generator_SendEx((__pyx_GeneratorObject *) self, value);
}
static PyObject *__Pyx_Generator_Close(PyObject *self)
{
    __pyx_GeneratorObject *generator = (__pyx_GeneratorObject *) self;
    PyObject *retval;
#if PY_VERSION_HEX < 0x02050000
    PyErr_SetNone(PyExc_StopIteration);
#else
    PyErr_SetNone(PyExc_GeneratorExit);
#endif
    retval = __Pyx_Generator_SendEx(generator, NULL);
    if (retval) {
        Py_DECREF(retval);
        PyErr_SetString(PyExc_RuntimeError,
                        "generator ignored GeneratorExit");
        return NULL;
    }
#if PY_VERSION_HEX < 0x02050000
    if (PyErr_ExceptionMatches(PyExc_StopIteration))
#else
    if (PyErr_ExceptionMatches(PyExc_StopIteration)
        || PyErr_ExceptionMatches(PyExc_GeneratorExit))
#endif
    {
        PyErr_Clear();          /* ignore these errors */
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
}
static PyObject *__Pyx_Generator_Throw(PyObject *self, PyObject *args)
{
    __pyx_GeneratorObject *generator = (__pyx_GeneratorObject *) self;
    PyObject *typ;
    PyObject *tb = NULL;
    PyObject *val = NULL;
    if (!PyArg_UnpackTuple(args, (char *)"throw", 1, 3, &typ, &val, &tb))
        return NULL;
    __Pyx_Raise(typ, val, tb, NULL);
    return __Pyx_Generator_SendEx(generator, NULL);
}
static int
__Pyx_Generator_traverse(PyObject *self, visitproc visit, void *arg)
{
    __pyx_GeneratorObject *gen = (__pyx_GeneratorObject *) self;
    Py_VISIT(gen->closure);
    Py_VISIT(gen->classobj);
    Py_VISIT(gen->exc_type);
    Py_VISIT(gen->exc_value);
    Py_VISIT(gen->exc_traceback);
    return 0;
}
static void
__Pyx_Generator_dealloc(PyObject *self)
{
    __pyx_GeneratorObject *gen = (__pyx_GeneratorObject *) self;
    PyObject_GC_UnTrack(gen);
    if (gen->gi_weakreflist != NULL)
        PyObject_ClearWeakRefs(self);
    PyObject_GC_Track(self);
    if (gen->resume_label > 0) {
        Py_TYPE(gen)->tp_del(self);
        if (self->ob_refcnt > 0)
            return;                     /* resurrected.  :( */
    }
    PyObject_GC_UnTrack(self);
    Py_CLEAR(gen->closure);
    Py_CLEAR(gen->classobj);
    Py_CLEAR(gen->exc_type);
    Py_CLEAR(gen->exc_value);
    Py_CLEAR(gen->exc_traceback);
    PyObject_GC_Del(gen);
}
static void
__Pyx_Generator_del(PyObject *self)
{
    PyObject *res;
    PyObject *error_type, *error_value, *error_traceback;
    __pyx_GeneratorObject *gen = (__pyx_GeneratorObject *) self;
    if (gen->resume_label <= 0)
        return ;
    assert(self->ob_refcnt == 0);
    self->ob_refcnt = 1;
    __Pyx_ErrFetch(&error_type, &error_value, &error_traceback);
    res = __Pyx_Generator_Close(self);
    if (res == NULL)
        PyErr_WriteUnraisable(self);
    else
        Py_DECREF(res);
    __Pyx_ErrRestore(error_type, error_value, error_traceback);
    /* Undo the temporary resurrection; can't use DECREF here, it would
     * cause a recursive call.
     */
    assert(self->ob_refcnt > 0);
    if (--self->ob_refcnt == 0)
        return; /* this is the normal path out */
    /* close() resurrected it!  Make it look like the original Py_DECREF
     * never happened.
     */
    {
        Py_ssize_t refcnt = self->ob_refcnt;
        _Py_NewReference(self);
        self->ob_refcnt = refcnt;
    }
    assert(PyType_IS_GC(self->ob_type) &&
           _Py_AS_GC(self)->gc.gc_refs != _PyGC_REFS_UNTRACKED);
    /* If Py_REF_DEBUG, _Py_NewReference bumped _Py_RefTotal, so
     * we need to undo that. */
    _Py_DEC_REFTOTAL;
    /* If Py_TRACE_REFS, _Py_NewReference re-added self to the object
     * chain, so no more to do there.
     * If COUNT_ALLOCS, the original decref bumped tp_frees, and
     * _Py_NewReference bumped tp_allocs:  both of those need to be
     * undone.
     */
#ifdef COUNT_ALLOCS
    --self->ob_type->tp_frees;
    --self->ob_type->tp_allocs;
#endif
}
static PyMemberDef __pyx_Generator_memberlist[] = {
    {(char *) "gi_running",
     T_INT,
     offsetof(__pyx_GeneratorObject, is_running),
     READONLY,
     NULL},
    {0, 0, 0, 0, 0}
};
static PyMethodDef __pyx_Generator_methods[] = {
    {__Pyx_NAMESTR("send"), (PyCFunction) __Pyx_Generator_Send, METH_O, 0},
    {__Pyx_NAMESTR("throw"), (PyCFunction) __Pyx_Generator_Throw, METH_VARARGS, 0},
    {__Pyx_NAMESTR("close"), (PyCFunction) __Pyx_Generator_Close, METH_NOARGS, 0},
    {0, 0, 0, 0}
};
static PyTypeObject __pyx_GeneratorType = {
    PyVarObject_HEAD_INIT(0, 0)
    __Pyx_NAMESTR("generator"),         /*tp_name*/
    sizeof(__pyx_GeneratorObject),      /*tp_basicsize*/
    0,                                  /*tp_itemsize*/
    (destructor) __Pyx_Generator_dealloc,/*tp_dealloc*/
    0,                                  /*tp_print*/
    0,                                  /*tp_getattr*/
    0,                                  /*tp_setattr*/
#if PY_MAJOR_VERSION < 3
    0,                                  /*tp_compare*/
#else
    0,                                  /*reserved*/
#endif
    0,                                   /*tp_repr*/
    0,                                  /*tp_as_number*/
    0,                                  /*tp_as_sequence*/
    0,                                  /*tp_as_mapping*/
    0,                                  /*tp_hash*/
    0,                                  /*tp_call*/
    0,                                  /*tp_str*/
    PyObject_GenericGetAttr,            /*tp_getattro*/
    0,                                  /*tp_setattro*/
    0,                                  /*tp_as_buffer*/
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC, /* tp_flags*/
    0,                                  /*tp_doc*/
    (traverseproc) __Pyx_Generator_traverse,   /*tp_traverse*/
    0,                                  /*tp_clear*/
    0,                                  /*tp_richcompare*/
    offsetof(__pyx_GeneratorObject, gi_weakreflist), /* tp_weaklistoffse */
    PyObject_SelfIter,                  /*tp_iter*/
    (iternextfunc) __Pyx_Generator_Next, /*tp_iternext*/
    __pyx_Generator_methods,            /*tp_methods*/
    __pyx_Generator_memberlist,         /*tp_members*/
    0,                                  /*tp_getset*/
    0,                                  /*tp_base*/
    0,                                  /*tp_dict*/
    0,                                  /*tp_descr_get*/
    0,                                  /*tp_descr_set*/
    0,                                  /*tp_dictoffset*/
    0,                                  /*tp_init*/
    0,                                  /*tp_alloc*/
    0,                                  /*tp_new*/
    0,                                  /*tp_free*/
    0,                                  /*tp_is_gc*/
    0,                                  /*tp_bases*/
    0,                                  /*tp_mro*/
    0,                                  /*tp_cache*/
    0,                                  /*tp_subclasses*/
    0,                                  /*tp_weaklist*/
    __Pyx_Generator_del,                /*tp_del*/
#if PY_VERSION_HEX >= 0x02060000
    0,                                  /*tp_version_tag*/
#endif
};
static
__pyx_GeneratorObject *__Pyx_Generator_New(__pyx_generator_body_t body,
                                           PyObject *closure)
{
    __pyx_GeneratorObject *gen =
        PyObject_GC_New(__pyx_GeneratorObject, &__pyx_GeneratorType);
    if (gen == NULL)
        return NULL;
    gen->body = body;
    gen->closure = closure;
    Py_XINCREF(closure);
    gen->is_running = 0;
    gen->resume_label = 0;
    gen->classobj = NULL;
    gen->exc_type = NULL;
    gen->exc_value = NULL;
    gen->exc_traceback = NULL;
    gen->gi_weakreflist = NULL;
    PyObject_GC_Track(gen);
    return gen;
}
static int __pyx_Generator_init(void)
{
    return PyType_Ready(&__pyx_GeneratorType);
}

static void __Pyx_WriteUnraisable(const char *name, int clineno,
                                  int lineno, const char *filename) {
    PyObject *old_exc, *old_val, *old_tb;
    PyObject *ctx;
    __Pyx_ErrFetch(&old_exc, &old_val, &old_tb);
    #if PY_MAJOR_VERSION < 3
    ctx = PyString_FromString(name);
    #else
    ctx = PyUnicode_FromString(name);
    #endif
    __Pyx_ErrRestore(old_exc, old_val, old_tb);
    if (!ctx) {
        PyErr_WriteUnraisable(Py_None);
    } else {
        PyErr_WriteUnraisable(ctx);
        Py_DECREF(ctx);
    }
}

static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        #if PY_VERSION_HEX < 0x02050000
        return PyErr_Warn(NULL, message);
        #else
        return PyErr_WarnEx(NULL, message, 1);
        #endif
    }
    return 0;
}

static int __Pyx_SetVtable(PyObject *dict, void *vtable) {
#if PY_VERSION_HEX >= 0x02070000 && !(PY_MAJOR_VERSION==3&&PY_MINOR_VERSION==0)
    PyObject *ob = PyCapsule_New(vtable, 0, 0);
#else
    PyObject *ob = PyCObject_FromVoidPtr(vtable, 0);
#endif
    if (!ob)
        goto bad;
    if (PyDict_SetItemString(dict, "__pyx_vtable__", ob) < 0)
        goto bad;
    Py_DECREF(ob);
    return 0;
bad:
    Py_XDECREF(ob);
    return -1;
}

static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = (start + end) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, new_max*sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,            /*int argcount,*/
        0,            /*int kwonlyargcount,*/
        0,            /*int nlocals,*/
        0,            /*int stacksize,*/
        0,            /*int flags,*/
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,      /*int firstlineno,*/
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_globals = 0;
    PyFrameObject *py_frame = 0;
    py_code = __pyx_find_code_object(c_line ? c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? c_line : py_line, py_code);
    }
    py_globals = PyModule_GetDict(__pyx_m);
    if (!py_globals) goto bad;
    py_frame = PyFrame_New(
        PyThreadState_GET(), /*PyThreadState *tstate,*/
        py_code,             /*PyCodeObject *code,*/
        py_globals,          /*PyObject *globals,*/
        0                    /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    py_frame->f_lineno = py_line;
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else  /* Python 3+ has unicode identifiers */
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        ++t;
    }
    return 0;
}


/* Type Conversion Functions */

static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}

static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x) {
  PyNumberMethods *m;
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_VERSION_HEX < 0x03000000
  if (PyInt_Check(x) || PyLong_Check(x))
#else
  if (PyLong_Check(x))
#endif
    return Py_INCREF(x), x;
  m = Py_TYPE(x)->tp_as_number;
#if PY_VERSION_HEX < 0x03000000
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = PyNumber_Long(x);
  }
#else
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Long(x);
  }
#endif
  if (res) {
#if PY_VERSION_HEX < 0x03000000
    if (!PyInt_Check(res) && !PyLong_Check(res)) {
#else
    if (!PyLong_Check(res)) {
#endif
      PyErr_Format(PyExc_TypeError,
                   "__%s__ returned non-%s (type %.200s)",
                   name, name, Py_TYPE(res)->tp_name);
      Py_DECREF(res);
      return NULL;
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}

static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject* x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}

static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
#if PY_VERSION_HEX < 0x02050000
   if (ival <= LONG_MAX)
       return PyInt_FromLong((long)ival);
   else {
       unsigned char *bytes = (unsigned char *) &ival;
       int one = 1; int little = (int)*(unsigned char*)&one;
       return _PyLong_FromByteArray(bytes, sizeof(size_t), little, 0);
   }
#else
   return PyInt_FromSize_t(ival);
#endif
}

static CYTHON_INLINE size_t __Pyx_PyInt_AsSize_t(PyObject* x) {
   unsigned PY_LONG_LONG val = __Pyx_PyInt_AsUnsignedLongLong(x);
   if (unlikely(val == (unsigned PY_LONG_LONG)-1 && PyErr_Occurred())) {
       return (size_t)-1;
   } else if (unlikely(val != (unsigned PY_LONG_LONG)(size_t)val)) {
       PyErr_SetString(PyExc_OverflowError,
                       "value too large to convert to size_t");
       return (size_t)-1;
   }
   return (size_t)val;
}


#endif /* Py_PYTHON_H */
